{"version":3,"sources":["flagrate/switch.ts"],"names":[],"mappings":"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","file":"switch.js","sourcesContent":["/*\r\n   Copyright 2016 Webnium\r\n\r\n   Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   you may not use this file except in compliance with the License.\r\n   You may obtain a copy of the License at\r\n\r\n       http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n   Unless required by applicable law or agreed to in writing, software\r\n   distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   See the License for the specific language governing permissions and\r\n   limitations under the License.\r\n*/\r\n\"use strict\";\r\n\r\nimport { extendObject } from \"./util\";\r\nimport { Attribute, Property } from \"./element\";\r\nimport { Button } from \"./button\";\r\n\r\n/*?\r\n    class flagrate.Switch\r\n\r\n    #### Example\r\n\r\n        var sw = flagrate.createSwitch().insertTo(x);\r\n\r\n        sw.on(\"on\", function () {\r\n            console.log(\"on\");\r\n        });\r\n        sw.on(\"off\", function () {\r\n            console.log(\"off\");\r\n        });\r\n        sw.on(\"change\", function (e) {\r\n            console.log(e.target.isOn());\r\n        });\r\n\r\n    #### Structure\r\n\r\n    <div class=\"example-container\">\r\n        <button class=\"flagrate flagrate-button flagrate-switch\"></button>\r\n    </div>\r\n\r\n        <button class=\"flagrate flagrate-button flagrate-switch\"></button>\r\n\r\n    #### Events\r\n\r\n    * `on`: when the switch is turned on.\r\n    * `off`: when the switch is turned off.\r\n    * `change`: when the on/off status is changed.\r\n\r\n    #### Inheritances\r\n\r\n    * flagrate.Button\r\n    * [HTMLButtonElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLButtonElement) (MDN)\r\n**/\r\nexport interface Switch extends Instance, Button { }\r\n\r\nexport interface Class {\r\n    new (option?: Option): Switch;\r\n    prototype: Instance;\r\n}\r\n\r\nexport interface Instance {\r\n    isOn(): boolean;\r\n    switchOn(): this;\r\n    switchOff(): this;\r\n    toggleSwitch(): this;\r\n}\r\n\r\nexport interface Option {\r\n    /** id attribute. */\r\n    id?: string;\r\n\r\n    /** class attribute. */\r\n    className?: string;\r\n\r\n    /** attribute/value pairs properties. */\r\n    attribute?: Attribute;\r\n\r\n    /** CSS style properties (uses flagrate.Element.setStyle). */\r\n    style?: Property;\r\n\r\n    /** default is false. */\r\n    isFocused?: boolean;\r\n\r\n    /** default is false. */\r\n    isDisabled?: boolean;\r\n\r\n    /** default is false. */\r\n    isOn?: boolean;\r\n}\r\n\r\n/*?\r\n    flagrate.createSwitch(option)\r\n    new flagrate.Switch(option)\r\n    - option (Object) - options.\r\n**/\r\nfunction FSwitch(opt: Option = {}) {\r\n\r\n    //create\r\n    const sw = <Switch>new Button({\r\n        id        : opt.id,\r\n        className : opt.className,\r\n        attribute : opt.attribute,\r\n        style     : opt.style,\r\n        isFocused : opt.isFocused,\r\n        isDisabled: opt.isDisabled\r\n    });\r\n    extendObject(sw, this);\r\n\r\n    sw.addEventListener(\"select\", sw.toggleSwitch.bind(sw));\r\n\r\n    sw.addClassName(\"flagrate-switch\");\r\n\r\n    if (sw.dataset) {\r\n        sw.dataset[\"flagrateSwitchStatus\"] = opt.isOn ? \"on\" : \"off\";\r\n    } else {\r\n        sw.writeAttribute(\"data-flagrate-switch-status\", opt.isOn ? \"on\" : \"off\");\r\n    }\r\n\r\n    return sw;\r\n}\r\n\r\nexport const Switch = FSwitch as any as Class;\r\n\r\nexport function createSwitch(option?: Option): Switch {\r\n    return new Switch(option);\r\n}\r\n\r\nSwitch.prototype = {\r\n    isOn() {\r\n\r\n        if (this.dataset) {\r\n            return this.dataset.flagrateSwitchStatus === \"on\";\r\n        } else {\r\n            return this.readAttribute(\"data-flagrate-switch-status\") === \"on\";\r\n        }\r\n    },\r\n\r\n    switchOn() {\r\n\r\n        if (this.dataset) {\r\n            this.dataset.flagrateSwitchStatus = \"on\";\r\n        } else {\r\n            this.writeAttribute(\"data-flagrate-switch-status\", \"on\");\r\n        }\r\n\r\n        return this.fire(\"on\", { targetSwitch: this })\r\n                   .fire(\"change\", { targetSwitch: this });\r\n    },\r\n\r\n    switchOff() {\r\n\r\n        if (this.dataset) {\r\n            this.dataset.flagrateSwitchStatus = \"off\";\r\n        } else {\r\n            this.writeAttribute(\"data-flagrate-switch-status\", \"off\");\r\n        }\r\n\r\n        return this.fire(\"off\", { targetSwitch: this })\r\n                   .fire(\"change\", { targetSwitch: this });\r\n    },\r\n\r\n    toggleSwitch() {\r\n        return this.isOn() ? this.switchOff() : this.switchOn();\r\n    }\r\n};"]}
{"version":3,"sources":["flagrate/element.ts"],"names":[],"mappings":"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","file":"element.js","sourcesContent":["/*\r\n   Copyright 2016 Webnium\r\n\r\n   Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   you may not use this file except in compliance with the License.\r\n   You may obtain a copy of the License at\r\n\r\n       http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n   Unless required by applicable law or agreed to in writing, software\r\n   distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   See the License for the specific language governing permissions and\r\n   limitations under the License.\r\n*/\r\n\"use strict\";\r\n\r\nimport { extendObject } from \"./util\";\r\n\r\n/*?\r\n    class flagrate.Element\r\n\r\n    The flagrate.Element object provides a variety of powerful DOM methods for interacting\r\n    with DOM elements.\r\n\r\n    #### Example\r\n\r\n        var preview = flagrate.createElement().insertTo(x);\r\n        preview.on(\"updated\", function (e) {\r\n            console.log(\"fired custom event\", e);\r\n        });\r\n\r\n        var input = flagrate.createTextInput().insertTo(x);\r\n        input.on(\"change\", function () {\r\n            preview.updateText(input.value);\r\n            preview.fire(\"updated\");\r\n        });\r\n\r\n    #### Inheritance\r\n\r\n    * [HTMLElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement) (MDN)\r\n**/\r\nexport interface FHTMLElement extends Instance, HTMLElement { }\r\nexport interface FHTMLAnchorElement extends Instance, HTMLAnchorElement { }\r\nexport interface FHTMLAppletElement extends Instance, HTMLAppletElement { }\r\nexport interface FHTMLAreaElement extends Instance, HTMLAreaElement { }\r\nexport interface FHTMLAudioElement extends Instance, HTMLAudioElement { }\r\nexport interface FHTMLBaseElement extends Instance, HTMLBaseElement { }\r\nexport interface FHTMLBaseFontElement extends Instance, HTMLBaseFontElement { }\r\nexport interface FHTMLBodyElement extends Instance, HTMLBodyElement { }\r\nexport interface FHTMLBRElement extends Instance, HTMLBRElement { }\r\nexport interface FHTMLButtonElement extends Instance, HTMLButtonElement { }\r\nexport interface FHTMLCanvasElement extends Instance, HTMLCanvasElement { }\r\nexport interface FHTMLTableCaptionElement extends Instance, HTMLTableCaptionElement { }\r\nexport interface FHTMLTableColElement extends Instance, HTMLTableColElement { }\r\nexport interface FHTMLTableColElement extends Instance, HTMLTableColElement { }\r\nexport interface FHTMLDataListElement extends Instance, HTMLDataListElement { }\r\nexport interface FHTMLModElement extends Instance, HTMLModElement { }\r\nexport interface FHTMLDirectoryElement extends Instance, HTMLDirectoryElement { }\r\nexport interface FHTMLDivElement extends Instance, HTMLDivElement { }\r\nexport interface FHTMLDListElement extends Instance, HTMLDListElement { }\r\nexport interface FHTMLEmbedElement extends Instance, HTMLEmbedElement { }\r\nexport interface FHTMLFieldSetElement extends Instance, HTMLFieldSetElement { }\r\nexport interface FHTMLFontElement extends Instance, HTMLFontElement { }\r\nexport interface FHTMLFormElement extends Instance, HTMLFormElement { }\r\nexport interface FHTMLFrameElement extends Instance, HTMLFrameElement { }\r\nexport interface FHTMLFrameSetElement extends Instance, HTMLFrameSetElement { }\r\nexport interface FHTMLHeadingElement extends Instance, HTMLHeadingElement { }\r\nexport interface FHTMLHeadingElement extends Instance, HTMLHeadingElement { }\r\nexport interface FHTMLHeadingElement extends Instance, HTMLHeadingElement { }\r\nexport interface FHTMLHeadingElement extends Instance, HTMLHeadingElement { }\r\nexport interface FHTMLHeadingElement extends Instance, HTMLHeadingElement { }\r\nexport interface FHTMLHeadingElement extends Instance, HTMLHeadingElement { }\r\nexport interface FHTMLHeadElement extends Instance, HTMLHeadElement { }\r\nexport interface FHTMLHRElement extends Instance, HTMLHRElement { }\r\nexport interface FHTMLHtmlElement extends Instance, HTMLHtmlElement { }\r\nexport interface FHTMLIFrameElement extends Instance, HTMLIFrameElement { }\r\nexport interface FHTMLImageElement extends Instance, HTMLImageElement { }\r\nexport interface FHTMLInputElement extends Instance, HTMLInputElement { }\r\nexport interface FHTMLModElement extends Instance, HTMLModElement { }\r\nexport interface FHTMLLabelElement extends Instance, HTMLLabelElement { }\r\nexport interface FHTMLLegendElement extends Instance, HTMLLegendElement { }\r\nexport interface FHTMLLIElement extends Instance, HTMLLIElement { }\r\nexport interface FHTMLLinkElement extends Instance, HTMLLinkElement { }\r\nexport interface FHTMLMapElement extends Instance, HTMLMapElement { }\r\nexport interface FHTMLMarqueeElement extends Instance, HTMLMarqueeElement { }\r\nexport interface FHTMLMenuElement extends Instance, HTMLMenuElement { }\r\nexport interface FHTMLMetaElement extends Instance, HTMLMetaElement { }\r\nexport interface FHTMLObjectElement extends Instance, HTMLObjectElement { }\r\nexport interface FHTMLOListElement extends Instance, HTMLOListElement { }\r\nexport interface FHTMLOptGroupElement extends Instance, HTMLOptGroupElement { }\r\nexport interface FHTMLOptionElement extends Instance, HTMLOptionElement { }\r\nexport interface FHTMLParagraphElement extends Instance, HTMLParagraphElement { }\r\nexport interface FHTMLParamElement extends Instance, HTMLParamElement { }\r\nexport interface FHTMLPreElement extends Instance, HTMLPreElement { }\r\nexport interface FHTMLProgressElement extends Instance, HTMLProgressElement { }\r\nexport interface FHTMLQuoteElement extends Instance, HTMLQuoteElement { }\r\nexport interface FHTMLScriptElement extends Instance, HTMLScriptElement { }\r\nexport interface FHTMLSelectElement extends Instance, HTMLSelectElement { }\r\nexport interface FHTMLSourceElement extends Instance, HTMLSourceElement { }\r\nexport interface FHTMLSpanElement extends Instance, HTMLSpanElement { }\r\nexport interface FHTMLStyleElement extends Instance, HTMLStyleElement { }\r\nexport interface FHTMLTableElement extends Instance, HTMLTableElement { }\r\nexport interface FHTMLTableSectionElement extends Instance, HTMLTableSectionElement { }\r\nexport interface FHTMLTableDataCellElement extends Instance, HTMLTableDataCellElement { }\r\nexport interface FHTMLTextAreaElement extends Instance, HTMLTextAreaElement { }\r\nexport interface FHTMLTableSectionElement extends Instance, HTMLTableSectionElement { }\r\nexport interface FHTMLTableHeaderCellElement extends Instance, HTMLTableHeaderCellElement { }\r\nexport interface FHTMLTableSectionElement extends Instance, HTMLTableSectionElement { }\r\nexport interface FHTMLTitleElement extends Instance, HTMLTitleElement { }\r\nexport interface FHTMLTableRowElement extends Instance, HTMLTableRowElement { }\r\nexport interface FHTMLTrackElement extends Instance, HTMLTrackElement { }\r\nexport interface FHTMLUListElement extends Instance, HTMLUListElement { }\r\nexport interface FHTMLVideoElement extends Instance, HTMLVideoElement { }\r\nexport interface FHTMLUnknownElement extends Instance, HTMLUnknownElement { }\r\n\r\nexport interface Class {\r\n    new (tagName: \"a\", attribute?: Attribute): FHTMLAnchorElement;\r\n    new (tagName: \"abbr\", attribute?: Attribute): FHTMLElement;\r\n    new (tagName: \"acronym\", attribute?: Attribute): FHTMLElement;\r\n    new (tagName: \"address\", attribute?: Attribute): FHTMLElement;\r\n    new (tagName: \"applet\", attribute?: Attribute): FHTMLAppletElement;\r\n    new (tagName: \"area\", attribute?: Attribute): FHTMLAreaElement;\r\n    new (tagName: \"audio\", attribute?: Attribute): FHTMLAudioElement;\r\n    new (tagName: \"b\", attribute?: Attribute): FHTMLElement;\r\n    new (tagName: \"base\", attribute?: Attribute): FHTMLBaseElement;\r\n    new (tagName: \"basefont\", attribute?: Attribute): FHTMLBaseFontElement;\r\n    new (tagName: \"bdo\", attribute?: Attribute): FHTMLElement;\r\n    new (tagName: \"big\", attribute?: Attribute): FHTMLElement;\r\n    new (tagName: \"blockquote\", attribute?: Attribute): FHTMLQuoteElement;\r\n    new (tagName: \"body\", attribute?: Attribute): FHTMLBodyElement;\r\n    new (tagName: \"br\", attribute?: Attribute): FHTMLBRElement;\r\n    new (tagName: \"button\", attribute?: Attribute): FHTMLButtonElement;\r\n    new (tagName: \"canvas\", attribute?: Attribute): FHTMLCanvasElement;\r\n    new (tagName: \"caption\", attribute?: Attribute): FHTMLTableCaptionElement;\r\n    new (tagName: \"center\", attribute?: Attribute): FHTMLElement;\r\n    new (tagName: \"cite\", attribute?: Attribute): FHTMLElement;\r\n    new (tagName: \"code\", attribute?: Attribute): FHTMLElement;\r\n    new (tagName: \"col\", attribute?: Attribute): FHTMLTableColElement;\r\n    new (tagName: \"colgroup\", attribute?: Attribute): FHTMLTableColElement;\r\n    new (tagName: \"datalist\", attribute?: Attribute): FHTMLDataListElement;\r\n    new (tagName: \"dd\", attribute?: Attribute): FHTMLElement;\r\n    new (tagName: \"del\", attribute?: Attribute): FHTMLModElement;\r\n    new (tagName: \"dfn\", attribute?: Attribute): FHTMLElement;\r\n    new (tagName: \"dir\", attribute?: Attribute): FHTMLDirectoryElement;\r\n    new (tagName?: \"div\", attribute?: Attribute): FHTMLDivElement;\r\n    new (tagName: \"dl\", attribute?: Attribute): FHTMLDListElement;\r\n    new (tagName: \"dt\", attribute?: Attribute): FHTMLElement;\r\n    new (tagName: \"em\", attribute?: Attribute): FHTMLElement;\r\n    new (tagName: \"embed\", attribute?: Attribute): FHTMLEmbedElement;\r\n    new (tagName: \"fieldset\", attribute?: Attribute): FHTMLFieldSetElement;\r\n    new (tagName: \"font\", attribute?: Attribute): FHTMLFontElement;\r\n    new (tagName: \"form\", attribute?: Attribute): FHTMLFormElement;\r\n    new (tagName: \"frame\", attribute?: Attribute): FHTMLFrameElement;\r\n    new (tagName: \"frameset\", attribute?: Attribute): FHTMLFrameSetElement;\r\n    new (tagName: \"h1\", attribute?: Attribute): FHTMLHeadingElement;\r\n    new (tagName: \"h2\", attribute?: Attribute): FHTMLHeadingElement;\r\n    new (tagName: \"h3\", attribute?: Attribute): FHTMLHeadingElement;\r\n    new (tagName: \"h4\", attribute?: Attribute): FHTMLHeadingElement;\r\n    new (tagName: \"h5\", attribute?: Attribute): FHTMLHeadingElement;\r\n    new (tagName: \"h6\", attribute?: Attribute): FHTMLHeadingElement;\r\n    new (tagName: \"head\", attribute?: Attribute): FHTMLHeadElement;\r\n    new (tagName: \"hr\", attribute?: Attribute): FHTMLHRElement;\r\n    new (tagName: \"html\", attribute?: Attribute): FHTMLHtmlElement;\r\n    new (tagName: \"i\", attribute?: Attribute): FHTMLElement;\r\n    new (tagName: \"iframe\", attribute?: Attribute): FHTMLIFrameElement;\r\n    new (tagName: \"img\", attribute?: Attribute): FHTMLImageElement;\r\n    new (tagName: \"input\", attribute?: Attribute): FHTMLInputElement;\r\n    new (tagName: \"ins\", attribute?: Attribute): FHTMLModElement;\r\n    new (tagName: \"isindex\", attribute?: Attribute): FHTMLUnknownElement;\r\n    new (tagName: \"kbd\", attribute?: Attribute): FHTMLElement;\r\n    new (tagName: \"keygen\", attribute?: Attribute): FHTMLElement;\r\n    new (tagName: \"label\", attribute?: Attribute): FHTMLLabelElement;\r\n    new (tagName: \"legend\", attribute?: Attribute): FHTMLLegendElement;\r\n    new (tagName: \"li\", attribute?: Attribute): FHTMLLIElement;\r\n    new (tagName: \"link\", attribute?: Attribute): FHTMLLinkElement;\r\n    new (tagName: \"listing\", attribute?: Attribute): FHTMLPreElement;\r\n    new (tagName: \"map\", attribute?: Attribute): FHTMLMapElement;\r\n    new (tagName: \"marquee\", attribute?: Attribute): FHTMLMarqueeElement;\r\n    new (tagName: \"menu\", attribute?: Attribute): FHTMLMenuElement;\r\n    new (tagName: \"meta\", attribute?: Attribute): FHTMLMetaElement;\r\n    new (tagName: \"nextid\", attribute?: Attribute): FHTMLUnknownElement;\r\n    new (tagName: \"nobr\", attribute?: Attribute): FHTMLElement;\r\n    new (tagName: \"object\", attribute?: Attribute): FHTMLObjectElement;\r\n    new (tagName: \"ol\", attribute?: Attribute): FHTMLOListElement;\r\n    new (tagName: \"optgroup\", attribute?: Attribute): FHTMLOptGroupElement;\r\n    new (tagName: \"option\", attribute?: Attribute): FHTMLOptionElement;\r\n    new (tagName: \"p\", attribute?: Attribute): FHTMLParagraphElement;\r\n    new (tagName: \"param\", attribute?: Attribute): FHTMLParamElement;\r\n    new (tagName: \"plaintext\", attribute?: Attribute): FHTMLElement;\r\n    new (tagName: \"pre\", attribute?: Attribute): FHTMLPreElement;\r\n    new (tagName: \"progress\", attribute?: Attribute): FHTMLProgressElement;\r\n    new (tagName: \"q\", attribute?: Attribute): FHTMLQuoteElement;\r\n    new (tagName: \"rt\", attribute?: Attribute): FHTMLElement;\r\n    new (tagName: \"ruby\", attribute?: Attribute): FHTMLElement;\r\n    new (tagName: \"s\", attribute?: Attribute): FHTMLElement;\r\n    new (tagName: \"samp\", attribute?: Attribute): FHTMLElement;\r\n    new (tagName: \"script\", attribute?: Attribute): FHTMLScriptElement;\r\n    new (tagName: \"select\", attribute?: Attribute): FHTMLSelectElement;\r\n    new (tagName: \"small\", attribute?: Attribute): FHTMLElement;\r\n    new (tagName: \"source\", attribute?: Attribute): FHTMLSourceElement;\r\n    new (tagName: \"span\", attribute?: Attribute): FHTMLSpanElement;\r\n    new (tagName: \"strike\", attribute?: Attribute): FHTMLElement;\r\n    new (tagName: \"strong\", attribute?: Attribute): FHTMLElement;\r\n    new (tagName: \"style\", attribute?: Attribute): FHTMLStyleElement;\r\n    new (tagName: \"sub\", attribute?: Attribute): FHTMLElement;\r\n    new (tagName: \"sup\", attribute?: Attribute): FHTMLElement;\r\n    new (tagName: \"table\", attribute?: Attribute): FHTMLTableElement;\r\n    new (tagName: \"tbody\", attribute?: Attribute): FHTMLTableSectionElement;\r\n    new (tagName: \"td\", attribute?: Attribute): FHTMLTableDataCellElement;\r\n    new (tagName: \"textarea\", attribute?: Attribute): FHTMLTextAreaElement;\r\n    new (tagName: \"tfoot\", attribute?: Attribute): FHTMLTableSectionElement;\r\n    new (tagName: \"th\", attribute?: Attribute): FHTMLTableHeaderCellElement;\r\n    new (tagName: \"thead\", attribute?: Attribute): FHTMLTableSectionElement;\r\n    new (tagName: \"title\", attribute?: Attribute): FHTMLTitleElement;\r\n    new (tagName: \"tr\", attribute?: Attribute): FHTMLTableRowElement;\r\n    new (tagName: \"track\", attribute?: Attribute): FHTMLTrackElement;\r\n    new (tagName: \"tt\", attribute?: Attribute): FHTMLElement;\r\n    new (tagName: \"u\", attribute?: Attribute): FHTMLElement;\r\n    new (tagName: \"ul\", attribute?: Attribute): FHTMLUListElement;\r\n    new (tagName: \"var\", attribute?: Attribute): FHTMLElement;\r\n    new (tagName: \"video\", attribute?: Attribute): FHTMLVideoElement;\r\n    new (tagName: \"xmp\", attribute?: Attribute): FHTMLPreElement;\r\n    new (tagName: string, attribute?: Attribute): FHTMLElement;\r\n\r\n    /** Tells whether `element` is visible. */\r\n    visible<T extends Node>(element: T): boolean;\r\n\r\n    /** Tells whether `element` is exists on document. */\r\n    exists<T extends Node>(element: T): boolean;\r\n\r\n    /** Toggles the visibility of `element`. */\r\n    toggle<T extends Node>(element: T): T;\r\n\r\n    /** Sets `display: none` on `element`. */\r\n    hide<T extends Node>(element: T): T;\r\n\r\n    /** Removes `display: none` on `element`. */\r\n    show<T extends Node>(element: T): T;\r\n\r\n    /** Completely removes `element` from the document. */\r\n    remove<T extends Node>(element: T): void;\r\n\r\n    /** Clear the _content_ of `element`. */\r\n    update<T extends Node>(element: T): T;\r\n    /** Update the _content_ of `element` with the `string` as HTML. */\r\n    update<T extends Node>(element: T, string: string): T;\r\n    /** **DEPRECATED**: Use updateText instead. */\r\n    update<T extends Node>(element: T, number: number): T;\r\n    /** Replaces the _content_ of `element` with the `newContent`. */\r\n    update<T extends Node, U extends Node>(element: T, newContent: U): T;\r\n\r\n    /** Update the _content_ of `element` with the `string` as Text. */\r\n    updateText<T extends Node>(element: T, string: string | number | boolean): T;\r\n    /** Update the _content_ of `element` with the `content` element as Text. */\r\n    updateText<T extends Node, U extends Node>(element: T, content: U): T;\r\n\r\n    /** Insert the `string` as HTML to the _content_ of `element`. */\r\n    insert<T extends Node>(element: T, string: string): T;\r\n    /** **DEPRECATED**: Use updateText instead. */\r\n    insert<T extends Node>(element: T, number: number): T;\r\n    /** Insert the `content` to the _content_ of `element`. */\r\n    insert<T extends Node, U extends Node>(element: T, content: U): T;\r\n    /** Insert the content(s) to the specific position of _content_ of `element` (Advanced).  */\r\n    insert<T extends Node>(element: T, insertion: Insertion): T;\r\n\r\n    /** Insert the `string` to the _content_ of `element` */\r\n    insertText<T extends Node>(element: T, string: string | number | boolean): T;\r\n    /** Insert the content(s) to the specific position of _content_ of `element` (Advanced). */\r\n    insertText<T extends Node>(element: T, content: Insertion): T;\r\n\r\n    /** Insert `element` to the _content_ of `element`. */\r\n    insertTo<T extends Node, U extends Node>(element: T, to: U): T;\r\n    /** Insert `element` to the specific position of _content_ of `element`. */\r\n    insertTo<T extends Node, U extends Node>(element: T, to: U, position: InsertPosition): T;\r\n\r\n    /** **DEPRECATED**: Use getAttribute instead. */\r\n    readAttribute<T extends Node>(element: T, name: string): string;\r\n\r\n    /** Set attribute `name`. */\r\n    writeAttribute<T extends Node>(element: T, name: string): T;\r\n    /** Set or Remove attribute `name`. */\r\n    writeAttribute<T extends Node>(element: T, name: string, exists: boolean): T;\r\n    /** Set value of attribute `name`. */\r\n    writeAttribute<T extends Node>(element: T, name: string, value: string): T;\r\n    /** Set attribute(s) by name/value pairs. */\r\n    writeAttribute<T extends Node>(element: T, attribute: Attribute): T;\r\n\r\n    /** Get dimenstions of `element`. */\r\n    getDimensions<T extends Node>(element: T): Dimensions;\r\n\r\n    /** Get height of `element`. */\r\n    getHeight<T extends Node>(element: T): number;\r\n\r\n    /** Get width of `element`. */\r\n    getWidth<T extends Node>(element: T): number;\r\n\r\n    /** Get cumulative offset of `element`. */\r\n    cumulativeOffset<T extends Node>(element: T): Offset;\r\n\r\n    /** Get cumulative scroll offset of `element`. */\r\n    cumulativeScrollOffset<T extends Node>(element: T): Offset;\r\n\r\n    /** Tells weather class name is exists. */\r\n    hasClassName<T extends Node>(element: T, className: string): boolean;\r\n\r\n    /** Add class name to `element`. */\r\n    addClassName<T extends Node>(element: T, className: string): T;\r\n\r\n    /** Remove class name from `element`. */\r\n    removeClassName<T extends Node>(element: T, className: string): T;\r\n\r\n    /** Toggles the class name of `element`. */\r\n    toggleClassName<T extends Node>(element: T, className: string): T;\r\n\r\n    /** Get value of style property of `element`. */\r\n    getStyle<T extends Node>(element: T, propertyName: NumberProperty): number;\r\n    /** Get value of style property of `element`. */\r\n    getStyle<T extends Node>(element: T, propertyName: string): string;\r\n\r\n    /** Set value of style property of `element`. */\r\n    setStyle<T extends Node>(element: T, style: Property): T;\r\n\r\n    /** Registers an event handler on a DOM element. */\r\n    on<T extends Node>(element: T, eventType: string, listener: EventListener, useCapture?: boolean): T;\r\n\r\n    /** Unregisters an event handler on a DOM element. */\r\n    off<T extends Node>(element: T, eventType: string, listener?: EventListener, useCapture?: boolean): T;\r\n\r\n    /** Fires a custom event. */\r\n    fire<T extends Node>(element: T, eventType: string, property?: any): T;\r\n    /** Emit a custom event. (alias of fire) */\r\n    emit<T extends Node>(element: T, eventType: string, property?: any): T;\r\n\r\n    // extra class methods\r\n\r\n    /** Extends the given `element` instance. */\r\n    extend<T extends Node>(element: T): FHTMLElement;\r\n\r\n    /** Check object type. */\r\n    isElement(object: any): boolean;\r\n}\r\n\r\nexport interface createElement {\r\n    (tagName: \"a\", attribute?: Attribute): FHTMLAnchorElement;\r\n    (tagName: \"abbr\", attribute?: Attribute): FHTMLElement;\r\n    (tagName: \"acronym\", attribute?: Attribute): FHTMLElement;\r\n    (tagName: \"address\", attribute?: Attribute): FHTMLElement;\r\n    (tagName: \"applet\", attribute?: Attribute): FHTMLAppletElement;\r\n    (tagName: \"area\", attribute?: Attribute): FHTMLAreaElement;\r\n    (tagName: \"audio\", attribute?: Attribute): FHTMLAudioElement;\r\n    (tagName: \"b\", attribute?: Attribute): FHTMLElement;\r\n    (tagName: \"base\", attribute?: Attribute): FHTMLBaseElement;\r\n    (tagName: \"basefont\", attribute?: Attribute): FHTMLBaseFontElement;\r\n    (tagName: \"bdo\", attribute?: Attribute): FHTMLElement;\r\n    (tagName: \"big\", attribute?: Attribute): FHTMLElement;\r\n    (tagName: \"blockquote\", attribute?: Attribute): FHTMLQuoteElement;\r\n    (tagName: \"body\", attribute?: Attribute): FHTMLBodyElement;\r\n    (tagName: \"br\", attribute?: Attribute): FHTMLBRElement;\r\n    (tagName: \"button\", attribute?: Attribute): FHTMLButtonElement;\r\n    (tagName: \"canvas\", attribute?: Attribute): FHTMLCanvasElement;\r\n    (tagName: \"caption\", attribute?: Attribute): FHTMLTableCaptionElement;\r\n    (tagName: \"center\", attribute?: Attribute): FHTMLElement;\r\n    (tagName: \"cite\", attribute?: Attribute): FHTMLElement;\r\n    (tagName: \"code\", attribute?: Attribute): FHTMLElement;\r\n    (tagName: \"col\", attribute?: Attribute): FHTMLTableColElement;\r\n    (tagName: \"colgroup\", attribute?: Attribute): FHTMLTableColElement;\r\n    (tagName: \"datalist\", attribute?: Attribute): FHTMLDataListElement;\r\n    (tagName: \"dd\", attribute?: Attribute): FHTMLElement;\r\n    (tagName: \"del\", attribute?: Attribute): FHTMLModElement;\r\n    (tagName: \"dfn\", attribute?: Attribute): FHTMLElement;\r\n    (tagName: \"dir\", attribute?: Attribute): FHTMLDirectoryElement;\r\n    (tagName?: \"div\", attribute?: Attribute): FHTMLDivElement;\r\n    (tagName: \"dl\", attribute?: Attribute): FHTMLDListElement;\r\n    (tagName: \"dt\", attribute?: Attribute): FHTMLElement;\r\n    (tagName: \"em\", attribute?: Attribute): FHTMLElement;\r\n    (tagName: \"embed\", attribute?: Attribute): FHTMLEmbedElement;\r\n    (tagName: \"fieldset\", attribute?: Attribute): FHTMLFieldSetElement;\r\n    (tagName: \"font\", attribute?: Attribute): FHTMLFontElement;\r\n    (tagName: \"form\", attribute?: Attribute): FHTMLFormElement;\r\n    (tagName: \"frame\", attribute?: Attribute): FHTMLFrameElement;\r\n    (tagName: \"frameset\", attribute?: Attribute): FHTMLFrameSetElement;\r\n    (tagName: \"h1\", attribute?: Attribute): FHTMLHeadingElement;\r\n    (tagName: \"h2\", attribute?: Attribute): FHTMLHeadingElement;\r\n    (tagName: \"h3\", attribute?: Attribute): FHTMLHeadingElement;\r\n    (tagName: \"h4\", attribute?: Attribute): FHTMLHeadingElement;\r\n    (tagName: \"h5\", attribute?: Attribute): FHTMLHeadingElement;\r\n    (tagName: \"h6\", attribute?: Attribute): FHTMLHeadingElement;\r\n    (tagName: \"head\", attribute?: Attribute): FHTMLHeadElement;\r\n    (tagName: \"hr\", attribute?: Attribute): FHTMLHRElement;\r\n    (tagName: \"html\", attribute?: Attribute): FHTMLHtmlElement;\r\n    (tagName: \"i\", attribute?: Attribute): FHTMLElement;\r\n    (tagName: \"iframe\", attribute?: Attribute): FHTMLIFrameElement;\r\n    (tagName: \"img\", attribute?: Attribute): FHTMLImageElement;\r\n    (tagName: \"input\", attribute?: Attribute): FHTMLInputElement;\r\n    (tagName: \"ins\", attribute?: Attribute): FHTMLModElement;\r\n    (tagName: \"isindex\", attribute?: Attribute): FHTMLUnknownElement;\r\n    (tagName: \"kbd\", attribute?: Attribute): FHTMLElement;\r\n    (tagName: \"keygen\", attribute?: Attribute): FHTMLElement;\r\n    (tagName: \"label\", attribute?: Attribute): FHTMLLabelElement;\r\n    (tagName: \"legend\", attribute?: Attribute): FHTMLLegendElement;\r\n    (tagName: \"li\", attribute?: Attribute): FHTMLLIElement;\r\n    (tagName: \"link\", attribute?: Attribute): FHTMLLinkElement;\r\n    (tagName: \"listing\", attribute?: Attribute): FHTMLPreElement;\r\n    (tagName: \"map\", attribute?: Attribute): FHTMLMapElement;\r\n    (tagName: \"marquee\", attribute?: Attribute): FHTMLMarqueeElement;\r\n    (tagName: \"menu\", attribute?: Attribute): FHTMLMenuElement;\r\n    (tagName: \"meta\", attribute?: Attribute): FHTMLMetaElement;\r\n    (tagName: \"nextid\", attribute?: Attribute): FHTMLUnknownElement;\r\n    (tagName: \"nobr\", attribute?: Attribute): FHTMLElement;\r\n    (tagName: \"object\", attribute?: Attribute): FHTMLObjectElement;\r\n    (tagName: \"ol\", attribute?: Attribute): FHTMLOListElement;\r\n    (tagName: \"optgroup\", attribute?: Attribute): FHTMLOptGroupElement;\r\n    (tagName: \"option\", attribute?: Attribute): FHTMLOptionElement;\r\n    (tagName: \"p\", attribute?: Attribute): FHTMLParagraphElement;\r\n    (tagName: \"param\", attribute?: Attribute): FHTMLParamElement;\r\n    (tagName: \"plaintext\", attribute?: Attribute): FHTMLElement;\r\n    (tagName: \"pre\", attribute?: Attribute): FHTMLPreElement;\r\n    (tagName: \"progress\", attribute?: Attribute): FHTMLProgressElement;\r\n    (tagName: \"q\", attribute?: Attribute): FHTMLQuoteElement;\r\n    (tagName: \"rt\", attribute?: Attribute): FHTMLElement;\r\n    (tagName: \"ruby\", attribute?: Attribute): FHTMLElement;\r\n    (tagName: \"s\", attribute?: Attribute): FHTMLElement;\r\n    (tagName: \"samp\", attribute?: Attribute): FHTMLElement;\r\n    (tagName: \"script\", attribute?: Attribute): FHTMLScriptElement;\r\n    (tagName: \"select\", attribute?: Attribute): FHTMLSelectElement;\r\n    (tagName: \"small\", attribute?: Attribute): FHTMLElement;\r\n    (tagName: \"source\", attribute?: Attribute): FHTMLSourceElement;\r\n    (tagName: \"span\", attribute?: Attribute): FHTMLSpanElement;\r\n    (tagName: \"strike\", attribute?: Attribute): FHTMLElement;\r\n    (tagName: \"strong\", attribute?: Attribute): FHTMLElement;\r\n    (tagName: \"style\", attribute?: Attribute): FHTMLStyleElement;\r\n    (tagName: \"sub\", attribute?: Attribute): FHTMLElement;\r\n    (tagName: \"sup\", attribute?: Attribute): FHTMLElement;\r\n    (tagName: \"table\", attribute?: Attribute): FHTMLTableElement;\r\n    (tagName: \"tbody\", attribute?: Attribute): FHTMLTableSectionElement;\r\n    (tagName: \"td\", attribute?: Attribute): FHTMLTableDataCellElement;\r\n    (tagName: \"textarea\", attribute?: Attribute): FHTMLTextAreaElement;\r\n    (tagName: \"tfoot\", attribute?: Attribute): FHTMLTableSectionElement;\r\n    (tagName: \"th\", attribute?: Attribute): FHTMLTableHeaderCellElement;\r\n    (tagName: \"thead\", attribute?: Attribute): FHTMLTableSectionElement;\r\n    (tagName: \"title\", attribute?: Attribute): FHTMLTitleElement;\r\n    (tagName: \"tr\", attribute?: Attribute): FHTMLTableRowElement;\r\n    (tagName: \"track\", attribute?: Attribute): FHTMLTrackElement;\r\n    (tagName: \"tt\", attribute?: Attribute): FHTMLElement;\r\n    (tagName: \"u\", attribute?: Attribute): FHTMLElement;\r\n    (tagName: \"ul\", attribute?: Attribute): FHTMLUListElement;\r\n    (tagName: \"var\", attribute?: Attribute): FHTMLElement;\r\n    (tagName: \"video\", attribute?: Attribute): FHTMLVideoElement;\r\n    (tagName: \"xmp\", attribute?: Attribute): FHTMLPreElement;\r\n    (tagName: string, attribute?: Attribute): FHTMLElement;\r\n}\r\n\r\nexport interface Instance {\r\n    readonly isFlagrated: boolean;\r\n\r\n    /** Tells whether `element` is visible. */\r\n    visible(): boolean;\r\n\r\n    /** Tells whether `element` is exists on document. */\r\n    exists(): boolean;\r\n\r\n    /** Toggles the visibility of `element`. */\r\n    toggle(): this;\r\n\r\n    /** Sets `display: none` on `element`. */\r\n    hide(): this;\r\n\r\n    /** Removes `display: none` on `element`. */\r\n    show(): this;\r\n\r\n    /** Completely removes `element` from the document. */\r\n    //remove(): void;\r\n\r\n    /** Clear the _content_ of `element`. */\r\n    update(): this;\r\n    /** Update the _content_ of `element` with the `string` as HTML. */\r\n    update(string: string): this;\r\n    /** **DEPRECATED**: Use updateText instead. */\r\n    update(number: number): this;\r\n    /** Replaces the _content_ of `element` with the `newContent`. */\r\n    update<T extends Node>(newContent: T): this;\r\n\r\n    /** Update the _content_ of `element` with the `string` as Text. */\r\n    updateText(string: string | number | boolean): this;\r\n    /** Update the _content_ of `element` with the `content` element as Text. */\r\n    updateText<T extends Node>(content: T): this;\r\n\r\n    /** Insert the `string` as HTML to the _content_ of `element`. */\r\n    insert(string: string): this;\r\n    /** **DEPRECATED**: Use updateText instead. */\r\n    insert(number: number): this;\r\n    /** Insert the `content` to the _content_ of `element`. */\r\n    insert<T extends Node>(content: T): this;\r\n    /** Insert the content(s) to the specific position of _content_ of `element` (Advanced).  */\r\n    insert(insertion: Insertion): this;\r\n\r\n    /** Insert the `string` to the _content_ of `element` */\r\n    insertText(string: string | number | boolean): this;\r\n    /** Insert the content(s) to the specific position of _content_ of `element` (Advanced). */\r\n    insertText(content: Insertion): this;\r\n\r\n    /** Insert `element` to the _content_ of `element`. */\r\n    insertTo<T extends Node>(to: T): this;\r\n    /** Insert `element` to the specific position of _content_ of `element`. */\r\n    insertTo<T extends Node>(to: T, position: InsertPosition): this;\r\n\r\n    /** **DEPRECATED**: Use getAttribute instead. */\r\n    readAttribute(name: string): string;\r\n\r\n    /** Set attribute `name`. */\r\n    writeAttribute(name: string): this;\r\n    /** Set or Remove attribute `name`. */\r\n    writeAttribute(name: string, value: string): this;\r\n    /** Set value of attribute `name`. */\r\n    writeAttribute(name: string, exists: boolean): this;\r\n    /** Set attribute(s) by name/value pairs. */\r\n    writeAttribute(object: Attribute): this;\r\n\r\n    /** Get dimenstions of `element`. */\r\n    getDimensions(): Dimensions;\r\n\r\n    /** Get height of `element`. */\r\n    getHeight(): number;\r\n\r\n    /** Get width of `element`. */\r\n    getWidth(): number;\r\n\r\n    /** Get cumulative offset of `element`. */\r\n    cumulativeOffset(): Offset;\r\n\r\n    /** Get cumulative scroll offset of `element`. */\r\n    cumulativeScrollOffset(): Offset;\r\n\r\n    /** Tells weather class name is exists. */\r\n    hasClassName(className: string): boolean;\r\n\r\n    /** Add class name to `element`. */\r\n    addClassName(className: string): this;\r\n\r\n    /** Remove class name from `element`. */\r\n    removeClassName(className: string): this;\r\n\r\n    /** Toggles the class name of `element`. */\r\n    toggleClassName(className: string): this;\r\n\r\n    /** Get value of style property of `element`. */\r\n    getStyle(propertyName: NumberProperty): number;\r\n    /** Get value of style property of `element`. */\r\n    getStyle(propertyName: string): string;\r\n\r\n    /** Set value of style property of `element`. */\r\n    setStyle(style: Property): this;\r\n\r\n    /** Registers an event handler on a DOM element. */\r\n    on(eventType: string, listener: EventListener, useCapture?: boolean): this;\r\n\r\n    /** Unregisters an event handler on a DOM element. */\r\n    off(eventType: string, listener?: EventListener, useCapture?: boolean): this;\r\n\r\n    /** Fires a custom event. */\r\n    fire(eventType: string, property?: any): this;\r\n    /** Emit a custom event. (alias of fire) */\r\n    emit(eventType: string, property?: any): this;\r\n}\r\n\r\nexport type Attribute = { [name: string]: string | boolean };\r\nexport type Property = { [name: string]: string };\r\n\r\nexport type NumberProperty = \"opacity\";\r\n\r\nexport type InsertPosition = \"before\" | \"top\" | \"bottom\" | \"after\";\r\n\r\nexport interface Insertion {\r\n    before?: HTMLElement | string | number;\r\n    top?: HTMLElement | string | number;\r\n    bottom?: HTMLElement | string | number;\r\n    after?: HTMLElement | string | number;\r\n}\r\n\r\nexport interface Dimensions {\r\n    readonly width: number;\r\n    readonly height: number;\r\n}\r\n\r\nexport interface Offset {\r\n    readonly top: number;\r\n    readonly left: number;\r\n}\r\n\r\nconst _cache = {};\r\n\r\nconst _insertionTranslation = {\r\n    before(element, node) {\r\n        element.parentNode.insertBefore(node, element);\r\n    },\r\n    top(element, node) {\r\n        element.insertBefore(node, element.firstChild);\r\n    },\r\n    bottom(element, node) {\r\n        element.appendChild(node);\r\n    },\r\n    after(element, node) {\r\n        element.parentNode.insertBefore(node, element.nextSibling);\r\n    }\r\n};\r\n\r\n/*?\r\n    flagrate.createElement([tagName = \"div\", attribute])\r\n    new flagrate.Element([tagName = \"div\", attribute])\r\n    - tagName (String) - The name of the HTML element to create.\r\n    - attribute (Attribute) - An optional group of attribute/value pairs to set on the element.\r\n\r\n    Creates an HTML element with `tagName` as the tag name, optionally with the given attributes.\r\n\r\n    #### Example\r\n\r\n        // The old way:\r\n        var a = document.createElement(\"a\");\r\n        a.setAttribute(\"class\", \"foo\");\r\n        a.setAttribute(\"href\", \"/foo.html\");\r\n        a.appendChild(document.createTextNode(\"Next page\"));\r\n        x.appendChild(a);\r\n\r\n        // The new way:\r\n        var a = flagrate.createElement(\"a\", { \"class\": \"foo\", href: \"/foo.html\" })\r\n                        .insertText(\"Next page\")\r\n                        .insertTo(x);\r\n**/\r\nfunction FElement(tagName: string = \"div\", attribute?: Attribute) {\r\n\r\n    let node: any;\r\n\r\n    if (_cache[tagName]) {\r\n        node = _cache[tagName].cloneNode(false);\r\n    } else if ((attribute && attribute.hasOwnProperty(\"type\")) || tagName === \"select\") {\r\n        node = document.createElement(tagName);\r\n    } else {\r\n        node = document.createElement(tagName);\r\n        _cache[tagName] = node.cloneNode(false);\r\n    }\r\n\r\n    extendObject(node, this);\r\n\r\n    return attribute ? node.writeAttribute(attribute) : node;\r\n}\r\n\r\nexport const Element = FElement as any as Class;\r\n\r\nfunction _createElement(tagName, attribute) {\r\n    return new Element(tagName, attribute);\r\n}\r\n\r\nexport const createElement = _createElement as any as createElement;\r\n\r\nElement.prototype = {\r\n    isFlagrated: true\r\n};\r\n\r\n/*?\r\n    flagrate.Element.visible(element) -> Boolean\r\n    - element (Element) - instance of Element.\r\n\r\n    Tells whether `element` is visible\r\n\r\n    This method is similar to http://api.prototypejs.org/dom/Element/visible/\r\n**/\r\nElement.visible = (element: HTMLElement) => {\r\n\r\n    return element.style.display !== \"none\";\r\n};\r\n\r\n/*?\r\n    flagrate.Element.exists(element) -> Boolean\r\n    - element (Element) - instance of Element.\r\n\r\n    Tells whether `element` is exists on document.\r\n**/\r\nElement.exists = (element) => {\r\n\r\n    if (element.parentNode) {\r\n        while ((element = element.parentNode) !== null) {\r\n            if (element === document) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    return false;\r\n};\r\n\r\n/*?\r\n    flagrate.Element.toggle(element) -> Element\r\n    - element (Element) - instance of Element.\r\n\r\n    Toggles the visibility of `element`. Returns `element`.\r\n\r\n    This method is similar to http://api.prototypejs.org/dom/Element/toggle/\r\n**/\r\nElement.toggle = (element) => {\r\n\r\n    return Element[Element.visible(element) ? \"hide\" : \"show\"](element);\r\n};\r\n\r\n/*?\r\n    flagrate.Element.hide(element) -> Element\r\n    - element (Element) - instance of Element.\r\n\r\n    Sets `display: none` on `element`. Returns `element`.\r\n\r\n    This method is similar to http://api.prototypejs.org/dom/Element/hide/\r\n**/\r\nElement.hide = (element) => {\r\n\r\n    element.style.display = \"none\";\r\n    return element;\r\n};\r\n\r\n/*?\r\n    flagrate.Element.show(element) -> Element\r\n    - element (Element) - instance of Element.\r\n\r\n    Removes `display: none` on `element`. Returns `element`.\r\n\r\n    This method is similar to http://api.prototypejs.org/dom/Element/show/\r\n**/\r\nElement.show = (element) => {\r\n\r\n    element.style.display = \"\";\r\n    return element;\r\n};\r\n\r\n/*?\r\n    flagrate.Element.remove(element) -> void\r\n    - element (Element) - instance of Element.\r\n\r\n    Completely removes `element` from the document and returns it.\r\n\r\n    This method is similar to http://api.prototypejs.org/dom/Element/remove/\r\n**/\r\nElement.remove = (element) => {\r\n\r\n    if (element.parentNode) {\r\n        element.parentNode.removeChild(element);\r\n    }\r\n\r\n    return;\r\n};\r\n\r\n/*?\r\n    flagrate.Element.update(element[, newContent]) -> Element\r\n    - element (Element) - instance of Element.\r\n    - newContent (String|Number|Element) - new content.\r\n\r\n    Replaces _the content_ of `element` with the `newContent` argument and\r\n    returns `element`.\r\n\r\n    This method is similar to http://api.prototypejs.org/dom/Element/update/\r\n**/\r\nElement.update = (element, content?) => {\r\n\r\n    let i = element.childNodes.length;\r\n    while (i--) {\r\n        Element.remove(element.childNodes[i]);\r\n    }\r\n\r\n    if (!content) {\r\n        return element;\r\n    }\r\n\r\n    if (Element.isElement(content) === true) {\r\n        element.appendChild(content);\r\n        return element;\r\n    }\r\n\r\n    if (typeof content !== \"string\") {\r\n        content = content.toString(10);\r\n    }\r\n\r\n    element.innerHTML = content;\r\n\r\n    return element;\r\n};\r\n\r\n/*?\r\n    flagrate.Element.updateText(element[, newContent]) -> Element\r\n    - element (Element) - instance of Element.\r\n    - newContent (String|Number) - new text content.\r\n**/\r\nElement.updateText = (element, content) => {\r\n\r\n    let i = element.childNodes.length;\r\n    while (i--) {\r\n        Element.remove(element.childNodes[i]);\r\n    }\r\n\r\n    if (content === undefined) {\r\n        return element;\r\n    }\r\n\r\n    if (Element.isElement(content) === true && (content.toString !== void 0)) {\r\n        return Element.updateText(element, content.toString());\r\n    }\r\n\r\n    if (typeof content !== \"string\") {\r\n        content = content.toString(10);\r\n    }\r\n\r\n    element.appendChild(document.createTextNode(content));\r\n\r\n    return element;\r\n};\r\n\r\n/*?\r\n    flagrate.Element.insert(element, content) -> Element\r\n    - element (Element) - instance of Element.\r\n    - content (String|Number|Element|Object) - The content to insert\r\n\r\n    Inserts content `above`, `below`, at the `top`, and/or at the `bottom` of\r\n    the given element, depending on the option(s) given.\r\n\r\n    This method is similar to http://api.prototypejs.org/dom/Element/insert/\r\n**/\r\nElement.insert = (element, insertion) => {\r\n\r\n    if (typeof insertion === \"string\" || typeof insertion === \"number\" || Element.isElement(insertion) === true) {\r\n        insertion = { bottom: insertion };\r\n    }\r\n\r\n    let position, content, insert, div;\r\n    for (position in insertion) {\r\n        if (insertion.hasOwnProperty(position)) {\r\n            content = insertion[position];\r\n            position = position.toLowerCase();\r\n            insert = _insertionTranslation[position];\r\n\r\n            if (Element.isElement(content) === true) {\r\n                insert(element, content);\r\n                continue;\r\n            }\r\n\r\n            if (typeof content !== \"string\") {\r\n                content = content.toString(10);\r\n            }\r\n\r\n            div = new Element();\r\n            div.innerHTML = content;\r\n            if (position === \"top\" || position === \"after\") {\r\n                [...div.childNodes].reverse();\r\n            }\r\n            while (div.childNodes.length !== 0) {\r\n                insert(element, div.childNodes[0]);\r\n            }\r\n        }\r\n    }\r\n\r\n    return element;\r\n};\r\n\r\n/*?\r\n    flagrate.Element.insertText(element, content) -> Element\r\n    - element (Element) - instance of Element.\r\n    - content (String|Number|Object) - The content to insert\r\n\r\n    Inserts content `above`, `below`, at the `top`, and/or at the `bottom` of\r\n    the given element, depending on the option(s) given.\r\n**/\r\nElement.insertText = (element, insertion) => {\r\n\r\n    if (typeof insertion === \"string\" || typeof insertion === \"number\") {\r\n        insertion = { bottom: insertion };\r\n    }\r\n\r\n    let position, content, insert;\r\n    for (position in insertion) {\r\n        if (insertion.hasOwnProperty(position)) {\r\n            content = insertion[position];\r\n            position = position.toLowerCase();\r\n            insert = _insertionTranslation[position];\r\n\r\n            if (typeof content !== \"string\") {\r\n                content = content.toString(10);\r\n            }\r\n\r\n            insert(element, document.createTextNode(content));\r\n        }\r\n    }\r\n\r\n    return element;\r\n};\r\n\r\n/*?\r\n    flagrate.Element.insertTo(element, to[, position = \"bottom\"]) -> Element\r\n    - element (Element) - insert this.\r\n    - to (Element) - insert to this element.\r\n    - position (String) - `before` or `top` or `bottom` or `after`.\r\n**/\r\nElement.insertTo = (element, to, position = \"bottom\") => {\r\n\r\n    var insertion = {};\r\n\r\n    if (position) {\r\n        insertion[position] = element;\r\n    } else {\r\n        insertion[\"bottom\"] = element;\r\n    }\r\n\r\n    Element.insert(to, insertion);\r\n\r\n    return element;\r\n};\r\n\r\n/*?\r\n    flagrate.Element.readAttribute(element, attributeName) -> String | null\r\n    - element (Element) - instance of Element.\r\n    - attributeName (String) - attribute name.\r\n\r\n    Returns the value of `element`'s `attribute` or `null` if `attribute` has\r\n    not been specified.\r\n\r\n    This method is similar to http://api.prototypejs.org/dom/Element/readAttribute/\r\n**/\r\nElement.readAttribute = (element, name) => {\r\n\r\n    // ref: https://github.com/sstephenson/prototype/blob/1fb9728/src/dom/dom.js#L1856\r\n\r\n    return element.getAttribute(name);\r\n};\r\n\r\n/*?\r\n    flagrate.Element.writeAttribute(element, attribute[, value = true]) -> Element\r\n    - element (Element) - instance of Element.\r\n    - attribute (String|Object) - attribute name or name/value pairs object.\r\n    - value (Boolean|String) - value of attribute.\r\n\r\n    Adds, specifies or removes attributes passed as either a hash or a name/value pair.\r\n\r\n    This method is similar to http://api.prototypejs.org/dom/Element/writeAttribute/\r\n**/\r\nElement.writeAttribute = (element: HTMLElement, name, value?) => {\r\n\r\n    let attr: Attribute;\r\n\r\n    if (typeof name === \"object\") {\r\n        attr = name;\r\n    } else {\r\n        attr = {};\r\n        attr[name] = (value === undefined) ? true : value;\r\n    }\r\n\r\n    let k;\r\n    for (k in attr) {\r\n        if (attr.hasOwnProperty(k) === true) {\r\n            value = attr[k];\r\n            if (value === false || value === null) {\r\n                element.removeAttribute(k);\r\n            } else if (value === true) {\r\n                element.setAttribute(k, k);\r\n            } else if (value !== undefined) {\r\n                element.setAttribute(k, value);\r\n            }\r\n        }\r\n    }\r\n\r\n    return element;\r\n};\r\n\r\n/*?\r\n    flagrate.Element.getDimensions(element) -> Object\r\n    - element (Element) - instance of Element.\r\n\r\n    Finds the computed width and height of `element` and returns them as\r\n    key/value pairs of an object.\r\n\r\n    This method is similar to http://api.prototypejs.org/dom/Element/getDimensions/\r\n**/\r\nElement.getDimensions = (element: HTMLElement) => {\r\n\r\n    const display = Element.getStyle(element, \"display\");\r\n\r\n    if (display && display !== \"none\") {\r\n        return {\r\n            width: element.offsetWidth,\r\n            height: element.offsetHeight\r\n        };\r\n    }\r\n\r\n    const before: any = {\r\n        visibility: element.style.visibility,\r\n        position: element.style.position,\r\n        display: element.style.display\r\n    };\r\n\r\n    const after: any = {\r\n        visibility: \"hidden\",\r\n        display: \"block\"\r\n    };\r\n\r\n    // Switching `fixed` to `absolute` causes issues in Safari.\r\n    if (before.position !== \"fixed\") {\r\n        after.position = \"absolute\";\r\n    }\r\n\r\n    Element.setStyle(element, after);\r\n\r\n    const dimensions = {\r\n        width: element.offsetWidth,\r\n        height: element.offsetHeight\r\n    };\r\n\r\n    Element.setStyle(element, before);\r\n\r\n    return dimensions;\r\n};\r\n\r\n/*?\r\n    flagrate.Element.getHeight(element) -> Number\r\n    - element (Element) - instance of Element.\r\n\r\n    This method is similar to http://api.prototypejs.org/dom/Element/getHeight/\r\n**/\r\nElement.getHeight = (element) => {\r\n\r\n    return Element.getDimensions(element).height;\r\n};\r\n\r\n/*?\r\n    flagrate.Element.getWidth(element) -> Number\r\n    - element (Element) - instance of Element.\r\n\r\n    This method is similar to http://api.prototypejs.org/dom/Element/getWidth/\r\n**/\r\nElement.getWidth = (element) => {\r\n\r\n    return Element.getDimensions(element).width;\r\n};\r\n\r\n/*?\r\n    flagrate.Element.cumulativeOffset(element) -> Object\r\n    - element (Element) - instance of Element.\r\n\r\n    This method is similar to http://api.prototypejs.org/dom/Element/cumulativeOffset/\r\n**/\r\nElement.cumulativeOffset = (element) => {\r\n\r\n    let t = 0, l = 0;\r\n    if (element.parentNode) {\r\n        do {\r\n            t += element.offsetTop || 0;\r\n            l += element.offsetLeft || 0;\r\n            element = element.offsetParent;\r\n        } while (element);\r\n    }\r\n\r\n    return {\r\n        top: t,\r\n        left: l\r\n    };\r\n};\r\n\r\n/*?\r\n    flagrate.Element.cumulativeScrollOffset(element) -> Object\r\n    - element (Element) - instance of Element.\r\n\r\n    This method is similar to http://api.prototypejs.org/dom/Element/cumulativeScrollOffset/\r\n**/\r\nElement.cumulativeScrollOffset = (element) => {\r\n\r\n    let t = 0, l = 0;\r\n    do {\r\n        t += element.scrollTop || 0;\r\n        l += element.scrollLeft || 0;\r\n        // for Chrome\r\n        if (element.parentNode === document.body && document.documentElement.scrollTop !== 0) {\r\n            element = document.documentElement;\r\n        } else {\r\n            element = element.parentNode;\r\n        }\r\n    } while (element);\r\n\r\n    return {\r\n        top: t,\r\n        left: l\r\n    };\r\n};\r\n\r\n/*?\r\n    Flagrate.Element.hasClassName(element, className) -> Boolean\r\n    - element (Element) - instance of Element.\r\n    - className (String) -\r\n\r\n    This method is similar to http://api.prototypejs.org/dom/Element/hasClassName/\r\n**/\r\nElement.hasClassName = (element, className) => {\r\n\r\n    return (element.className.length > 0 && (element.className === className || new RegExp(\"(^|\\\\s)\" + className + \"(\\\\s|$)\").test(element.className)));\r\n};\r\n\r\n/*?\r\n    flagrate.Element.addClassName(element, className) -> Element\r\n    - element (Element) - instance of Element.\r\n    - className (String) - The class name to add.\r\n\r\n    This method is similar to http://api.prototypejs.org/dom/Element/addClassName/\r\n**/\r\nElement.addClassName = (element, className) => {\r\n\r\n    if (!Element.hasClassName(element, className)) {\r\n        element.className += (element.className ? \" \" : \"\") + className;\r\n    }\r\n\r\n    return element;\r\n};\r\n\r\n/*?\r\n    flagrate.Element.removeClassName(element, className) -> Element\r\n    - element (Element) - instance of Element.\r\n    - className (String) -\r\n\r\n    This method is similar to http://api.prototypejs.org/dom/Element/removeClassName/\r\n**/\r\nElement.removeClassName = (element, className) => {\r\n\r\n    element.className = element.className.replace(new RegExp(\"(^|\\\\s+)\" + className + \"(\\\\s+|$)\"), \" \").trim();\r\n\r\n    return element;\r\n};\r\n\r\n/*?\r\n    flagrate.Element.toggleClassName(element, className) -> Element\r\n    - element (Element) - instance of Element.\r\n    - className (String) -\r\n\r\n    This method is similar to http://api.prototypejs.org/dom/Element/toggleClassName/\r\n**/\r\nElement.toggleClassName = (element, className) => {\r\n\r\n    return Element[Element.hasClassName(element, className) ? \"removeClassName\" : \"addClassName\"](element, className);\r\n};\r\n\r\n/*?\r\n    flagrate.Element.getStyle(element, propertyName) -> String | Number | null\r\n    - element (Element) - instance of Element.\r\n    - propertyName (String) - The property name of style to be retrieved.\r\n\r\n    This method is similar to http://api.prototypejs.org/dom/Element/getStyle/\r\n**/\r\nElement.getStyle = (element, style) => {\r\n\r\n    style = style === \"float\" ? \"cssFloat\" : style.replace(/-+([a-z])?/g, (m, s) => {\r\n        return s ? s.toUpperCase() : \"\";\r\n    });\r\n\r\n    let value = element.style[style];\r\n    if (!value || value === \"auto\") {\r\n        const css = document.defaultView.getComputedStyle(element, null);\r\n        value = css && (css[style] !== void 0) && css[style] !== \"\" ? css[style] : null;\r\n    }\r\n\r\n    if (style === \"opacity\") {\r\n        return value ? parseFloat(value) : 1.0;\r\n    }\r\n\r\n    return value === \"auto\" ? null : value;\r\n};\r\n\r\n/*?\r\n    flagrate.Element.setStyle(element, style) -> Element\r\n    - element (Element) - instance of Element.\r\n    - style (Object) -\r\n\r\n    This method is similar to http://api.prototypejs.org/dom/Element/setStyle/\r\n**/\r\nElement.setStyle = (element, style) => {\r\n\r\n    let p;\r\n    for (p in style) {\r\n        if (style.hasOwnProperty(p)) {\r\n            element.style[(p === \"float\" || p === \"cssFloat\") ? \"cssFloat\" : p] = style[p];\r\n        }\r\n    }\r\n\r\n    return element;\r\n};\r\n\r\n/*?\r\n    flagrate.Element.on(element, eventName, listener[, useCapture = false]) -> Element\r\n    - element (Element) - instance of Element.\r\n    - eventName (String) - name of event.\r\n    - listener (Function) - The function to call when the event occurs.\r\n    - useCapture (Boolean) -\r\n\r\n    Registers an event handler on a DOM element.\r\n**/\r\nElement.on = (element, name, listener, useCapture) => {\r\n\r\n    if (element._flagrateEvent === undefined) {\r\n        element._flagrateEvent = {};\r\n    }\r\n    if (element._flagrateEvent[name] === undefined) {\r\n        element._flagrateEvent[name] = [];\r\n    }\r\n    element._flagrateEvent[name].push({\r\n        listener: listener,\r\n        useCapture: useCapture\r\n    });\r\n\r\n    element.addEventListener(name, listener, useCapture || false);\r\n\r\n    return element;\r\n};\r\n\r\n/*?\r\n    flagrate.Element.off(element, eventName[, listener, useCapture = false]) -> Element\r\n    - element (Element) - instance of Element.\r\n    - eventName (String) - name of event.\r\n    - listener (Function) - The function to call when the event occurs.\r\n    - useCapture (Boolean) -\r\n\r\n    Unregisters an event handler on a DOM element.\r\n**/\r\nElement.off = (element, name, listener?, useCapture?) => {\r\n\r\n    if (listener) {\r\n        element.removeEventListener(name, listener, useCapture || false);\r\n        return;\r\n    }\r\n\r\n    if (element._flagrateEvent === undefined) {\r\n        element._flagrateEvent = {};\r\n    }\r\n    if (element._flagrateEvent[name] === undefined) {\r\n        element._flagrateEvent[name] = [];\r\n    }\r\n\r\n    element._flagrateEvent[name].forEach(fevent => {\r\n        element.removeEventListener(name, fevent.listener, fevent.useCapture || false);\r\n    });\r\n\r\n    return element;\r\n};\r\n\r\n/*?\r\n    flagrate.Element.fire(element, eventName[, property]) -> Element\r\n    - element (Element) - instance of Element.\r\n    - eventName (String) - name of event.\r\n    - property (Object) -\r\n\r\n    Fires a custom event.\r\n**/\r\nElement.fire = (element, name, property) => {\r\n\r\n    const event = document.createEvent(\"HTMLEvents\");\r\n    event.initEvent(name, true, true);\r\n    if (property) {\r\n        extendObject(event, property);\r\n    }\r\n    element.dispatchEvent(event);\r\n\r\n    return element;\r\n};\r\n\r\n/*?\r\n    flagrate.Element.emit(element, eventName[, property]) -> Element\r\n    Alias of: flagrate.Element.fire\r\n**/\r\nElement.emit = Element.fire;\r\n\r\n//\r\n// create instance methods\r\n//\r\n\r\nfor (const name in Element) {\r\n    if (!(name in Element.prototype)) {\r\n        Element.prototype[name] = wrapper(name);\r\n    }\r\n}\r\n\r\nfunction wrapper(name: string) {\r\n    return function() {\r\n        return Element[name](this, ...arguments);\r\n    }\r\n}\r\n\r\n//\r\n// extra class methods\r\n//\r\n\r\n/*?\r\n    flagrate.Element.extend(element) -> flagrate.Element\r\n    - element (Element) - instance of Element.\r\n\r\n    Extends the given `element` instance.\r\n\r\n    **Caution**: This method will add Flagrate.Element instance methods to given element instance.\r\n**/\r\nElement.extend = (element) => {\r\n\r\n    if (element.isFlagrated) {\r\n        return element;\r\n    }\r\n\r\n    extendObject(element, Element.prototype);\r\n\r\n    return element;\r\n};\r\n\r\n/*?\r\n    flagrate.Element.isElement(element) -> Boolean\r\n    - element (Element) - instance of Element.\r\n**/\r\nif (typeof HTMLElement === \"object\") {\r\n    Element.isElement = (object) => {\r\n        return object instanceof HTMLElement;\r\n    };\r\n} else {\r\n    Element.isElement = (object) => {\r\n        return !!(object && object.nodeType === 1 && typeof object.nodeName === \"string\");\r\n    };\r\n}"]}
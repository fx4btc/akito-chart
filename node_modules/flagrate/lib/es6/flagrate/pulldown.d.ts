import { Attribute, Property, FHTMLDivElement } from "./element";
import { Button, ButtonEvent } from "./button";
import { ItemOption } from "./menu";
export interface Pulldown extends Instance, Button {
}
export interface Class {
    new (option?: Option): Pulldown;
    prototype: Instance;
}
export interface Instance {
    items?: ItemOption[];
    open(event?: any): this;
    close(event?: any): this;
    onOpen?(event?: ButtonEvent, button?: this): void;
    onClose?(event?: ButtonEvent, button?: this): void;
    _menu?: FHTMLDivElement;
    _open?: boolean;
}
export interface Option {
    /** id attribute. */
    id?: string;
    /** class attribute. */
    className?: string;
    /** attribute/value pairs properties. */
    attribute?: Attribute;
    /** CSS style properties (uses flagrate.Element.setStyle). */
    style?: Property;
    /** Color (uses flagrate.Button#setColor). */
    color?: string;
    /** Label text. */
    label?: string;
    /** icon image URL. */
    icon?: string;
    /** default is false. */
    isDisabled?: boolean;
    /** Button items */
    items?: ItemOption[];
    onSelect?(event?: ButtonEvent, button?: Pulldown): void;
    onOpen?(event?: any, button?: Pulldown): void;
    onClose?(event?: any, button?: Pulldown): void;
}
export declare const Pulldown: Class;
export declare function createPulldown(option?: Option): Pulldown;

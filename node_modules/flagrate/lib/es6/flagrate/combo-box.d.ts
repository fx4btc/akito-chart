import { Attribute, Property, FHTMLDivElement } from "./element";
import { Button } from "./button";
import { Menu } from "./menu";
import { TextInput } from "./text-input";
export interface ComboBox extends Instance, FHTMLDivElement {
}
export interface Class {
    new (option?: Option): ComboBox;
    prototype: Instance;
}
export interface Instance {
    disable(): this;
    enable(): this;
    isEnabled(): boolean;
    getValue(): any;
    setValue(value: string): this;
    setIcon(url?: string): this;
    getIcon(): string;
    isValid(): boolean;
    items?: string[];
    /** RegExp for simple validation feature. */
    regexp?: RegExp;
    _textinput?: TextInput;
    _button?: Button;
    _menu?: Menu;
}
export interface Option {
    /** id attribute. */
    id?: string;
    /** class attribute. */
    className?: string;
    /** attribute/value pairs properties. */
    attribute?: Attribute;
    /** CSS style properties (uses flagrate.Element.setStyle). */
    style?: Property;
    /** default value. */
    value?: string;
    /** Array of string values. */
    items?: string[];
    /** placeholder. */
    placeholder?: string;
    /** icon image URL. */
    icon?: string;
    /** RegExp for simple validation feature. */
    regexp?: RegExp;
    /** default is false. */
    isDisabled?: boolean;
}
export declare const ComboBox: Class;
export declare function createComboBox(option?: Option): ComboBox;

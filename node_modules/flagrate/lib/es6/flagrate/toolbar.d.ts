import { Attribute, Property, FHTMLElement, FHTMLDivElement } from "./element";
export interface Toolbar extends Instance, FHTMLDivElement {
}
export interface Class {
    new (option?: Option): Toolbar;
    prototype: Instance;
}
export interface Instance {
    push(item: ItemOption): this;
    getElementByKey(key: string): FHTMLElement;
    getElements(): FHTMLElement[];
}
export interface Option {
    /** id attribute. */
    id?: string;
    /** class attribute. */
    className?: string;
    /** attribute/value pairs properties. */
    attribute?: Attribute;
    /** CSS style properties (uses Flagrate.Element.setStyle). */
    style?: Property;
    /** items */
    items?: ItemOption[];
}
export interface ItemOption {
    /** key */
    key?: string;
    /** element */
    element?: FHTMLElement;
    /** if this true ignores element option */
    isBorder?: boolean;
}
export declare const Toolbar: Class;
export declare function createToolbar(option?: Option): Toolbar;

{"version":3,"sources":["flagrate/text-input.ts"],"names":[],"mappings":"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","file":"text-input.js","sourcesContent":["/*\r\n   Copyright 2016 Webnium\r\n\r\n   Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   you may not use this file except in compliance with the License.\r\n   You may obtain a copy of the License at\r\n\r\n       http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n   Unless required by applicable law or agreed to in writing, software\r\n   distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   See the License for the specific language governing permissions and\r\n   limitations under the License.\r\n*/\r\n\"use strict\";\r\n\r\nimport { extendObject, emptyFunction } from \"./util\";\r\nimport { Element, Attribute, Property, FHTMLInputElement }  from \"./element\";\r\n\r\n/*?\r\n    class flagrate.TextInput\r\n\r\n    TextInput.\r\n\r\n    #### Inheritance\r\n\r\n    * flagrate.Element\r\n    * [HTMLInputElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement) (MDN)\r\n**/\r\nexport interface TextInput extends Instance, FHTMLInputElement { }\r\n\r\nexport interface Class {\r\n    new (option?: Option): TextInput;\r\n    prototype: Instance;\r\n}\r\n\r\nexport interface Instance {\r\n    disable(): this;\r\n    enable(): this;\r\n    isEnabled(): boolean;\r\n    setValue(value: string): this;\r\n    getValue(): string;\r\n    setIcon(url?: string): this;\r\n    getIcon(): string;\r\n    isValid(): boolean;\r\n}\r\n\r\nexport interface Option {\r\n    /** id attribute. */\r\n    id?: string;\r\n\r\n    /** class attribute. */\r\n    className?: string;\r\n\r\n    /** attribute/value pairs properties. */\r\n    attribute?: Attribute;\r\n\r\n    /** CSS style properties (uses flagrate.Element.setStyle). */\r\n    style?: Property;\r\n\r\n    /** default value. */\r\n    value?: string;\r\n\r\n    /** placeholder. */\r\n    placeholder?: string;\r\n\r\n    /** icon image URL. */\r\n    icon?: string;\r\n\r\n    /** RegExp for simple validation feature. */\r\n    regexp?: RegExp;\r\n\r\n    /** default is false. */\r\n    isDisabled?: boolean;\r\n}\r\n\r\n/*?\r\n    flagrate.createTextInput(option)\r\n    new flagrate.TextInput(option)\r\n    - option (Object) - options.\r\n\r\n    TextInput.\r\n\r\n    #### option\r\n\r\n    * `id`                       (String): `id` attribute of `input` element.\r\n    * `className`                (String):\r\n    * `attribute`                (Object):\r\n    * `style`                    (Object): (using flagrate.Element.setStyle)\r\n    * `value`                    (String):\r\n    * `placeholder`              (String):\r\n    * `icon`                     (String):\r\n    * `regexp`                   (RegExp):\r\n    * `isDisabled`               (Boolean; default `false`):\r\n**/\r\nfunction FTextInput(option: Option = {}) {\r\n\r\n    this.regexp = option.regexp || null;\r\n\r\n    const attr = option.attribute || {};\r\n\r\n    if (option.id) {\r\n        attr[\"id\"] = option.id;\r\n    }\r\n    if (option.value) {\r\n        attr[\"value\"] = option.value;\r\n    }\r\n    if (option.placeholder) {\r\n        attr[\"placeholder\"] = option.placeholder;\r\n    }\r\n\r\n    //create\r\n    const input = new Element(\"input\", attr) as TextInput;\r\n    extendObject(input, this);\r\n\r\n    input.addClassName(\"flagrate flagrate-textinput\");\r\n    if (option.className) {\r\n        input.addClassName(option.className);\r\n    }\r\n\r\n    if (option.style) {\r\n        input.setStyle(option.style);\r\n    }\r\n    if (option.icon) {\r\n        input.setIcon(option.icon);\r\n    }\r\n\r\n    if (option.isDisabled) {\r\n        input.disable();\r\n    }\r\n\r\n    return input;\r\n}\r\n\r\nexport const TextInput = FTextInput as any as Class;\r\n\r\nexport function createTextInput(option?: Option): TextInput {\r\n    return new TextInput(option);\r\n}\r\n\r\nTextInput.prototype = {\r\n    disable() {\r\n\r\n        this.addClassName(\"flagrate-disabled\");\r\n        this.writeAttribute(\"disabled\", true);\r\n\r\n        return this;\r\n    },\r\n\r\n    enable() {\r\n\r\n        this.removeClassName(\"flagrate-disabled\");\r\n        this.writeAttribute(\"disabled\", false);\r\n\r\n        return this;\r\n    },\r\n\r\n    isEnabled() {\r\n        return !this.hasClassName(\"flagrate-disabled\");\r\n    },\r\n\r\n    setValue(value: string) {\r\n\r\n        this.value = value;\r\n\r\n        return this;\r\n    },\r\n\r\n    getValue() {\r\n        return this.value;\r\n    },\r\n\r\n    setIcon(identifier) {\r\n\r\n        this._iconIdentifier = identifier;\r\n\r\n        if (identifier) {\r\n            return this.addClassName(\"flagrate-icon\").setStyle({\r\n                backgroundImage: `url(${identifier})`\r\n            });\r\n        } else {\r\n            return this.removeClassName(\"flagrate-icon\").setStyle({\r\n                backgroundImage: \"none\"\r\n            });\r\n        }\r\n    },\r\n\r\n    getIcon() {\r\n        return this._iconIdentifier || \"\";\r\n    },\r\n\r\n    isValid: function () {\r\n        return this.regexp.test(this.getValue());\r\n    }\r\n};"]}
{"version":3,"sources":["flagrate/menu.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;EAcE;AACF,YAAY,CAAC;AAEb,OAAO,EAAE,YAAY,EAAE,aAAa,EAAE,MAAM,QAAQ,CAAC;AACrD,OAAO,EAAE,OAAO,EAAwC,MAAM,WAAW,CAAC;AAC1E,OAAO,KAAK,MAAM,MAAM,UAAU,CAAC;AACnC,OAAO,EAAE,OAAO,EAAE,MAAM,WAAW,CAAC;AAsFpC;;;;;;;;;;;;;;;;;;;;;;GAsBG;AACH,eAAe,SAAiB,EAAE;IAE9B,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,IAAI,EAAE,CAAC;IAElC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,IAAI,aAAa,CAAC;IAEjD,MAAM,IAAI,GAAG,MAAM,CAAC,SAAS,IAAI,EAAE,CAAC;IACpC,EAAE,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;QACZ,IAAI,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,EAAE,CAAC;IAC3B,CAAC;IAED,qBAAqB;IACrB,MAAM,SAAS,GAAG,IAAI,OAAO,CAAC,KAAK,EAAE,IAAI,CAAS,CAAC;IACnD,YAAY,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;IAE9B,SAAS,CAAC,YAAY,CAAC,wBAAwB,CAAC,CAAC;IACjD,EAAE,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;QACnB,SAAS,CAAC,YAAY,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;IAC7C,CAAC;IAED,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;QACf,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IACrC,CAAC;IAED,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;QAClD,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IACpC,CAAC;IAED,SAAS,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC,CAAC;QAClC,CAAC,CAAC,eAAe,EAAE,CAAC;QACpB,CAAC,CAAC,cAAc,EAAE,CAAC;IACvB,CAAC,CAAC,CAAC;IAEH,SAAS,CAAC,gBAAgB,CAAC,SAAS,EAAE,CAAC,CAAC;QACpC,CAAC,CAAC,eAAe,EAAE,CAAC;IACxB,CAAC,CAAC,CAAC;IAEH,MAAM,CAAC,SAAS,CAAC;AACrB,CAAC;AAED,MAAM,CAAC,MAAM,IAAI,GAAG,KAAqB,CAAC;AAE1C,MAAM,qBAAqB,MAAe;IACtC,MAAM,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC;AAC5B,CAAC;AAED,IAAI,CAAC,SAAS,GAAG;IACb,IAAI,CAAC,MAAkB;QAEnB,EAAE,CAAC,CAAC,OAAO,MAAM,KAAK,QAAQ,CAAC,CAAC,CAAC;YAC7B,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACrC,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,MAAM,SAAS,GAAG,MAAM,CAAC,QAAQ,CAAC;YAElC,MAAM,CAAC,QAAQ,GAAG,CAAC,CAAC,EAAE,MAAM;gBAExB,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;oBACZ,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC;gBACtC,CAAC;gBAED,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;YAC3B,CAAC,CAAC;YAEF,MAAM,GAAG,GAAG,IAAI,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YAErD,EAAE,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;gBACb,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC;YACrC,CAAC;QACL,CAAC;QAED,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IAED,cAAc,EAAE,OAAO,CAAC,SAAS,CAAC,cAAc;IAEhD,UAAU,EAAE,OAAO,CAAC,SAAS,CAAC,UAAU;CAC3C,CAAC","file":"menu.js","sourcesContent":["/*\r\n   Copyright 2016 Webnium\r\n\r\n   Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   you may not use this file except in compliance with the License.\r\n   You may obtain a copy of the License at\r\n\r\n       http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n   Unless required by applicable law or agreed to in writing, software\r\n   distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   See the License for the specific language governing permissions and\r\n   limitations under the License.\r\n*/\r\n\"use strict\";\r\n\r\nimport { extendObject, emptyFunction } from \"./util\";\r\nimport { Element, Attribute, Property, FHTMLDivElement } from \"./element\";\r\nimport * as button from \"./button\";\r\nimport { Buttons } from \"./buttons\";\r\n\r\n/*?\r\n    class flagrate.Menu\r\n\r\n    #### Example\r\n\r\n        var menu = flagrate.createMenu({\r\n            items: [\r\n                {\r\n                    label: \"foo\"\r\n                },\r\n                {\r\n                    label: \"bar\",\r\n                    icon : \"icon.png\"\r\n                },\r\n                \"--\",\r\n                {\r\n                    label: \"disabled button\",\r\n                    isDisabled: true\r\n                }\r\n            ]\r\n        }).insertTo(x);\r\n\r\n    #### Structure\r\n\r\n    <div class=\"example-container\">\r\n        <div class=\"flagrate flagrate-menu\">\r\n            <button class=\"flagrate flagrate-button\">foo</button>\r\n            <button class=\"flagrate flagrate-button flagrate-icon\" style=\"background-image: url(icon.png);\">bar</button>\r\n            <hr>\r\n            <button class=\"flagrate flagrate-button flagrate-disabled\" disabled=\"disabled\">disabled button</button>\r\n        </div>\r\n    </div>\r\n\r\n        <div class=\"flagrate flagrate-menu\">\r\n            <button class=\"flagrate flagrate-button\">foo</button>\r\n            <button class=\"flagrate flagrate-button flagrate-icon\" style=\"background-image: url(icon.png);\">bar</button>\r\n            <hr>\r\n            <button class=\"flagrate flagrate-button flagrate-disabled\" disabled=\"disabled\">disabled button</button>\r\n        </div>\r\n\r\n    `button` elements are created with flagrate.Button\r\n\r\n    #### Inheritances\r\n\r\n    * flagrate.Element\r\n    * flagrate.Button\r\n**/\r\nexport interface Menu extends Instance, FHTMLDivElement { }\r\n\r\nexport interface Class {\r\n    new (option?: Option): Menu;\r\n    prototype: Instance;\r\n}\r\n\r\nexport interface Instance {\r\n    push(item: ItemOption): this;\r\n    getButtonByKey(key: string): button.Button;\r\n    getButtons(): button.Button[];\r\n}\r\n\r\nexport interface Option {\r\n    /** id attribute. */\r\n    id?: string;\r\n\r\n    /** class attribute. */\r\n    className?: string;\r\n\r\n    /** attribute/value pairs properties. */\r\n    attribute?: Attribute;\r\n\r\n    /** CSS style properties (uses flagrate.Element.setStyle). */\r\n    style?: Property;\r\n\r\n    /** Button items */\r\n    items?: ItemOption[];\r\n\r\n    onSelect?(event?: button.ButtonEvent, menu?: Menu): void;\r\n}\r\n\r\nexport interface ItemOption extends button.Option {\r\n    /** key */\r\n    key?: string;\r\n}\r\n\r\n/*?\r\n    flagrate.createMenu(option)\r\n    new flagrate.Menu(option)\r\n    - option (Object) - options.\r\n\r\n    Menu.\r\n\r\n    #### option\r\n\r\n    * `id`                       (String): `id` attribute of container element.\r\n    * `className`                (String):\r\n    * `attribute`                (Object):\r\n    * `items`                    (Array): of item\r\n    * `onSelect`                 (Function):\r\n\r\n    #### item\r\n\r\n    * `key`                      (String):\r\n    * `label`                    (String; default `\"\"`):\r\n    * `icon`                     (String):\r\n    * `isDisabled`               (Boolean; default `false`):\r\n    * `onSelect`                 (Function):\r\n**/\r\nfunction FMenu(option: Option = {}) {\r\n\r\n    option.items = option.items || [];\r\n\r\n    this.onSelect = option.onSelect || emptyFunction;\r\n\r\n    const attr = option.attribute || {};\r\n    if (option.id) {\r\n        attr[\"id\"] = option.id;\r\n    }\r\n\r\n    // create a container\r\n    const container = new Element(\"div\", attr) as Menu;\r\n    extendObject(container, this);\r\n\r\n    container.addClassName(\"flagrate flagrate-menu\");\r\n    if (option.className) {\r\n        container.addClassName(option.className);\r\n    }\r\n\r\n    if (option.style) {\r\n        container.setStyle(option.style);\r\n    }\r\n\r\n    for (let i = 0, l = option.items.length; i < l; i++) {\r\n        container.push(option.items[i]);\r\n    }\r\n\r\n    container.addEventListener(\"click\", (e) => {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n    });\r\n\r\n    container.addEventListener(\"mouseup\", (e) => {\r\n        e.stopPropagation();\r\n    });\r\n\r\n    return container;\r\n}\r\n\r\nexport const Menu = FMenu as any as Class;\r\n\r\nexport function createMenu(option?: Option): Menu {\r\n    return new Menu(option);\r\n}\r\n\r\nMenu.prototype = {\r\n    push(option: ItemOption) {\r\n\r\n        if (typeof option === \"string\") {\r\n            new Element(\"hr\").insertTo(this);\r\n        } else {\r\n            const _onSelect = option.onSelect;\r\n\r\n            option.onSelect = (e, button) => {\r\n\r\n                if (_onSelect) {\r\n                    _onSelect.call(button, e, button);\r\n                }\r\n\r\n                this.onSelect(e, this);\r\n            };\r\n\r\n            const btn = new button.Button(option).insertTo(this);\r\n\r\n            if (option.key) {\r\n                btn.dataset[\"_key\"] = option.key;\r\n            }\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    getButtonByKey: Buttons.prototype.getButtonByKey,\r\n\r\n    getButtons: Buttons.prototype.getButtons\r\n};"]}
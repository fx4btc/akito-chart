{"version":3,"sources":["flagrate/toolbar.ts"],"names":[],"mappings":"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","file":"toolbar.js","sourcesContent":["/*\r\n   Copyright 2016 Webnium\r\n\r\n   Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   you may not use this file except in compliance with the License.\r\n   You may obtain a copy of the License at\r\n\r\n       http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n   Unless required by applicable law or agreed to in writing, software\r\n   distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   See the License for the specific language governing permissions and\r\n   limitations under the License.\r\n*/\r\n\"use strict\";\r\n\r\nimport { extendObject } from \"./util\";\r\nimport { Element, Attribute, Property, FHTMLElement, FHTMLDivElement } from \"./element\";\r\n\r\n/*?\r\n    class flagrate.Toolbar\r\n**/\r\nexport interface Toolbar extends Instance, FHTMLDivElement { }\r\n\r\nexport interface Class {\r\n    new (option?: Option): Toolbar;\r\n    prototype: Instance;\r\n}\r\n\r\nexport interface Instance {\r\n    push(item: ItemOption): this;\r\n    getElementByKey(key: string): FHTMLElement;\r\n    getElements(): FHTMLElement[];\r\n}\r\n\r\nexport interface Option {\r\n    /** id attribute. */\r\n    id?: string;\r\n\r\n    /** class attribute. */\r\n    className?: string;\r\n\r\n    /** attribute/value pairs properties. */\r\n    attribute?: Attribute;\r\n\r\n    /** CSS style properties (uses Flagrate.Element.setStyle). */\r\n    style?: Property;\r\n\r\n    /** items */\r\n    items?: ItemOption[];\r\n}\r\n\r\nexport interface ItemOption {\r\n    /** key */\r\n    key?: string;\r\n\r\n    /** element */\r\n    element?: FHTMLElement;\r\n\r\n    /** if this true ignores element option */\r\n    isBorder?: boolean;\r\n}\r\n\r\n/*?\r\n    flagrate.createToolbar(option)\r\n    new flagrate.Toolbar(option)\r\n    - option (Object) - options.\r\n\r\n    Toolbar.\r\n\r\n    #### option\r\n\r\n    * `id`                       (String): `id` attribute of container element.\r\n    * `className`                (String):\r\n    * `attribute`                (Object):\r\n    * `style`                    (Object): (using flagrate.Element.setStyle)\r\n    * `items`                    (Array): of item or String to create border, Element to insert any element.\r\n\r\n    #### item\r\n\r\n    * `key`                      (String):\r\n    * `element`                  (Element):\r\n**/\r\nfunction FToolbar(option: Option = {}): Toolbar {\r\n\r\n    const items = option.items || [];\r\n    const attr = option.attribute || {};\r\n\r\n    if (option.id) {\r\n        attr[\"id\"] = option.id;\r\n    }\r\n\r\n    //create\r\n    const container = new Element(\"div\", attr) as Toolbar;\r\n    extendObject(container, this);\r\n\r\n    container.addClassName(\"flagrate flagrate-toolbar\");\r\n    if (option.className) {\r\n        container.addClassName(option.className);\r\n    }\r\n\r\n    if (option.style) {\r\n        container.setStyle(option.style);\r\n    }\r\n\r\n    for (let i = 0, l = items.length; i < l; i++) {\r\n        container.push(items[i]);\r\n    }\r\n\r\n    return container;\r\n}\r\n\r\nexport const Toolbar = FToolbar as any as Class;\r\n\r\nexport function createToolbar(option?: Option): Toolbar {\r\n    return new Toolbar(option);\r\n}\r\n\r\nToolbar.prototype = {\r\n    push(option: ItemOption) {\r\n\r\n        if (typeof option === \"string\") {\r\n            new Element(\"hr\").insertTo(this);\r\n        } else if (option instanceof HTMLElement) {\r\n            this.insert(option);\r\n        } else {\r\n            let element;\r\n\r\n            if (option.isBorder) {\r\n                element = new Element(\"hr\").insertTo(this);\r\n            } else {\r\n                if (!option.element.isFlagrated) {\r\n                    option.element = Element.extend(option.element);\r\n                }\r\n                element = Element.insertTo(option.element, this);\r\n            }\r\n\r\n            if (option.key) {\r\n                element.dataset[\"_key\"] = option.key;\r\n            }\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    getElementByKey(key: string) {\r\n\r\n        const elements = this.childNodes;\r\n        for (let i = 0, l = elements.length; i < l; i++) {\r\n            if (elements[i].dataset[\"_key\"] === key) {\r\n                return elements[i];\r\n            }\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n    getElements() {\r\n        return this.childNodes || [];\r\n    }\r\n};"]}
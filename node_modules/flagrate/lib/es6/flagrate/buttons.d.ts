import { Attribute, Property, FHTMLDivElement } from "./element";
import * as button from "./button";
export interface Buttons extends Instance, FHTMLDivElement {
}
export interface Class {
    new (option?: Option): Buttons;
    prototype: Instance;
}
export interface Instance {
    push(button: ButtonOption): this;
    getButtonByKey(key: string): button.Button;
    getButtons(): button.Button[];
}
export interface Option {
    /** id attribute. */
    id?: string;
    /** class attribute. */
    className?: string;
    /** attribute/value pairs properties. */
    attribute?: Attribute;
    /** CSS style properties (uses flagrate.Element.setStyle). */
    style?: Property;
    /** Button items */
    items?: ButtonOption[];
    onSelect?(event?: button.ButtonEvent, buttons?: Buttons): void;
}
export interface ButtonOption extends button.Option {
    /** key */
    key?: string;
}
export declare const Buttons: Class;
export declare function createButtons(option?: Option): Buttons;

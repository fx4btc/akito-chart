import { Attribute, Property, FHTMLDivElement } from "./element";
import { Radio, Option as _RadioOption, RadioEvent } from "./radio";
export interface Radios extends Instance, FHTMLDivElement {
}
export interface Class {
    new (option?: Option): Radios;
    prototype: Instance;
}
export interface Instance {
    select(index: number): this;
    getValue(): any;
    setValue(value: any): this;
    enable(): this;
    disable(): this;
    isEnabled(): boolean;
    onChange?(event: RadioEvent, target: this): void;
    selectedIndex?: number;
    _items?: RadiosItem[];
}
export interface Option {
    /** id attribute. */
    id?: string;
    /** class attribute. */
    className?: string;
    /** attribute/value pairs properties. */
    attribute?: Attribute;
    /** CSS style properties (uses flagrate.Element.setStyle). */
    style?: Property;
    /** Button items */
    items?: (string | number | boolean | RadioOption)[];
    /** default selectedIndex */
    selectedIndex?: number;
    /** default is false. */
    isDisabled?: boolean;
    onChange?(event?: RadioEvent, target?: Radios): void;
}
export interface RadioOption extends _RadioOption {
    label: string;
    value: any;
}
export interface RadiosItem extends RadioOption {
    _radio?: Radio;
}
export declare const Radios: Class;
export declare function createRadios(option?: Option): Radios;

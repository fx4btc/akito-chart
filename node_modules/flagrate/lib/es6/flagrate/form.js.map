{"version":3,"sources":["flagrate/form.ts"],"names":[],"mappings":"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","file":"form.js","sourcesContent":["/*\r\n   Copyright 2016 Webnium\r\n\r\n   Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   you may not use this file except in compliance with the License.\r\n   You may obtain a copy of the License at\r\n\r\n       http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n   Unless required by applicable law or agreed to in writing, software\r\n   distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   See the License for the specific language governing permissions and\r\n   limitations under the License.\r\n*/\r\n\"use strict\";\r\n\r\nimport { jsonPointer } from \"./util\";\r\nimport {\r\n    Element, Attribute, Property, InsertPosition, FHTMLElement, FHTMLDivElement,\r\n    FHTMLInputElement, FHTMLFormElement, FHTMLLabelElement, FHTMLUListElement\r\n} from \"./element\";\r\nimport { TextInput } from \"./text-input\";\r\nimport { TextArea } from \"./text-area\";\r\nimport { ComboBox } from \"./combo-box\";\r\nimport { Checkbox } from \"./checkbox\";\r\nimport { Checkboxes, CheckboxOption as CheckboxesItem } from \"./checkboxes\";\r\nimport { Switch } from \"./switch\";\r\nimport { Radios, RadioOption as RadiosItem } from \"./radios\";\r\nimport { Select, ItemOption as SelectItem } from \"./select\";\r\n\r\n/*?\r\n    class flagrate.Form\r\n\r\n    The flagrate.Form provides an interactive form UI.\r\n**/\r\nexport interface Option {\r\n    fields?: FieldOption[];\r\n\r\n    /** `id` attribute of container. */\r\n    id?: string;\r\n    /** `class` attribute of container. */\r\n    className?: string;\r\n    /** additional attribute of container. */\r\n    attribute?: Attribute;\r\n    /** style of container. (using flagrate.Element.setStyle) */\r\n    style?: Property;\r\n\r\n    /** hide labels. */\r\n    nolabel?: boolean;\r\n    /** vertical label style. */\r\n    vertical?: boolean;\r\n}\r\n\r\nexport interface Field extends FieldOption {\r\n    input?: Input;\r\n\r\n    getVal?(): any;\r\n    setVal?(val: any): Field;\r\n    validate?(done?: (result?: boolean) => void): void;\r\n    visible?(): boolean;\r\n\r\n    /** field container element */\r\n    readonly container?: FHTMLDivElement;\r\n    /** label element */\r\n    readonly labelElement?: FHTMLLabelElement;\r\n    /** input container element */\r\n    _input?: FHTMLDivElement;\r\n\r\n    /** dependency references */\r\n    _refs?: Field[];\r\n    _dependsIsOk?: boolean;\r\n    _hasError?: boolean;\r\n    _hasWarning?: boolean;\r\n    _checkRefs?(): void;\r\n    _inputOnChange?(): void;\r\n}\r\n\r\nexport interface FieldOption {\r\n    key?: string;\r\n    pointer?: string;\r\n\r\n    label?: string;\r\n    icon?: string;\r\n    text?: string;\r\n    html?: string;\r\n    element?: HTMLElement;\r\n\r\n    input?: InputOption;\r\n    depends?: Depend[];\r\n\r\n    /** `id` attribute of container. */\r\n    id?: string;\r\n    /** `class` attribute of container. */\r\n    className?: string;\r\n    /** additional attribute of container. */\r\n    attribute?: Attribute;\r\n    /** style of container. (using flagrate.Element.setStyle) */\r\n    style?: Property;\r\n}\r\n\r\nexport interface Input extends InputOption {\r\n    type?: InputType;\r\n\r\n    validators?: (RegExpValidator | ValidatorFunction)[];\r\n\r\n    /** input element */\r\n    readonly element?: FHTMLDivElement;\r\n\r\n    _result?: FHTMLUListElement;\r\n}\r\n\r\nexport interface InputOption {\r\n    type?: string | InputType;\r\n    val?: any;\r\n\r\n    /** default is `false`. */\r\n    isRequired?: boolean;\r\n\r\n    min?: number;\r\n    max?: number;\r\n    minLength?: number;\r\n    maxLength?: number;\r\n    validators?: (string | RegExpValidator | ValidatorFunction)[];\r\n\r\n    /** if NOT String, use `val.toString()` before resulting. */\r\n    toStr?: boolean;\r\n    /** if String, use `String#trim()` before resulting. */\r\n    trim?: boolean;\r\n    /** if NOT Number, tries to convert to Number. */\r\n    toNumber?: boolean;\r\n    /** alternate result transform/converting function. (only sync) */\r\n    transform?(val?: any): any;\r\n\r\n    /** `id` attribute of input element. */\r\n    id?: string;\r\n    /** style of input. (using flagrate.Element.setStyle) */\r\n    style?: Property;\r\n    /** additional attribute of input. */\r\n    attribute?: Attribute;\r\n\r\n    // anyway,\r\n    placeholder?: string;\r\n    label?: string;\r\n    labelHTML?: string;\r\n    icon?: string;\r\n    items?: (string | number | boolean | CheckboxesItem | SelectItem | RadiosItem)[];\r\n    selectedIndex?: number;\r\n    selectedIndexes?: number[];\r\n    listView?: boolean;\r\n    multiple?: boolean;\r\n    accept?: string;\r\n    acceptTypes?: string[];\r\n}\r\n\r\nexport interface Depend {\r\n    /** unique key for identifying fields. if looking result, must change to use the pointer. */\r\n    key?: string;\r\n    pointer?: string;\r\n\r\n    val?: any;\r\n\r\n    /** comparison operator */\r\n    op?: \"===\" | \"!==\" | \">=\" | \"<=\" | \">\" | \"<\" | \"in\";\r\n\r\n    /** alternate testing function. this disables normal testing. (only sync) */\r\n    tester?(a?: any, b?: any): boolean;\r\n}\r\n\r\nexport interface InputType {\r\n    changeEvents?: string[];\r\n    create(): HTMLElement;\r\n    getVal(): any;\r\n    setVal(val?: any): void;\r\n    enable(): void;\r\n    disable(): void;\r\n}\r\n\r\nexport interface RegExpValidator {\r\n    regexp: RegExp,\r\n    success?: string;\r\n    error?: string;\r\n}\r\n\r\nexport type ValidatorFunction = (input: any, done: (result: boolean | \"success\" | \"warning\" | \"error\", message?: string) => void) => void;\r\n\r\n/*?\r\n    flagrate.createForm(option)\r\n    new flagrate.Form(option)\r\n    - option (Object) - configuration.\r\n\r\n    Create and initialize the Form.\r\n\r\n    #### option\r\n\r\n    * `fields`                   (Array; default `[]`): of **[field](#field)** object.\r\n    * `id`                       (String): `id` attribute of container.\r\n    * `className`                (String): `class` attribute of container.\r\n    * `attribute`                (Object): additional attribute of container.\r\n    * `style`                    (Object): style of container. (using flagrate.Element.setStyle)\r\n    * `nolabel`                  (Boolean; default `false`): hide labels.\r\n    * `vertical`                 (Boolean; default `false`): vertical label style.\r\n\r\n    #### field\r\n\r\n    * `key`                      (String):\r\n    * `pointer`                  (String|null):\r\n    * `label`                    (String; default `\"\"`):\r\n    * `icon`                     (String):\r\n    * `text`                     (String):\r\n    * `html`                     (String):\r\n    * `element`                  (Element):\r\n    * `input`                    (Object): see **[input](#input)**\r\n    * `depends`                  (Array): of **[depend](#depend)**\r\n    * `id`                       (String): `id` attribute of container.\r\n    * `className`                (String): `class` attribute of container.\r\n    * `attribute`                (Object): additional attribute of container.\r\n    * `style`                    (Object): style of container. (using flagrate.Element.setStyle)\r\n\r\n    #### input\r\n\r\n    * `type`                     (String|Object; **required**): **[inputtype](#inputType)** String or Object\r\n    * `val`                      (any): default value(s) of this input.\r\n    * `isRequired`               (Boolean; default `false`):\r\n    * `min`                      (Number): (simple validator)\r\n    * `max`                      (Number): (simple validator)\r\n    * `minLength`                (Number): (simple validator)\r\n    * `maxLength`                (Number): (simple validator)\r\n    * `validators`               (Array): of **[inputValidator](#inputvalidator)** String or Object or Function.\r\n    * `toString`                 (Boolean; default `false`): if NOT String, use [#toString()](https://developer.mozilla.org/ja/docs/toString) before resulting.\r\n    * `trim`                     (Boolean; default `false`): if String, use [String#trim()](https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects/String/trim) before resulting.\r\n    * `toNumber`                 (Boolean; default `false`): if NOT Number, tries to convert to Number.\r\n    * `transform`                (Function): alternate result transform/converting function. (only sync)\r\n    * `id`                       (String): `id` attribute of input element.\r\n\r\n    #### depend\r\n\r\n    * `key`                      (String): unique key for identifying fields. if looking result, must change to use the pointer.\r\n    * `pointer`                  (String):\r\n    * `val`                      (any):\r\n    * `op`                       (String): `===`, `!==`, `>=`, `<=`, `>`, `<`, `in`\r\n    * `tester`                   (Function): alternate testing function. this disables normal testing. (only sync)\r\n\r\n    #### inputType\r\n\r\n    if specified a String, will use flagrate.Form.inputType[(specified)].\r\n\r\n    #### inputValidator\r\n\r\n    if specified a String, will use flagrate.Form.inputValidator[(specified)].\r\n\r\n        // Example: custom validator\r\n        validators: [\r\n            // using regex:\r\n            {\r\n                regexp: /^[a-z0-9]+(-[a-z0-9]+)*(\\.([a-z0-9]+(-[a-z0-9]+)*))*$/i,\r\n                error: \"Please enter a valid hostname string.\"\r\n            },\r\n            // using async function:\r\n            function (input, done) {\r\n                someAsyncFunction(input, function (err, result) {\r\n                    if (err) {\r\n                        done(\"error\", \"This hostname is already in use. (\" + err + \")\");\r\n                    } else {\r\n                        done(\"success\");\r\n                    }\r\n                });\r\n            },\r\n            // using sync function:\r\n            function (input, done) {\r\n                var err = someSyncFunction(input);\r\n                if (err) {\r\n                    done(\"error\", \"This hostname is prohibited. (\" + err + \")\");\r\n                } else {\r\n                    done(\"success\");\r\n                }\r\n            }\r\n        ]\r\n\r\n    see flagrate.Form.inputValidator to read more documents.\r\n**/\r\nexport class Form {\r\n\r\n    private _fields: Field[] = [];\r\n\r\n    private _nolabel: boolean = false;\r\n    private _vertical: boolean = false;\r\n\r\n    element = new Element(\"form\", { \"class\": \"flagrate flagrate-form\" });\r\n\r\n    static idCounter = 0;\r\n    private _id = \"flagrate-form-\" + (++Form.idCounter).toString(10);\r\n\r\n    private _renderTimer: number;\r\n\r\n    constructor(private _opt: Option = {}) {\r\n\r\n        if (_opt.nolabel === true) {\r\n            this._nolabel = true;\r\n        }\r\n        if (_opt.vertical === true) {\r\n            this._vertical = true;\r\n        }\r\n\r\n        this._create();\r\n\r\n        if (_opt.fields && _opt.fields.length !== 0) {\r\n            this.push(_opt.fields);\r\n        }\r\n    }\r\n\r\n    insertTo(element: HTMLElement, pos?: InsertPosition): this {\r\n        return this.element.insertTo(element, pos) && this;\r\n    }\r\n\r\n    on(eventType: string, listener: EventListener, useCapture?: boolean): this {\r\n        return this.element.on(eventType, listener, useCapture) && this;\r\n    }\r\n\r\n    off(eventType: string, listener?: EventListener, useCapture?: boolean): this {\r\n        return this.element.off(eventType, listener, useCapture) && this;\r\n    }\r\n\r\n    /** Returns a result Object. */\r\n    getResult(): any {\r\n\r\n        const result = {};\r\n\r\n        for (let i = 0, l = this._fields.length; i < l; i++) {\r\n            let field = this._fields[i];\r\n\r\n            if ((!field.key && typeof field.pointer !== \"string\") || field._dependsIsOk !== true) {\r\n                continue;\r\n            }\r\n\r\n            if (field.pointer === null) {\r\n                // null pointer\r\n                continue;\r\n            }\r\n\r\n            if (typeof field.pointer === \"string\") {\r\n                jsonPointer.set(result, field.pointer, field.getVal());\r\n            } else if (field.key) {\r\n                result[field.key] = field.getVal();\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    /*?\r\n        #### Example\r\n\r\n            form.validate(function(success) {\r\n                if (success) {\r\n                    console.log(\"form is valid.\");\r\n                } else {\r\n                    console.log(\"form is invalid.\");\r\n                }\r\n            });\r\n    **/\r\n    validate(callback?: (success?: boolean) => void): this {\r\n\r\n        const fields: Field[] = [];\r\n\r\n        for (let i = 0, l = this._fields.length; i < l; i++) {\r\n            let field = this._fields[i];\r\n\r\n            if (field._dependsIsOk === true && field.input && field.input.type) {\r\n                fields.push(field);\r\n            }\r\n        }\r\n\r\n        let hasError = false;\r\n\r\n        function fin() {\r\n\r\n            if (callback) {\r\n                callback(!hasError);\r\n            }\r\n        }\r\n\r\n        function done(result) {\r\n\r\n            if (result === false) {\r\n                hasError = true;\r\n            }\r\n\r\n            run();\r\n        }\r\n\r\n        function run() {\r\n\r\n            if (fields.length === 0) {\r\n                return fin();\r\n            }\r\n\r\n            fields.shift().validate(done);\r\n        }\r\n        run();\r\n\r\n        return this;\r\n    }\r\n\r\n    enable(): this {\r\n\r\n        for (let i = 0, l = this._fields.length; i < l; i++) {\r\n            const field = this._fields[i];\r\n\r\n            if (field.input && field.input.type) {\r\n                field.input.type.enable.call(field.input);\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    disable(): this {\r\n\r\n        for (let i = 0, l = this._fields.length; i < l; i++) {\r\n            const field = this._fields[i];\r\n\r\n            if (field.input && field.input.type) {\r\n                field.input.type.disable.call(field.input);\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    getField(key: string): Field {\r\n\r\n        for (let i = 0, l = this._fields.length; i < l; i++) {\r\n            const field = this._fields[i];\r\n\r\n            if (field.key && field.key === key) {\r\n                return field;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    push(field: Field): number;\r\n    push(fields: Field[]): number;\r\n    push(f) {\r\n\r\n        if (f instanceof Array) {\r\n            for (let i = 0, l = f.length; i < l; i++) {\r\n                this._createField(f[i]);\r\n                this._fields.push(f[i]);\r\n            }\r\n        } else {\r\n            this._createField(f);\r\n            this._fields.push(f);\r\n        }\r\n\r\n        for (let i = 0, l = this._fields.length; i < l; i++) {\r\n            this._collectFieldRefs(this._fields[i]);\r\n            this._checkFieldDepends(this._fields[i]);\r\n        }\r\n\r\n        this._requestRender();\r\n\r\n        return this._fields.length;\r\n    }\r\n\r\n    splice(index: number, howMany?: number, fields?: Field[]): Field[];\r\n    splice(index: number, howMany?: number, field?: Field): Field[];\r\n    splice(index, c, f) {\r\n\r\n        c = typeof c === \"undefined\" ? this._fields.length - index : c;\r\n\r\n        const removes = this._fields.splice(index, c);\r\n\r\n        for (let i = 0, l = removes.length; i < l; i++) {\r\n            if (removes[i].container) {\r\n                removes[i].container.remove();\r\n                delete (<any>removes[i]).container;\r\n            }\r\n        }\r\n\r\n        if (f) {\r\n            if (f instanceof Array === false) {\r\n                f = [f];\r\n            }\r\n\r\n            for (let i = 0, l = f.length; i < l; i++) {\r\n                this._createField(f[i]);\r\n                this._fields.splice(index + i, 0, f[i]);\r\n            }\r\n        }\r\n\r\n        for (let i = 0, l = this._fields.length; i < l; i++) {\r\n            this._collectFieldRefs(this._fields[i]);\r\n            this._checkFieldDepends(this._fields[i]);\r\n        }\r\n\r\n        this._requestRender();\r\n\r\n        return removes;\r\n    }\r\n\r\n    removeField(field: Field): Field;\r\n    removeField(fields: Field[]): Field[];\r\n    removeField(f) {\r\n\r\n        const removes: Field[] = [];\r\n        let bulk = true;\r\n\r\n        if (f instanceof Array === false) {\r\n            bulk = false;\r\n            f = [f];\r\n        }\r\n\r\n        for (let i = 0, l = f.length; i < l; i++) {\r\n            const index = (typeof f[i] === \"number\") ? f[i] : this.indexOf(f[i]);\r\n            if (index !== -1) {\r\n                removes.push(this.splice(index, 1));\r\n            }\r\n        }\r\n\r\n        return bulk ? removes : removes[0];\r\n    }\r\n\r\n    indexOf(field: Field): number;\r\n    indexOf(keyOfField: string): number;\r\n    indexOf(f) {\r\n\r\n        if (typeof f === \"string\") {\r\n            let index = -1;\r\n\r\n            for (let i = 0, l = this._fields.length; i < l; i++) {\r\n                if (this._fields[i].key === f) {\r\n                    index = i;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            return index;\r\n        } else {\r\n            return this._fields.indexOf(f);\r\n        }\r\n    }\r\n\r\n    private _create(): this {\r\n\r\n        if (this._opt.id) {\r\n            this.element.writeAttribute(\"id\", this._opt.id);\r\n        }\r\n        if (this._opt.className) {\r\n            this.element.addClassName(this._opt.className);\r\n        }\r\n        if (this._opt.attribute) {\r\n            this.element.writeAttribute(this._opt.attribute);\r\n        }\r\n        if (this._opt.style) {\r\n            this.element.setStyle(this._opt.style);\r\n        }\r\n\r\n        if (this._opt.nolabel === true) {\r\n            this.element.addClassName(\"flagrate-form-nolabel\");\r\n        }\r\n        if (this._opt.vertical === true) {\r\n            this.element.addClassName(\"flagrate-form-vertical\");\r\n        }\r\n\r\n        this.element.addEventListener(\"submit\", e => e.preventDefault());\r\n\r\n        return this;\r\n    }\r\n\r\n    private _requestRender(): this {\r\n\r\n        if (this._renderTimer) {\r\n            clearTimeout(this._renderTimer);\r\n        }\r\n        this._renderTimer = setTimeout(this._render.bind(this), 0);\r\n\r\n        return this;\r\n    }\r\n\r\n    private _render(): this {\r\n\r\n        const active = document.activeElement as HTMLInputElement;\r\n\r\n        for (let i = 0, l = this._fields.length; i < l; i++) {\r\n            const field = this._fields[i];\r\n\r\n            if (field._dependsIsOk === true) {\r\n                field.container.insertTo(this.element);\r\n            } else {\r\n                if (field.visible() === true) {\r\n                    field.container.remove();\r\n                }\r\n            }\r\n        }\r\n\r\n        if (active) {\r\n            if (/Trident/.test(window.navigator.userAgent) === true) {\r\n                setTimeout(() => {\r\n                    if (active.focus) {\r\n                        active.focus();\r\n                    }\r\n\r\n                    const isMustReselected = (\r\n                        (\r\n                            active.tagName === \"INPUT\" && (\r\n                                active.type === \"text\" ||\r\n                                active.type === \"password\" ||\r\n                                active.type === \"number\"\r\n                            )\r\n                        ) ||\r\n                        active.tagName === \"TEXTAREA\"\r\n                    );\r\n                    if (isMustReselected) {\r\n                        if (typeof active.selectionStart === \"number\") {\r\n                            active.selectionStart = active.selectionEnd = active.value.length;\r\n                        } else if (active[\"createTextRange\"] !== undefined) {\r\n                            const range = active[\"createTextRange\"]();\r\n                            range.collapse(false);\r\n                            range.select();\r\n                        }\r\n                    }\r\n                }, 0);\r\n            } else {\r\n                if (active.focus) {\r\n                    active.focus();\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    private _collectFieldRefs(field: Field): this {\r\n\r\n        field._refs = [];\r\n\r\n        // DEPRECATED\r\n        if (typeof field[\"point\"] !== \"undefined\") {\r\n            field.pointer = field[\"point\"];\r\n            delete field[\"point\"];\r\n        }\r\n        if (!field.key && typeof field.pointer !== \"string\") {\r\n            return this;\r\n        }\r\n\r\n        let i, l, j, m, k, n, fi, s;\r\n        for (i = 0, l = this._fields.length; i < l; i++) {\r\n            fi = this._fields[i];\r\n\r\n            if (field === fi || !fi.depends || fi.depends.length === 0) {\r\n                continue;\r\n            }\r\n\r\n            for (j = 0, m = fi.depends.length; j < m; j++) {\r\n                if (fi.depends[j] instanceof Array) {\r\n                    s = false;\r\n\r\n                    for (k = 0, n = fi.depends[j].length; k < n; k++) {\r\n                        if (fi.depends[j][k].key === field.key) {\r\n                            s = true;\r\n                            break;\r\n                        }\r\n                        if (typeof fi.depends[j][k].point === \"string\") {\r\n                            fi.depends[j][k].pointer = fi.depends[j][k].point;\r\n                            delete fi.depends[j][k].point;\r\n                        }\r\n                        if (typeof fi.depends[j][k].pointer === \"string\") {\r\n                            if (fi.depends[j][k].pointer === field.pointer) {\r\n                                s = true;\r\n                                break;\r\n                            }\r\n                            if (fi.depends[j][k].pointer === \"/\" + field.key) {\r\n                                s = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (s) {\r\n                        field._refs.push(fi);\r\n                    }\r\n                    break;\r\n                } else {\r\n                    if (fi.depends[j].key === field.key) {\r\n                        field._refs.push(fi);\r\n                        break;\r\n                    }\r\n                    if (typeof fi.depends[j].point === \"string\") {\r\n                        fi.depends[j].pointer = fi.depends[j].point;\r\n                        delete fi.depends[j].point;\r\n                    }\r\n                    if (typeof fi.depends[j].pointer === \"string\") {\r\n                        if (fi.depends[j].pointer === field.pointer) {\r\n                            field._refs.push(fi);\r\n                            break;\r\n                        }\r\n                        if (fi.depends[j].pointer === \"/\" + field.key) {\r\n                            field._refs.push(fi);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    private _compareDepend(d: Depend): boolean {\r\n\r\n        let v;\r\n\r\n        if (d.key) {\r\n            const f = this.getField(d.key);\r\n            if (f !== null) {\r\n                if (!d.op && !d.tester && d.val === undefined) {\r\n                    return true;\r\n                }\r\n                if (f._dependsIsOk === true) {\r\n                    v = f.getVal();\r\n                }\r\n            }\r\n        } else if (typeof d.pointer === \"string\") {\r\n            try {\r\n                v = jsonPointer.get(this.getResult(), d.pointer);\r\n            } catch (e) {\r\n                // undefined\r\n            }\r\n        } else {\r\n            return true;\r\n        }\r\n\r\n        if (typeof d.tester === \"function\") {\r\n            return !!d.tester(v, d);\r\n        }\r\n\r\n        if (d.op) {\r\n            if (d.op === \"===\" && d.val === v) { return true; }\r\n            if (d.op === \"!==\" && d.val !== v) { return true; }\r\n            if (d.op === \">=\" && d.val >= v) { return true; }\r\n            if (d.op === \"<=\" && d.val <= v) { return true; }\r\n            if (d.op === \">\" && d.val > v) { return true; }\r\n            if (d.op === \"<\" && d.val < v) { return true; }\r\n            if (d.op === \"in\" && typeof v[d.val] !== \"undefined\") { return true; }\r\n        } else {\r\n            if (d.val === v) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    private _checkFieldDepends(field: Field): boolean {\r\n\r\n        const depends = field.depends;\r\n\r\n        if (!depends || depends.length === 0) {\r\n            field._dependsIsOk = true;\r\n            return true;\r\n        }\r\n\r\n        let result = true;\r\n        let i, l, j, m, d, f, s;\r\n\r\n        for (i = 0, l = depends.length; i < l; i++) {\r\n            d = depends[i];\r\n\r\n            if (d instanceof Array) {\r\n                s = false;\r\n\r\n                for (j = 0, m = d.length; j < m; j++) {\r\n                    if (this._compareDepend(d[j]) === true) {\r\n                        s = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (s === false) {\r\n                    result = false;\r\n                    break;\r\n                }\r\n            } else {\r\n                if (this._compareDepend(d) === false) {\r\n                    result = false;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        field._dependsIsOk = result;\r\n        return result;\r\n    }\r\n\r\n    private _createField(field: Field): this {\r\n\r\n        field._dependsIsOk = (!field.depends || field.depends.length === 0);\r\n\r\n        // field container\r\n        (<any>field).container = new Element(\"div\");\r\n\r\n        // attributes to field container\r\n        if (field.id) {\r\n            field.container.writeAttribute(\"id\", field.id);\r\n        }\r\n        if (field.className) {\r\n            field.container.writeAttribute(\"class\", field.className);\r\n        }\r\n        if (field.attribute) {\r\n            field.container.writeAttribute(field.attribute);\r\n        }\r\n        if (field.style) {\r\n            field.container.setStyle(field.style);\r\n        }\r\n\r\n        // create label\r\n        if (this._nolabel === false) {\r\n            (<any>field).labelElement = new Element(\"label\").insertText(field.label || \"\");\r\n\r\n            new Element(\"div\", { \"class\": \"flagrate-form-field-label\" })\r\n                .insert(field.labelElement)\r\n                .insertTo(field.container);\r\n\r\n            // icon to label\r\n            if (field.icon) {\r\n                field.labelElement.addClassName(\"flagrate-icon\");\r\n                field.labelElement.setStyle({\r\n                    backgroundImage: `url(${field.icon})`\r\n                });\r\n            }\r\n        }\r\n\r\n        // input container\r\n        field._input = new Element(\"div\").insertTo(field.container);\r\n\r\n        // input ready?\r\n        if (field.input && field.input.type) {\r\n            if (typeof field.input.type === \"string\") {\r\n                field.input.type = Form.inputType[<string><any>field.input.type];\r\n            } else if (!field.input.type.create) {\r\n                delete field.input;\r\n            }\r\n        }\r\n\r\n        // init input\r\n        if (field.input && field.input.type) {\r\n            const input = field.input;\r\n\r\n            if (!input.id) {\r\n                input.id = \"flagrate-form-input-\" + (++Form.idCounter);\r\n            }\r\n\r\n            if (this._nolabel === false) {\r\n                field.labelElement.writeAttribute(\"for\", input.id);\r\n            }\r\n\r\n            (<any>input).element = input.type.create.call(input);\r\n\r\n            new Element(\"div\", { \"class\": \"flagrate-form-field-input\" })\r\n                .insert(input.element)\r\n                .insertTo(field._input);\r\n\r\n            input.element.writeAttribute(\"id\", input.id);\r\n\r\n            // value, values is just alias.\r\n            if (input[\"value\"]) {\r\n                input.val = input[\"value\"];\r\n            } else if (input[\"values\"]) {\r\n                input.val = input[\"values\"];\r\n            }\r\n\r\n            // set the default value\r\n            if (input.val !== undefined) {\r\n                input.type.setVal.call(input, input.val);\r\n            }\r\n\r\n            if (input.style) {\r\n                input.element.setStyle(input.style);\r\n            }\r\n\r\n            if (input.attribute) {\r\n                input.element.writeAttribute(input.attribute);\r\n            }\r\n\r\n            // toString is alias for toStr.\r\n            if (typeof input[\"toString\"] === \"boolean\" && input.toStr === undefined) {\r\n                input.toStr = input[\"toString\"] as any as boolean;\r\n            }\r\n\r\n            // init validator\r\n            if (input.validators) {\r\n                input.validators.forEach((v, i) => {\r\n                    if (typeof v === \"string\") {\r\n                        input.validators[i] = Form.inputValidator[<string><any>v];\r\n                    }\r\n                });\r\n            } else {\r\n                input.validators = [];\r\n            }\r\n\r\n            // result block\r\n            input._result = new Element(\"ul\", {\r\n                \"class\": \"flagrate-form-field-result\"\r\n            }).insertTo(field._input);\r\n\r\n            // etc\r\n            if (input.isRequired === true) {\r\n                field.container.addClassName(\"flagrate-required\");\r\n            }\r\n        }\r\n\r\n        // misc\r\n        if (field.element) {\r\n            new Element(\"div\", {\r\n                \"class\": \"flagrate-form-field-element\"\r\n            }).insert(field.element).insertTo(field._input);\r\n        }\r\n        if (field.html) {\r\n            new Element(\"div\", {\r\n                \"class\": \"flagrate-form-field-html\"\r\n            }).insert(field.html).insertTo(field._input);\r\n        }\r\n        if (field.text) {\r\n            new Element(\"p\", {\r\n                \"class\": \"flagrate-form-field-text\"\r\n            }).insertText(field.text).insertTo(field._input);\r\n        }\r\n\r\n        // field methods\r\n        field.visible = () => {\r\n            return (field.container.parentNode !== null && field.container.parentNode === this.element);\r\n        };\r\n\r\n        field.getVal = () => {\r\n\r\n            if (!field.input) {\r\n                return undefined;\r\n            }\r\n\r\n            let result = field.input.type.getVal.call(field.input);\r\n\r\n            if (field.input.toStr === true) {\r\n                result = result.toString();\r\n            }\r\n\r\n            if (field.input.trim === true && typeof result === \"string\") {\r\n                result = result.trim();\r\n            }\r\n\r\n            if (field.input.toNumber === true && typeof result !== \"number\") {\r\n                if (typeof result === \"string\") {\r\n                    result = parseFloat(result);\r\n                } else if (result instanceof Date) {\r\n                    result = result.getTime();\r\n                } else if (typeof result === \"boolean\") {\r\n                    result = (result === true) ? 1 : 0;\r\n                }\r\n            }\r\n\r\n            if (typeof field.input.transform === \"function\") {\r\n                result = field.input.transform.call(field.input, result);\r\n            }\r\n\r\n            return result;\r\n        };\r\n\r\n        field.setVal = val => {\r\n\r\n            if (!field.input) {\r\n                return field;\r\n            }\r\n\r\n            field.input.type.setVal.call(field.input, val);\r\n\r\n            field._inputOnChange();\r\n\r\n            return field;\r\n        };\r\n\r\n        field.validate = callback => {\r\n\r\n            const val = field.getVal();\r\n\r\n            let hasError = false;\r\n            let hasWarning = false;\r\n\r\n            field.input._result.update();\r\n\r\n            // simple validator\r\n            if (field.input.isRequired === true) {\r\n                if (val === undefined) {\r\n                    hasError = true;\r\n                } else if (val === false || val === null) {\r\n                    hasError = true;\r\n                } else if (typeof val === \"number\" && isNaN(val) === true) {\r\n                    hasError = true;\r\n                } else if ((val.length !== undefined) && val.length === 0) {\r\n                    hasError = true;\r\n                }\r\n            }\r\n            if (typeof field.input.min === \"number\") {\r\n                if (typeof val === \"number\") {\r\n                    if (field.input.min > val) {\r\n                        hasError = true;\r\n                    }\r\n                } else if (typeof val === \"string\" && val !== \"\") {\r\n                    if (field.input.min > parseInt(val, 10)) {\r\n                        hasError = true;\r\n                    }\r\n                } else if (val instanceof Array) {\r\n                    if (field.input.min > val.length) {\r\n                        hasError = true;\r\n                    }\r\n                }\r\n            }\r\n            if (typeof field.input.max === \"number\") {\r\n                if (typeof val === \"number\") {\r\n                    if (field.input.max < val) {\r\n                        hasError = true;\r\n                    }\r\n                } else if (typeof val === \"string\" && val !== \"\") {\r\n                    if (field.input.max < parseInt(val, 10)) {\r\n                        hasError = true;\r\n                    }\r\n                } else if (val instanceof Array) {\r\n                    if (field.input.max < val.length) {\r\n                        hasError = true;\r\n                    }\r\n                }\r\n            }\r\n            if (field.input.minLength && field.input.minLength > (val.length || (val.toString && val.toString().length) || 0) && (typeof val === \"string\" && val !== \"\")) {\r\n                hasError = true;\r\n            }\r\n            if (field.input.maxLength && field.input.maxLength < (val.length || (val.toString && val.toString().length) || 0)) {\r\n                hasError = true;\r\n            }\r\n\r\n            // validators\r\n            const q = [];\r\n            field.input.validators.forEach(function (v) {\r\n                q.push(v);\r\n            });\r\n\r\n            function fin() {\r\n                if (field.input._result.innerHTML === \"\") {\r\n                    field.container.removeClassName(\"flagrate-has-result\");\r\n                } else {\r\n                    field.container.addClassName(\"flagrate-has-result\");\r\n                }\r\n\r\n                if (hasError) {\r\n                    field.container.removeClassName(\"flagrate-has-warning\");\r\n                    field.container.removeClassName(\"flagrate-has-success\");\r\n                    field.container.addClassName(\"flagrate-has-error\");\r\n                } else if (hasWarning) {\r\n                    field.container.removeClassName(\"flagrate-has-error\");\r\n                    field.container.removeClassName(\"flagrate-has-success\");\r\n                    field.container.addClassName(\"flagrate-has-warning\");\r\n                } else {\r\n                    field.container.removeClassName(\"flagrate-has-error\");\r\n                    field.container.removeClassName(\"flagrate-has-warning\");\r\n                    field.container.addClassName(\"flagrate-has-success\");\r\n                }\r\n\r\n                field._hasError = hasError;\r\n                field._hasWarning = hasWarning;\r\n\r\n                if (callback) { callback(!hasError); }\r\n            }\r\n\r\n            function done(result, message?) {\r\n\r\n                switch (result) {\r\n                    case true:\r\n                    case \"success\":\r\n                        break;\r\n                    case null:\r\n                    case \"warning\":\r\n                        hasWarning = true;\r\n                        break;\r\n                    case false:\r\n                    case \"error\":\r\n                        hasError = true;\r\n                        break;\r\n                }\r\n\r\n                if (message) {\r\n                    new Element(\"li\").insertText(message).insertTo(field.input._result);\r\n                }\r\n\r\n                run();\r\n            }\r\n\r\n            function run() {\r\n\r\n                if (q.length === 0 || hasError === true) { return fin(); }\r\n\r\n                let v = q.shift();\r\n\r\n                if (typeof v === \"function\") {\r\n                    v.call(field.input, val, done);\r\n                } else if (typeof val === \"string\" && val !== \"\") {\r\n                    if (v.regexp.test(val)) {\r\n                        done(true, v.success);\r\n                    } else {\r\n                        done(false, v.error);\r\n                    }\r\n                } else {\r\n                    done(true);\r\n                }\r\n            }\r\n\r\n            run();\r\n        };\r\n\r\n        field._checkRefs = () => {\r\n\r\n            let rerend = false;\r\n\r\n            for (let i = 0, l = field._refs.length, refField; i < l; i++) {\r\n                refField = field._refs[i];\r\n                if (refField._dependsIsOk !== this._checkFieldDepends(refField)) {\r\n                    refField._checkRefs();\r\n                    rerend = true;\r\n                }\r\n            }\r\n\r\n            if (rerend === true) {\r\n                this._requestRender();\r\n            }\r\n        };\r\n\r\n        field._inputOnChange = () => {\r\n\r\n            // validation\r\n            field.validate();\r\n\r\n            // dependency\r\n            field._checkRefs();\r\n        };\r\n\r\n        // listen change event\r\n        if (field.input && field.input.type) {\r\n            const changeEvents = field.input.type.changeEvents || [\"change\"];\r\n            changeEvents.forEach(eventName => {\r\n                field.input.element.addEventListener(eventName, field._inputOnChange);\r\n            });\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /*?\r\n        flagrate.Form.inputValidator -> Object\r\n\r\n        #### Built-in validators\r\n\r\n        * numeric\r\n        * alphanumeric\r\n\r\n        #### Basic validator\r\n\r\n            // success and error messages are optional\r\n            { regexp: /RegExp/, success: \"String\", error: \"String\" }\r\n            // warning state is not available in this way, see Advanced.\r\n\r\n        #### Advanced validator\r\n\r\n            // Sync or Async validation\r\n            function (input, done) { done(result, message); }// message is optional\r\n\r\n            // Examples\r\n            function (input, done) { done(true); }// success\r\n            function (input, done) { done(null); }// warning\r\n            function (input, done) { done(false); }// error\r\n            function (input, done) { done(\"success\"); }// success\r\n            function (input, done) { done(\"warning\"); }// warning\r\n            function (input, done) { done(\"error\"); }// error\r\n            function (input, done) { done(true, \"...\"); }// success with message\r\n            function (input, done) { done(null, \"...\"); }// warning with message\r\n            function (input, done) { done(false, \"...\"); }// error with message\r\n\r\n        #### Example: adding error message to built-in validators\r\n\r\n            flagrate.Form.inputValidator.numeric.error = \"Please enter a numbers.\";\r\n            flagrate.Form.inputValidator.alphanumeric.error = \"Please enter a alphanumeric.\";\r\n\r\n        #### Example: add the custom validator to Flagrate (to create plugin)\r\n\r\n            flagrate.Form.inputValidator.hostname = {\r\n                regexp: /^[a-z0-9]+(-[a-z0-9]+)*(\\.([a-z0-9]+(-[a-z0-9]+)*))*$/i,\r\n                error: \"Please enter a valid hostname string.\"\r\n            };\r\n    **/\r\n    static inputValidator = {\r\n        numeric: {\r\n            regexp: /^[0-9]+$/\r\n        },\r\n        alphanumeric: {\r\n            regexp: /^[a-z0-9]+$/i\r\n        }\r\n    };\r\n\r\n    /*?\r\n        flagrate.Form.inputType -> Object\r\n\r\n        #### Built-in input types\r\n\r\n        * [text](#text-string-) -> `String`\r\n        * [password](#password-string-) -> `String`\r\n        * [textarea](#textarea-string-) -> `String`\r\n        * [number](#number-number-) -> `Number`\r\n        * [combobox](#combobox-string-) -> `String`\r\n        * [checkbox](#checkbox-boolean-) -> `Boolean`\r\n        * [checkboxes](#checkboxes-array-) -> `Array`\r\n        * [switch](#switch-boolean-) -> `Boolean`\r\n        * [radios](#radios-any-) -> `any`\r\n        * [select](#select-any-array-) -> `any`|`Array`\r\n        * [file](#file-file-) -> `File`\r\n        * [files](#files-filelist-) -> `FileList`\r\n    **/\r\n    static inputType = {\r\n        /*?\r\n            #### text -> `String`\r\n            most basic single-line text input. (uses flagrate.TextInput)\r\n\r\n            * `placeholder` (String):\r\n            * `icon`        (String):\r\n            * `maxLength`   (Number):\r\n        **/\r\n        text: {\r\n            changeEvents: [\"change\", \"keyup\"],\r\n            create() {\r\n                // return to define this.element\r\n                return new TextInput({\r\n                    placeholder: this.placeholder,\r\n                    icon: this.icon,\r\n                    attribute: {\r\n                        maxlength: this.maxLength\r\n                    }\r\n                });\r\n            },\r\n            getVal(): string {\r\n                return this.element.getValue();\r\n            },\r\n            setVal(value: string) {\r\n                this.element.setValue(value);\r\n            },\r\n            enable() {\r\n                this.element.enable();\r\n            },\r\n            disable() {\r\n                this.element.disable();\r\n            }\r\n        },\r\n\r\n        /*?\r\n            #### password -> `String`\r\n            password input. Almost the same to [text](#text).\r\n        **/\r\n        password: {\r\n            changeEvents: [\"change\", \"keyup\"],\r\n            create() {\r\n                return new TextInput({\r\n                    placeholder: this.placeholder,\r\n                    icon: this.icon,\r\n                    attribute: {\r\n                        type: \"password\",\r\n                        maxlength: this.maxLength\r\n                    }\r\n                });\r\n            },\r\n            getVal(): string {\r\n                return this.element.getValue();\r\n            },\r\n            setVal(value: string) {\r\n                this.element.setValue(value);\r\n            },\r\n            enable() {\r\n                this.element.enable();\r\n            },\r\n            disable() {\r\n                this.element.disable();\r\n            }\r\n        },\r\n\r\n        /*?\r\n            #### textarea -> `String`\r\n            textarea input. (uses flagrate.TextArea)\r\n\r\n            * `placeholder` (String):\r\n            * `icon`        (String):\r\n            * `maxLength`   (Number):\r\n        **/\r\n        textarea: {\r\n            changeEvents: [\"change\", \"keyup\"],\r\n            create() {\r\n                return new TextArea({\r\n                    placeholder: this.placeholder,\r\n                    icon: this.icon,\r\n                    attribute: {\r\n                        maxlength: this.maxLength\r\n                    }\r\n                });\r\n            },\r\n            getVal(): string {\r\n                return this.element.getValue();\r\n            },\r\n            setVal(value: string) {\r\n                this.element.setValue(value);\r\n            },\r\n            enable() {\r\n                this.element.enable();\r\n            },\r\n            disable() {\r\n                this.element.disable();\r\n            }\r\n        },\r\n\r\n        /*?\r\n            #### number -> `Number`\r\n            number input. (uses flagrate.TextInput)\r\n\r\n            * `placeholder` (String):\r\n            * `icon`        (String):\r\n            * `min`         (Number):\r\n            * `max`         (Number):\r\n            * `maxLength`   (Number):\r\n        **/\r\n        number: {\r\n            changeEvents: [\"change\", \"keyup\"],\r\n            create() {\r\n                return new TextInput({\r\n                    placeholder: this.placeholder,\r\n                    icon: this.icon,\r\n                    attribute: {\r\n                        type: \"number\",\r\n                        inputmode: \"numeric\",\r\n                        min: this.min,\r\n                        max: this.max,\r\n                        maxlength: this.maxLength\r\n                    }\r\n                });\r\n            },\r\n            getVal(): number {\r\n                return parseFloat(this.element.getValue());\r\n            },\r\n            setVal(value: string) {\r\n                this.element.setValue(value);\r\n            },\r\n            enable() {\r\n                this.element.enable();\r\n            },\r\n            disable() {\r\n                this.element.disable();\r\n            }\r\n        },\r\n\r\n        /*?\r\n            #### combobox -> `String`\r\n            combobox input. (uses flagrate.ComboBox)\r\n\r\n            * `placeholder` (String):\r\n            * `icon`        (String):\r\n            * `maxLength`   (Number):\r\n            * `items`       (Array): of String values.\r\n        **/\r\n        combobox: {\r\n            changeEvents: [\"change\", \"keyup\"],\r\n            create() {\r\n                return new ComboBox({\r\n                    placeholder: this.placeholder,\r\n                    icon: this.icon,\r\n                    items: this.items,\r\n                    attribute: {\r\n                        maxlength: this.maxLength\r\n                    }\r\n                });\r\n            },\r\n            getVal(): string {\r\n                return this.element.getValue();\r\n            },\r\n            setVal(value: string) {\r\n                this.element.setValue(value);\r\n            },\r\n            enable() {\r\n                this.element.enable();\r\n            },\r\n            disable() {\r\n                this.element.disable();\r\n            }\r\n        },\r\n\r\n        /*?\r\n            #### checkbox -> `Boolean`\r\n            Checkbox input. (uses flagrate.Checkbox)\r\n\r\n            * `label`       (String):\r\n            * `labelHTML`   (String):\r\n            * `icon`        (String):\r\n        **/\r\n        checkbox: {\r\n            create() {\r\n                return new Checkbox({\r\n                    icon: this.icon,\r\n                    label: this.label,\r\n                    labelHTML: this.labelHTML\r\n                });\r\n            },\r\n            getVal(): boolean {\r\n                return this.element.isChecked();\r\n            },\r\n            setVal(value: boolean) {\r\n                if (value) {\r\n                    this.element.check();\r\n                } else {\r\n                    this.element.uncheck();\r\n                }\r\n            },\r\n            enable() {\r\n                this.element.enable();\r\n            },\r\n            disable() {\r\n                this.element.disable();\r\n            }\r\n        },\r\n\r\n        /*?\r\n            #### checkboxes -> `Array`\r\n            Checkboxes input. (uses flagrate.Checkboxes)\r\n\r\n            * `items` (Array):\r\n        **/\r\n        checkboxes: {\r\n            create() {\r\n                return new Checkboxes({\r\n                    items: this.items\r\n                });\r\n            },\r\n            getVal() {\r\n                return this.element.getValues();\r\n            },\r\n            setVal(values) {\r\n                this.element.setValues(values);\r\n            },\r\n            enable() {\r\n                this.element.enable();\r\n            },\r\n            disable() {\r\n                this.element.disable();\r\n            }\r\n        },\r\n\r\n        /*?\r\n            #### switch -> `Boolean`\r\n            Switch input. (uses flagrate.Switch)\r\n        **/\r\n        \"switch\": {\r\n            create() {\r\n                return new Switch();\r\n            },\r\n            getVal(): boolean {\r\n                return this.element.isOn();\r\n            },\r\n            setVal(value: boolean) {\r\n                if (value) {\r\n                    this.element.switchOn();\r\n                } else {\r\n                    this.element.switchOff();\r\n                }\r\n            },\r\n            enable() {\r\n                this.element.enable();\r\n            },\r\n            disable() {\r\n                this.element.disable();\r\n            }\r\n        },\r\n\r\n        /*?\r\n            #### radios -> `any`\r\n            Radio buttons input. (uses flagrate.Radios)\r\n\r\n            * `items` (Array):\r\n        **/\r\n        radios: {\r\n            create() {\r\n                return new Radios({\r\n                    items: this.items\r\n                });\r\n            },\r\n            getVal(): string {\r\n                return this.element.getValue();\r\n            },\r\n            setVal(value: string) {\r\n                this.element.setValue(value);\r\n            },\r\n            enable() {\r\n                this.element.enable();\r\n            },\r\n            disable() {\r\n                this.element.disable();\r\n            }\r\n        },\r\n\r\n        /*?\r\n            #### select -> `any`|`array`\r\n            Select input. (uses flagrate.Select)\r\n\r\n            * `items` (Array):\r\n            * `listView` (Boolean; default `false`):\r\n            * `multiple` (Boolean; default `false`):\r\n            * `max` (Number; default `-1`):\r\n            * `selectedIndex` (Number):\r\n            * `selectedIndexes` (Array): of Number\r\n        **/\r\n        select: {\r\n            create() {\r\n                return new Select({\r\n                    items: this.items,\r\n                    listView: this.listView,\r\n                    multiple: this.multiple,\r\n                    max: this.max,\r\n                    selectedIndex: this.selectedIndex,\r\n                    selectedIndexes: this.selectedIndexes\r\n                });\r\n            },\r\n            getVal() {\r\n                return (this.element.multiple === true) ? this.element.getValues() : this.element.getValue();\r\n            },\r\n            setVal(val) {\r\n                if (this.element.multiple === false) {\r\n                    val = [val];\r\n                } else {\r\n                    this.element.deselectAll();\r\n                }\r\n\r\n                for (let i = 0, l = val.length, m = this.element.items.length; i < l; i++) {\r\n                    for (let j = 0; j < m; j++) {\r\n                        if (val[i] === this.element.items[j].value) {\r\n                            this.element.select(j);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            enable() {\r\n                this.element.enable();\r\n            },\r\n            disable() {\r\n                this.element.disable();\r\n            }\r\n        },\r\n\r\n        /*?\r\n            #### file -> `File`\r\n            File input for [File API](http://www.w3.org/TR/file-upload/)\r\n\r\n            * `accept` (String): pass to `accept` attribute value.\r\n            * `acceptTypes` (Array): Array of MIME type string.\r\n        **/\r\n        file: {\r\n            create() {\r\n                return new Element(\"input\", {\r\n                    type: \"file\",\r\n                    accept: this.accept || (this.acceptTypes ? this.acceptTypes.join(\",\") : undefined)\r\n                });\r\n            },\r\n            getVal() {\r\n                return this.element.files[0];\r\n            },\r\n            setVal(file) {\r\n                this.element.files[0] = file;\r\n            },\r\n            enable() {\r\n                this.element.writeAttribute(\"disabled\", false);\r\n            },\r\n            disable() {\r\n                this.element.writeAttribute(\"disabled\", true);\r\n            }\r\n        },\r\n\r\n        /*?\r\n            #### files -> `FileList`\r\n            File input for [File API](http://www.w3.org/TR/file-upload/)\r\n\r\n            * `accept` (String): pass to `accept` attribute value.\r\n            * `acceptTypes` (Array): Array of MIME type string.\r\n        **/\r\n        files: {\r\n            create() {\r\n                return new Element(\"input\", {\r\n                    type: \"file\",\r\n                    accept: this.accept || (this.acceptTypes ? this.acceptTypes.join(\",\") : undefined),\r\n                    multiple: true\r\n                });\r\n            },\r\n            getVal() {\r\n                return this.element.files;\r\n            },\r\n            setVal(files) {\r\n                this.element.files = files;\r\n            },\r\n            enable() {\r\n                this.element.writeAttribute(\"disabled\", false);\r\n            },\r\n            disable() {\r\n                this.element.writeAttribute(\"disabled\", true);\r\n            }\r\n        }\r\n    };\r\n}\r\n\r\nexport function createForm(option?: Option): Form {\r\n    return new Form(option);\r\n}"]}
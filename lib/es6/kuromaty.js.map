{"version":3,"sources":["kuromaty.ts"],"names":[],"mappings":"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","file":"kuromaty.js","sourcesContent":["/*!\n    Copyright 2017 Kuromatch\n*/\nimport * as util from \"./util\";\nimport { Position as _Position, PositionLike, Side as PositionSide } from \"./Position\";\nimport { PositionSet } from \"./PositionSet\";\nimport { Order as _Order, OrderLike } from \"./Order\";\nimport { OrderSet } from \"./OrderSet\";\nimport flagrate from \"flagrate/lib/es6/flagrate\";\nimport { ContextMenu } from \"flagrate/lib/es6/flagrate/context-menu\";\nimport { Decimal } from \"decimal.js-light\";\n\n/** time, open, high, low, close, volume, askDepth, bidDepth, sellVolume, buyVolume */\nexport type Bar = [number, number, number, number, number, number, number, number, number, number];\nconst enum BarColumn {\n    Time,\n    Open,\n    High,\n    Low,\n    Close,\n    Volume,\n    AskDepth,\n    BidDepth,\n    SellVolume,\n    BuyVolume\n}\n\n/** time, ltp, volume, askDepth, bidDepth, sellVolume, buyVolume */\nexport type Tick = [number, number, number, number, number, number, number];\nconst enum TickColumn {\n    Time,\n    Ltp,\n    Volume,\n    AskDepth,\n    BidDepth,\n    SellVolume,\n    BuyVolume\n}\n\nexport interface Options {\n    chartCount?: number;\n    chartTitles?: string[];\n    chartOverlay?: boolean;\n    barWidth?: number;\n    barMargin?: number;\n    decimalPower?: number;\n    boardGroupSize?: number;\n    pricePopEffect?: boolean;\n    quickOrder?: boolean;\n    quickOrderHandler?: (order: QuickOrder) => void;\n}\n\nexport interface QuickOrder {\n    price: number;\n    type: \"limit\" | \"stop-limit\";\n}\n\nexport interface ColorOption {\n    bg?: string;\n    text?: string;\n    textStrong?: string;\n    textWeak?: string;\n    short?: string;\n    long?: string;\n    askOrder?: string;\n    bidOrder?: string;\n    volume?: string;\n    askDepth?: string;\n    bidDepth?: string;\n    askDepthLast?: string;\n    bidDepthLast?: string;\n    grid?: string;\n    border?: string;\n    borderText?: string;\n    borderLTP?: string;\n    borderLTPText?: string;\n    lineMA1?: string;\n    lineMA2?: string;\n    lineMA3?: string;\n}\n\nexport interface Board {\n    asks: BoardItem[];\n    bids: BoardItem[];\n}\n\nexport interface BoardItem {\n    price: number;\n    size: number;\n}\n\nexport interface Chart {\n    title: string;\n    canvas: HTMLCanvasElement;\n    context: CanvasRenderingContext2D;\n    bars: Bar[];\n    hBars: Bar[];\n    _bars: Bar[];\n    ticks: Tick[];\n    board: Board;\n    boardMaxSize: number;\n    range: number;\n    highest: number;\n    highestPrice: number;\n    highestPricePrinted: boolean;\n    lowest: number;\n    lowestPrice: number;\n    lowestPricePrinted: boolean;\n    askPrice: number;\n    bidPrice: number;\n    maxVolume: number;\n    volumeRatio: number;\n    maxDepth: number;\n    minDepth: number;\n    depthRatio: number;\n    latest: number;\n    ratio: number;\n    tickDelta: number;\n    selected: boolean;\n}\n\nexport interface InLayer {\n    canvas: HTMLCanvasElement;\n    context: CanvasRenderingContext2D;\n}\n\nexport type Position = PositionLike;\n\nexport class Kuromaty {\n\n    timePeriod = 1;\n    barIndex = 0;\n    cursorPrice = 0;\n    cursorVolume = 0;\n    cursorBoard = 0;\n    cursorBoardPrice = 0;\n    pinnedPrices: number[] = [];\n    maxBarCount = 8200;\n    hasDepleted = false;\n    color: ColorOption = {\n        bg: \"#fafafa\",\n        text: \"#333333\",\n        textStrong: \"#111111\",\n        textWeak: \"#777777\",\n        short: \"#e9546b\",\n        long: \"#3eb370\",\n        askOrder: \"#ff303e\",\n        bidOrder: \"#17cb00\",\n        volume: \"#9b7cb6\",\n        askDepth: \"rgba(210,179,189,0.21)\",\n        bidDepth: \"rgba(201,210,179,0.25)\",\n        askDepthLast: \"rgba(210,179,189,0.45)\",\n        bidDepthLast: \"rgba(201,210,179,0.55)\",\n        grid: \"#eeeeee\",\n        border: \"#cccccc\",\n        borderText: \"#111111\",\n        borderLTP: \"rgba(255,150,25,0.6)\",\n        borderLTPText: \"#ffffff\",\n        lineMA1: \"#e9e7c6\",\n        lineMA2: \"#c6e6e9\",\n        lineMA3: \"#e9c6e8\"\n    };\n\n    cursorX = -1;\n    cursorY = -1;\n    canvasW = 0;\n    canvasH = 0;\n\n    charts: Chart[];\n    overlay: InLayer;\n    grid: InLayer;\n    canvases: HTMLCanvasElement[];\n    contexts: CanvasRenderingContext2D[];\n\n    private _dpr = window.devicePixelRatio;\n    private _rootContainer: HTMLDivElement;\n    private _chartContainer: HTMLDivElement;\n    private _hasUpdated = false;\n    private _hasRemoved = true;\n    private _afr: number;\n    private _afs = 0;\n    private _pricePops: [number, string, string, number, number, boolean, string][] = [];\n    private _lastPointerdown: [number, number] = [0, 0];\n    private _lastPointerButtons = 0;\n    private _dragStartX: number;\n    private _dragStartI: number;\n    private _decimal: number;\n    private _positions: PositionSet = new PositionSet();\n    private _orders: OrderSet = new OrderSet();\n    private _contextMenu: ContextMenu;\n\n    private __keydownHandler = this._keydownHandler.bind(this);\n\n    constructor(container?: Element, public options: Options = {}) {\n\n        if (typeof options.chartCount !== \"number\") {\n            options.chartCount = 1;\n        }\n        if (options.chartTitles === undefined) {\n            options.chartTitles = [];\n        }\n        if (options.chartOverlay === undefined) {\n            options.chartOverlay = false;\n        }\n        options.barWidth = options.barWidth || 5;\n        options.barMargin = options.barMargin || 3;\n        options.decimalPower = options.decimalPower || 0;\n        this._decimal = parseInt(\"1\" + Array(options.decimalPower + 1).join(\"0\"), 10);\n\n        this._create();\n\n        if (container) {\n            this.insertTo(container);\n        }\n    }\n\n    insertTo(container: Element) {\n\n        container.appendChild(this._rootContainer);\n\n        this._hasRemoved = false;\n\n        this.resize();\n    }\n\n    remove() {\n\n        this._removeListeners();\n\n        this._rootContainer.parentNode.removeChild(this._rootContainer);\n\n        this.canvasW = this.canvasH = 0;\n        this._hasRemoved = true;\n\n        cancelAnimationFrame(this._afr);\n    }\n\n    resize() {\n\n        let w = this.canvasW = this._chartContainer.clientWidth;\n        let h = this.canvasH = this._chartContainer.clientHeight;\n\n        w *= this._dpr;\n        h *= this._dpr;\n\n        this.canvases.forEach(canvas => {\n            canvas.width = w;\n            canvas.height = h;\n        });\n\n        this._hasUpdated = true;\n        \n        this._redraw();\n    }\n\n    zoom(delta: number) {\n\n        this.options.barWidth = Math.min(11, Math.max(1, this.options.barWidth + delta));\n\n        this._hasUpdated = true;\n    }\n\n    update(index: number, bars: Bar[]) {\n\n        this.charts[index].bars = bars;\n\n        this._hasUpdated = true;\n    }\n\n    updateHBars(index: number, hBars: Bar[]) {\n\n        this.charts[index].hBars = hBars;\n\n        this._hasUpdated = true;\n    }\n\n    tick(index: number, tick: Tick) {\n\n        const chart = this.charts[index];\n\n        chart.tickDelta = 0;\n        if (chart.ticks[0] && chart.bars[0] && chart.bars[0][BarColumn.Close] !== tick[TickColumn.Ltp]) {\n            chart.tickDelta = tick[TickColumn.Ltp] - chart.bars[0][BarColumn.Close];\n        }\n        if (!chart.ticks[0] || 1000 < tick[TickColumn.Time] - chart.ticks[0][TickColumn.Time]) {\n            chart.ticks.unshift(tick);\n            if (chart.ticks.length > 250) {\n                chart.ticks.pop();\n            }\n        }\n\n        let lastTime = Date.now() - 1000 * 60;\n        if (chart.bars.length > 0) {\n            lastTime = chart.bars[0][BarColumn.Time];\n        }\n\n        const bar = chart.bars[0];\n\n        const time = tick[TickColumn.Time];\n        if (!bar || new Date(lastTime).getMinutes() !== new Date(time).getMinutes()) {\n            const delta = Math.floor((time - lastTime) / 1000 / 60);\n            for (let i = delta; i > 0; i--) {\n                if (i === 1) {\n                    chart.bars.unshift([\n                        new Date(tick[TickColumn.Time]).setSeconds(0, 0),\n                        tick[TickColumn.Ltp],\n                        tick[TickColumn.Ltp],\n                        tick[TickColumn.Ltp],\n                        tick[TickColumn.Ltp],\n                        tick[TickColumn.Volume],\n                        tick[TickColumn.AskDepth],\n                        tick[TickColumn.BidDepth],\n                        tick[TickColumn.SellVolume],\n                        tick[TickColumn.BuyVolume]\n                    ]);\n                } else {\n                    chart.bars.unshift([\n                        new Date(tick[TickColumn.Time]).setSeconds(0, 0) - (1000 * 60 * (i - 1)),\n                        chart.ticks[0][TickColumn.Ltp],\n                        chart.ticks[0][TickColumn.Ltp],\n                        chart.ticks[0][TickColumn.Ltp],\n                        chart.ticks[0][TickColumn.Ltp],\n                        chart.ticks[0][TickColumn.Volume],\n                        chart.ticks[0][TickColumn.AskDepth],\n                        chart.ticks[0][TickColumn.BidDepth],\n                        chart.ticks[0][TickColumn.SellVolume],\n                        chart.ticks[0][TickColumn.BuyVolume]\n                    ]);\n                }\n\n                if (chart.bars.length > this.maxBarCount) {\n                    chart.bars.pop();\n                }\n            }\n        } else {\n            if (bar[BarColumn.High] < tick[TickColumn.Ltp]) {\n                bar[BarColumn.High] = tick[TickColumn.Ltp];\n            }\n            if (bar[BarColumn.Low] > tick[TickColumn.Ltp]) {\n                bar[BarColumn.Low] = tick[TickColumn.Ltp];\n            }\n            bar[BarColumn.Close] = tick[TickColumn.Ltp];\n            if (bar[BarColumn.Volume] < tick[TickColumn.Volume]) {\n                bar[BarColumn.Volume] = tick[TickColumn.Volume];\n            }\n            bar[BarColumn.AskDepth] = tick[TickColumn.AskDepth];\n            bar[BarColumn.BidDepth] = tick[TickColumn.BidDepth];\n            if (bar[BarColumn.SellVolume] < tick[TickColumn.SellVolume]) {\n                bar[BarColumn.SellVolume] = tick[TickColumn.SellVolume];\n            }\n            if (bar[BarColumn.BuyVolume] < tick[TickColumn.BuyVolume]) {\n                bar[BarColumn.BuyVolume] = tick[TickColumn.BuyVolume];\n            }\n        }\n\n        this._hasUpdated = true;\n    }\n\n    updateBoard(index: number, board: Board) {\n\n        board = util.deepCopy(board);\n\n        const chart = this.charts[index];\n        const groupPrice = util.generatePriceGrouping(this._decimal, this.options.boardGroupSize);\n\n        let boardMaxSize = 0;\n\n        const maxPrice = chart.highest;\n        const minPrice = chart.lowest;\n        function groupUp(boardItems: BoardItem[]) {\n\n            if (boardItems.length === 0) {\n                return [];\n            }\n\n            let current: BoardItem = { price: groupPrice(boardItems[0].price), size: 0 };\n            let currentSize = new Decimal(0);\n            const groupedItems = [current];\n            for (let i = 0; i < boardItems.length; i++) {\n                const price = groupPrice(boardItems[i].price);\n                if (price < minPrice || maxPrice < price) {\n                    break;\n                }\n\n                if (current.price !== price) {\n                    if (boardMaxSize < current.size) {\n                        boardMaxSize = current.size;\n                    }\n                    current = {\n                        price,\n                        size: boardItems[i].size\n                    };\n                    currentSize = new Decimal(current.size);\n                    groupedItems.push(current);\n                } else {\n                    currentSize = currentSize.plus(boardItems[i].size);\n                    current.size = currentSize.toNumber();\n                }\n            }\n\n            if (boardMaxSize < current.size) {\n                boardMaxSize = current.size;\n            }\n\n            return groupedItems;\n        }\n\n        board.asks = groupUp(board.asks);\n        board.bids = groupUp(board.bids);\n\n        chart.board = board;\n        chart.boardMaxSize = boardMaxSize;\n\n        this._hasUpdated = true;\n    }\n\n    setColor(option: ColorOption) {\n\n        for (const key in option) {\n            this.color[key] = option[key];\n        }\n\n        this._chartContainer.style.borderColor = this.color.border;\n    }\n\n    setPositions(positions: PositionLike[]) {\n        this._positions = new PositionSet(positions);\n    }\n\n    setOrders(orders: OrderLike[]) {\n        this._orders = new OrderSet(orders);\n    }\n\n    private _create() {\n        this._rootContainer = document.createElement(\"div\");\n        this._rootContainer.className = \"kuromaty\";\n        this._chartContainer = document.createElement(\"div\");\n        this._chartContainer.className = \"kuromaty-chart\";\n        this._chartContainer.style.borderColor = this.color.border;\n        this._rootContainer.appendChild(this._chartContainer);\n\n        this.charts = [];\n        this.canvases = [];\n        this.contexts = [];\n\n        {\n            this.overlay = {\n                canvas: document.createElement(\"canvas\"),\n                context: null\n            };\n            this.overlay.context = this.overlay.canvas.getContext(\"2d\");\n\n            this.canvases.push(this.overlay.canvas);\n            this.contexts.push(this.overlay.context);\n\n            this.overlay.canvas.addEventListener(\"pointerdown\", this._pointerdownHandler.bind(this));\n            this.overlay.canvas.addEventListener(\"pointerup\", this._pointerupHandler.bind(this));\n            this.overlay.canvas.addEventListener(\"pointermove\", this._pointermoveHandler.bind(this));\n            this.overlay.canvas.addEventListener(\"pointerout\", this._pointeroutHandler.bind(this));\n            this.overlay.canvas.addEventListener(\"wheel\", this._wheelHandler.bind(this)/* , { passive: true } */);\n            this.overlay.canvas.addEventListener(\"contextmenu\", this._contextmenuHandler.bind(this));\n        }\n\n        for (let i = 0; i < this.options.chartCount; i++) {\n            const chart = {\n                title: this.options.chartTitles[i] || \"Untitled\",\n                canvas: document.createElement(\"canvas\"),\n                context: null,\n                bars: [],\n                hBars: [],\n                _bars: [],\n                ticks: [],\n                board: null,\n                boardMaxSize: 0,\n                range: 0,\n                highest: 0,\n                highestPrice: 0,\n                highestPricePrinted: false,\n                lowest: 0,\n                lowestPrice: 0,\n                lowestPricePrinted: false,\n                askPrice: 0,\n                bidPrice: 0,\n                maxVolume: 0,\n                volumeRatio: 0,\n                maxDepth: 0,\n                minDepth: 0,\n                depthRatio: 1,\n                latest: 0,\n                ratio: 1,\n                tickDelta: 0,\n                selected: i === 0\n            };\n            chart.context = chart.canvas.getContext(\"2d\");\n\n            this.charts.push(chart);\n            this.canvases.push(chart.canvas);\n            this.contexts.push(chart.context);\n        }\n\n        {\n            this.grid = {\n                canvas: document.createElement(\"canvas\"),\n                context: null\n            };\n            this.grid.context = this.grid.canvas.getContext(\"2d\");\n\n            this.canvases.push(this.grid.canvas);\n            this.contexts.push(this.grid.context);\n        }\n\n        // insert all canvas\n        this.canvases.reverse();\n        this.contexts.reverse();\n        this.canvases.forEach(canvas => {\n            this._chartContainer.appendChild(canvas);\n        });\n\n        this._addListeners();\n    }\n\n    private _addListeners() {\n\n        window.addEventListener(\"keydown\", this.__keydownHandler);\n    }\n\n    private _removeListeners() {\n\n        window.removeEventListener(\"keydown\", this.__keydownHandler);\n    }\n\n    private _redraw() {\n\n        if (this._afr) {\n            cancelAnimationFrame(this._afr);\n        }\n\n        // initial settings\n        this.contexts.forEach(context => {\n            context.scale(this._dpr, this._dpr);\n            context.imageSmoothingEnabled = false;\n        })\n\n        const tick = () => {\n\n            if (this._hasUpdated && this.canvasW > 40 && this.canvasH > 40) {\n                this._hasUpdated = false;\n                this._draw();\n            }\n\n            if (!this._hasRemoved) {\n                this._afr = requestAnimationFrame(tick);\n            }\n        };\n\n        this._afr = requestAnimationFrame(tick);\n    }\n\n    private _draw() {\n\n        const canvasW = this.canvasW,\n            canvasH = this.canvasH,\n            barW = this.options.barWidth + this.options.barMargin,\n            chartW = canvasW - 45,\n            chartH = canvasH - 16,\n            chartM = barW * Math.max(2, 5 - this.barIndex),\n            chartI = Math.max(0, this.barIndex - 3),\n            barCount = Math.round((chartW - chartM) / barW) - 1,\n            decimal = this._decimal,\n            decimalPower = this.options.decimalPower,\n            period = this.timePeriod;\n\n        let i = 0,\n            j = 0,\n            l = 0,\n            m = this.charts.length,\n            end = false,\n            highest = 0,\n            lowest = Infinity,\n            maxVolume = 0,\n            minVolume = Infinity,\n            maxDepth = 0,\n            minDepth = Infinity,\n            bar: Bar,\n            barH = 0,\n            barDate: Date,\n            barDateMinutes: number,\n            barDateHours: number,\n            barDateDate: number;\n\n        this.hasDepleted = false;\n\n        // pre\n        for (j = 0; j < m; j++) {\n            let chart = this.charts[j];\n\n            chart.context.clearRect(0, 0, canvasW, canvasH);\n\n            if (period === 0 && !chart.selected) {\n                continue;\n            }\n\n            highest = 0;\n            lowest = Infinity;\n            maxVolume = 0;\n            maxDepth = 0;\n            minDepth = Infinity;\n\n            chart._bars = this._getBars(j, chartI, barCount * 2);\n            l = Math.min(barCount, chart._bars.length);\n\n            if (chart.selected) {\n                if (barCount > chart._bars.length && this.maxBarCount > chart.bars.length) {\n                    this.hasDepleted = true;\n                }\n            }\n\n            for (i = 0; i < l; i++) {\n                bar = chart._bars[i];\n                if (!bar) {\n                    break;\n                }\n                if (highest < bar[BarColumn.High]) {\n                    highest = bar[BarColumn.High];\n                }\n                if (lowest > bar[BarColumn.Low]) {\n                    lowest = bar[BarColumn.Low];\n                }\n                if (maxVolume < bar[BarColumn.Volume]) {\n                    maxVolume = bar[BarColumn.Volume];\n                }\n                if (maxDepth < bar[BarColumn.AskDepth]) {\n                    maxDepth = bar[BarColumn.AskDepth];\n                }\n                if (minDepth > bar[BarColumn.AskDepth]) {\n                    minDepth = bar[BarColumn.AskDepth];\n                }\n                if (maxDepth < bar[BarColumn.BidDepth]) {\n                    maxDepth = bar[BarColumn.BidDepth];\n                }\n                if (minDepth > bar[BarColumn.BidDepth]) {\n                    minDepth = bar[BarColumn.BidDepth];\n                }\n            }\n\n            if (chart._bars.length === 0) {\n                return;\n            }\n\n            chart.latest = chart.bars[0][BarColumn.Close];\n            chart.highestPrice = highest;\n            chart.lowestPrice = lowest;\n            chart.highestPricePrinted = false;\n            chart.lowestPricePrinted = false;\n            let priceRatio = chartH / (highest - lowest);\n            chart.highest = highest + Math.round(((chartH / 3) / priceRatio) * decimal) / decimal;\n            chart.lowest = lowest - Math.round(((chartH / 3) / priceRatio) * decimal) / decimal;\n            chart.range = chart.highest - chart.lowest;\n            chart.ratio = chartH / chart.range;\n            chart.maxVolume = maxVolume;\n            chart.volumeRatio = (chartH / 5) / maxVolume;\n            chart.maxDepth = maxDepth;\n            chart.minDepth = minDepth;\n            chart.depthRatio = (chartH / 5) / (maxDepth - minDepth);\n\n            chart.canvas.style.opacity = chart.selected ? \"1\" : \"0.2\";\n\n            // border\n            chart.context.fillStyle = this.color.border;\n            chart.context.fillRect(chartW, 0, 1, chartH);\n            chart.context.fillRect(0, chartH, chartW + 1, 1);\n        }// pre\n\n        this.grid.context.clearRect(0, 0, canvasW, canvasH);\n        this.grid.context.fillStyle = this.color.bg;\n        this.grid.context.fillRect(0, 0, canvasW, canvasH);\n        this.grid.context.textAlign = \"center\";\n\n        this.overlay.context.clearRect(0, 0, canvasW, canvasH);\n\n        // main\n        for (j = 0; j < m; j++) {\n            let chart = this.charts[j];\n            let ctx = chart.context;\n            let barX = chartW - chartM;\n\n            if (period === 0 && !chart.selected) {\n                continue;\n            }\n\n            // bars\n            for (i = 0; i < l; i++) {\n                bar = chart._bars[i];\n                if (!bar || !chart._bars[i + 1]) {\n                    break;\n                }\n                if (i !== 0) {\n                    barX -= barW;\n                }\n\n                // ask/bid depth\n                if (chart.selected) {\n                    ctx.fillStyle = i === 0 && chartI < 1 ? this.color.askDepthLast : this.color.askDepth;\n                    ctx.fillRect(\n                        barX - this.options.barWidth,\n                        0,\n                        barW,\n                        Math.round((bar[BarColumn.AskDepth] - chart.minDepth) * chart.depthRatio)\n                    );\n\n                    ctx.fillStyle = i === 0 && chartI < 1 ? this.color.bidDepthLast : this.color.bidDepth;\n                    ctx.fillRect(\n                        barX - this.options.barWidth,\n                        chartH,\n                        barW,\n                        - Math.round((bar[BarColumn.BidDepth] - chart.minDepth) * chart.depthRatio)\n                    );\n                }\n\n                // volume\n                ctx.fillStyle = this.color.volume;\n                ctx.fillRect(\n                    barX - Math.ceil(this.options.barWidth / 2),\n                    chartH,\n                    1,\n                    - Math.round(bar[BarColumn.Volume] * chart.volumeRatio)\n                );\n\n                if (period !== 0) {\n                    // bar height\n                    barH = Math.round((bar[BarColumn.Open] - bar[BarColumn.Close]) * chart.ratio);\n\n                    // candlestick\n                    ctx.fillStyle = bar[BarColumn.Open] > bar[BarColumn.Close] ? this.color.short : this.color.long;\n                    ctx.fillRect(\n                        barX - this.options.barWidth,\n                        Math.round((chart.highest - bar[BarColumn.Open]) * chart.ratio),\n                        this.options.barWidth,\n                        barH === 0 ? 1 : barH\n                    );\n                    // candlestick (hige)\n                    ctx.fillRect(\n                        barX - Math.ceil(this.options.barWidth / 2),\n                        Math.round((chart.highest - bar[BarColumn.High]) * chart.ratio),\n                        1,\n                        Math.round((bar[BarColumn.High] - bar[BarColumn.Low]) * chart.ratio)\n                    );\n                }\n\n                if (!chart.selected) {\n                    continue;\n                }\n\n                // highest\n                if (period !== 0 && bar[BarColumn.High] === chart.highestPrice) {\n                    this.overlay.context.fillStyle = this.color.long;\n\n                    let hpX = barX - this.options.barWidth / 2;\n                    let hpY = Math.round((chart.highest - bar[BarColumn.High]) * chart.ratio);\n\n                    this.overlay.context.beginPath();\n                    this.overlay.context.moveTo(hpX, hpY - 2);\n                    this.overlay.context.lineTo(hpX + 3, hpY - 5);\n                    this.overlay.context.lineTo(hpX - 3, hpY - 5);\n                    this.overlay.context.fill();\n\n                    if (chart.highestPricePrinted === false) {\n                        chart.highestPricePrinted = true;\n\n                        this.overlay.context.textAlign = (i < l / 2) ? \"right\" : \"left\";\n                        this.overlay.context.fillText(\n                            new Decimal(bar[BarColumn.High]).toFixed(decimalPower),\n                            barX - ((i < l / 2) ? 0 : 5),\n                            hpY - 8\n                        );\n\n                        this._drawBorder(\n                            this.overlay.context,\n                            0,\n                            hpY - 0.5,\n                            chartW,\n                            this.color.long,\n                            [1, 2]\n                        );\n                    }\n                }\n                // lowest\n                if (period !== 0 && bar[BarColumn.Low] === chart.lowestPrice) {\n                    this.overlay.context.fillStyle = this.color.short;\n\n                    let lpX = barX - this.options.barWidth / 2;\n                    let lpY = Math.round((chart.highest - bar[BarColumn.Low]) * chart.ratio);\n\n                    this.overlay.context.beginPath();\n                    this.overlay.context.moveTo(lpX, lpY + 2);\n                    this.overlay.context.lineTo(lpX + 3, lpY + 5);\n                    this.overlay.context.lineTo(lpX - 3, lpY + 5);\n                    this.overlay.context.fill();\n\n                    if (chart.lowestPricePrinted === false) {\n                        chart.lowestPricePrinted = true;\n\n                        this.overlay.context.textAlign = (i < l / 2) ? \"right\" : \"left\";\n                        this.overlay.context.fillText(\n                            new Decimal(bar[BarColumn.Low]).toFixed(decimalPower),\n                            barX - ((i < l / 2) ? 0 : 5),\n                            lpY + 15\n                        );\n\n                        this._drawBorder(\n                            this.overlay.context,\n                            0,\n                            lpY + 0.5,\n                            chartW,\n                            this.color.short,\n                            [1, 2]\n                        );\n                    }\n                }\n\n                // bar date\n                barDate = new Date(bar[BarColumn.Time]);\n                barDateMinutes = barDate.getMinutes();\n                barDateHours = barDate.getHours();\n                barDateDate = barDate.getDate();\n\n                // datetime\n                if (\n                    (period === 0 && i % 10 === 0) ||\n                    (period >= 1 && period < 3 && barDateMinutes % 15 === 0) ||\n                    (period >= 3 && period < 5 && barDateMinutes % 30 === 0) ||\n                    (period >= 5 && period < 10 && barDateMinutes % 60 === 0) ||\n                    (period >= 10 && period < 15 && barDateMinutes % 60 === 0 && barDateHours % 2 === 0) ||\n                    (period >= 15 && period < 30 && barDateMinutes % 60 === 0 && barDateHours % 3 === 0) ||\n                    (period >= 30 && period < 60 && barDateMinutes % 60 === 0 && barDateHours % 6 === 0) ||\n                    (period >= 60 && period < 120 && barDateMinutes % 60 === 0 && barDateHours % 12 === 0) ||\n                    (period >= 120 && period < 240 && barDateHours === 0) ||\n                    (period >= 240 && period < 360 && barDateHours === 0 && barDateDate % 2 === 0) ||\n                    (period >= 360 && period < 720 && barDateHours === 0 && barDateDate % 3 === 0) ||\n                    (period >= 720 && barDateHours === 0 && barDateDate % 7 === 0)\n                ) {\n                    // vertical grid\n                    this.grid.context.fillStyle = this.color.grid;\n                    this.grid.context.fillRect(\n                        barX - Math.ceil(this.options.barWidth / 2),\n                        0,\n                        1,\n                        chartH\n                    );\n\n                    // time\n                    let timeStr;\n                    if (barDateHours === 0 && barDateMinutes === 0) {\n                        timeStr = `${barDate.getMonth() + 1}/${barDateDate}'`;\n                    } else {\n                        timeStr = `${barDateHours}:${util.zeroPadding(barDateMinutes, 2)}`;\n                    }\n                    this.grid.context.fillStyle = this.color.text;\n                    this.grid.context.font = \"10px sans-serif\";\n                    this.grid.context.fillText(\n                        timeStr,\n                        barX - Math.ceil(this.options.barWidth / 2),\n                        canvasH - 4\n                    );\n                }\n            }// bars\n\n            if (chart.selected) {\n                // LTP Position (Y)\n                let ltpp = Math.round((chart.highest - chart.latest) * chart.ratio);\n                if (!ltpp) {\n                    ltpp = Math.round(canvasH / 2);\n                }\n\n                // horizontal grid (price)\n                let lp = Infinity, cp = 0, add = decimal === 1 ? 1000 : 100 / decimal;\n                if (period === 0) {\n                    add /= 100;\n                }\n                for (i = chart.lowest - chart.lowest % add; i < chart.highest; i += add) {\n                    cp = Math.round((chart.highest - i) * chart.ratio);\n                    if (lp - cp < 80 || cp + 30 > chartH) {\n                        continue;\n                    }\n\n                    // grid\n                    this.grid.context.fillStyle = this.color.grid;\n                    this.grid.context.fillRect(\n                        0,\n                        cp,\n                        chartW,\n                        1\n                    );\n\n                    // text\n                    this.grid.context.fillStyle = this.color.textWeak;\n                    this.grid.context.font = \"11px sans-serif\";\n                    this.grid.context.textAlign = \"left\";\n                    this.grid.context.fillText(\n                        new Decimal(i).toFixed(decimalPower),\n                        chartW + 2,\n                        cp + 5,\n                        39\n                    );\n\n                    lp = cp;\n                }\n\n                // Price Range Indicator\n                this._drawVerticalRange(\n                    this.grid.context,\n                    chartW - chartM + barW,\n                    (chart.highest - chart.highestPrice) * chart.ratio,\n                    (chart.highestPrice - chart.lowestPrice) * chart.ratio,\n                    this.color.border,\n                    [2, 1]\n                );\n                let priceRangeLabelY = ((chart.highestPrice - chart._bars[0][BarColumn.High]) > (chart._bars[0][BarColumn.Low] - chart.lowestPrice)) ? ((chart.highest - chart.highestPrice) * chart.ratio + 40) : ((chart.highest - chart.lowestPrice) * chart.ratio - 40);\n                this.grid.context.save();\n                this.grid.context.fillStyle = this.color.bg;\n                this.grid.context.fillRect(\n                    chartW - chartM + barW,\n                    priceRangeLabelY - 10,\n                    1,\n                    12\n                );\n                this.grid.context.textAlign = \"right\";\n                this.grid.context.fillStyle = this.color.textWeak;\n                this.grid.context.font = \"10px sans-serif\";\n                this.grid.context.globalAlpha = 0.6;\n                this.grid.context.fillText(\n                    new Decimal(chart.highestPrice - chart.lowestPrice).toFixed(decimalPower),\n                    chartW - chartM + barW + 6,\n                    priceRangeLabelY\n                );\n                this.grid.context.restore();\n\n                // Last Sell/Buy Volume Indicator (experimental)\n                this.overlay.context.save();\n\n                if (chart._bars[0][BarColumn.SellVolume] > chart._bars[0][BarColumn.BuyVolume]) {\n                    let grad = this.overlay.context.createLinearGradient(0, 1, 0, ltpp - 2);\n                    grad.addColorStop(0, this.color.askOrder);\n                    grad.addColorStop(1, this.color.bg);\n                    this.overlay.context.fillStyle = grad;\n                    this.overlay.context.globalAlpha = (chart._bars[0][BarColumn.SellVolume] - chart._bars[0][BarColumn.BuyVolume]) / chart._bars[0][BarColumn.Volume];\n                    this.overlay.context.fillRect(chartW - 1, 1, -4, ltpp - 2);\n                } else if (chart._bars[0][BarColumn.SellVolume] < chart._bars[0][BarColumn.BuyVolume]) {\n                    let grad = this.overlay.context.createLinearGradient(0, ltpp + 1, 0, chartH);\n                    grad.addColorStop(0, this.color.bg);\n                    grad.addColorStop(1, this.color.bidOrder);\n                    this.overlay.context.fillStyle = grad;\n                    this.overlay.context.globalAlpha = (chart._bars[0][BarColumn.BuyVolume] - chart._bars[0][BarColumn.SellVolume]) / chart._bars[0][BarColumn.Volume];\n                    this.overlay.context.fillRect(chartW - 1, chartH - 1, -4, -(chartH - ltpp - 2));\n                }\n\n                this.overlay.context.restore();\n\n                if (this.cursorX > -1) {\n                    this._drawDepthIndicator(\n                        this.overlay.context,\n                        chartW - chartM - 7,\n                        40,\n                        `Sell Vol. ${new Decimal(chart._bars[0][BarColumn.SellVolume]).toFixed(1)}`,\n                        this.color.askOrder\n                    );\n                    this._drawDepthIndicator(\n                        this.overlay.context,\n                        chartW - chartM - 7,\n                        chartH - 40,\n                        `Buy Vol. ${new Decimal(chart._bars[0][BarColumn.BuyVolume]).toFixed(1)}`,\n                        this.color.bidOrder\n                    );\n                }\n\n                // Last Depth Indicator (v2.25)\n                if (chart._bars[0][BarColumn.AskDepth] && chart._bars[0][BarColumn.BidDepth]) {\n                    this._drawDepthIndicator(\n                        this.overlay.context,\n                        chartW - chartM - 7,\n                        20,\n                        `Ask Depth ${Math.round(chart._bars[0][BarColumn.AskDepth])}`,\n                        this.color.askDepthLast\n                    );\n                    this._drawDepthIndicator(\n                        this.overlay.context,\n                        chartW - chartM - 7,\n                        chartH - 20,\n                        `Bid Depth ${Math.round(chart._bars[0][BarColumn.BidDepth])}`,\n                        this.color.bidDepthLast\n                    );\n                }\n\n                // Ask/Bid Price Indicator (v2.24)\n                if (chart.askPrice && chart.bidPrice) {\n                    let askp = Math.round((chart.highest - chart.askPrice) * chart.ratio);\n                    let bidp = Math.round((chart.highest - chart.bidPrice) * chart.ratio);\n\n                    this._drawPriceTag2(\n                        this.overlay.context,\n                        chartW - chartM + Math.round(barW / 2),\n                        askp,\n                        chartM - Math.round(barW / 2),\n                        chart.askPrice,\n                        this.color.long,\n                        [2, 2]\n                    );\n                    this._drawPriceTag2(\n                        this.overlay.context,\n                        chartW - chartM + Math.round(barW / 2),\n                        bidp,\n                        chartM - Math.round(barW / 2),\n                        chart.bidPrice,\n                        this.color.short,\n                        [2, 2]\n                    );\n                }\n\n                // Board (testing)\n                if (chart.board) {\n                    let board: BoardItem;\n                    const boardItemHeight = Math.round((this.options.boardGroupSize / decimal) * chart.ratio);\n\n                    this.overlay.context.save();\n\n                    this.overlay.context.fillStyle = this.color.askOrder;\n                    for (i = 0; i < chart.board.asks.length - 1; i++) {\n                        board = chart.board.asks[i];\n\n                        this.overlay.context.globalAlpha = Math.min(1, board.size / chart.boardMaxSize + 0.12);\n                        this.overlay.context.fillRect(\n                            chartW - 1,\n                            Math.round((chart.highest - board.price) * chart.ratio),\n                            -(Math.min(19, Math.ceil(board.size / chart.boardMaxSize * 19)) + 1),\n                            -boardItemHeight\n                        );\n                    }\n                    this.overlay.context.fillStyle = this.color.bidOrder;\n                    for (i = 0; i < chart.board.bids.length - 1; i++) {\n                        board = chart.board.bids[i];\n\n                        this.overlay.context.globalAlpha = Math.min(1, board.size / chart.boardMaxSize + 0.12);\n                        this.overlay.context.fillRect(\n                            chartW - 1,\n                            Math.round((chart.highest - board.price) * chart.ratio),\n                            -(Math.min(19, Math.ceil(board.size / chart.boardMaxSize * 19)) + 1),\n                            boardItemHeight\n                        );\n                    }\n\n                    this.overlay.context.restore();\n                }\n\n                // Pinned Price\n                this.pinnedPrices.forEach(price => {\n                    this._drawPriceTag(\n                        this.overlay.context,\n                        0,\n                        Math.round((chart.highest - price) * chart.ratio),\n                        chartW,\n                        price,\n                        price > chart.latest ? this.color.long : this.color.short,\n                        \"#ffffff\",\n                        [3, 3]\n                    );\n                });\n\n                // Positions (testing)\n                this._positions.forEach(position => {\n                    this._drawPositionMarker(\n                        this.overlay.context,\n                        0,\n                        Math.round((chart.highest - position.price) * chart.ratio),\n                        chartW,\n                        position,\n                        chart.latest\n                    );\n                });\n\n                // Orders (testing)\n                this._orders.forEach(order => {\n                    this._drawOrderMarker(\n                        this.overlay.context,\n                        0,\n                        Math.round((chart.highest - order.price) * chart.ratio),\n                        chartW,\n                        order,\n                        chart.latest\n                    );\n                });\n\n                // LTP\n                let color = this.color.borderLTP;\n                if (chart.highestPrice === chart.latest) {\n                    color = this.color.long;\n                } else if (chart.lowestPrice === chart.latest) {\n                    color = this.color.short;\n                }\n                this._drawPriceTag(\n                    this.overlay.context,\n                    0,\n                    ltpp,\n                    chartW,\n                    chart.latest,\n                    color,\n                    this.color.borderLTPText,\n                    []\n                );\n\n                // Price Pop Effect (testing)\n                if (this.options.pricePopEffect) {\n                    this._drawPricePopEffect(chart, decimal, chartW, ltpp);\n                }\n            }\n        } // main\n\n        // technical\n        for (j = 0; j < m; j++) {\n            const chart = this.charts[j];\n            if (!chart.selected) {\n                break;\n            }\n\n            const ctx = chart.context;\n            const barX = chartW - chartM - 0.5;\n\n            if (period === 0) {\n                // tick (special)\n                this._drawSMA(ctx, barX, chart, l, 1, this.color.text);\n            } else {\n                this._drawSMA(ctx, barX, chart, l, 10, this.color.lineMA1);\n                this._drawSMA(ctx, barX, chart, l, 21, this.color.lineMA2);\n                this._drawSMA(ctx, barX, chart, l, 34, this.color.lineMA3);\n            }\n        } // technical\n\n        // datetime\n        barDate = new Date(this.charts[0]._bars[0][BarColumn.Time]);\n        this.grid.context.textAlign = \"right\";\n        this.grid.context.fillStyle = this.color.text;\n        this.grid.context.fillText(\n            `:${util.zeroPadding(barDate.getMinutes(), 2)}`,\n            canvasW - 45,\n            canvasH - 4\n        );\n\n        // cursor\n        this.cursorPrice = 0;\n        if (this.cursorX > 0 && this.cursorY > 30 && this.cursorX < chartW && this.cursorY < chartH) {\n            let pX = this.cursorX - (this.cursorX % barW);\n            i = Math.round((chartW - pX - chartM - this.options.barWidth) / barW);\n            pX = Math.floor(chartW - chartM - (i * barW) - (barW / 2)) - 1;\n\n            // bar line\n            this.grid.context.fillStyle = this.color.grid;\n            this.grid.context.fillRect(\n                pX,\n                0,\n                this.options.barWidth,\n                chartH\n            );\n\n            let chart = this.charts[0];\n            this.cursorPrice = Math.ceil((chart.highest - this.cursorY / chart.ratio) * decimal) / decimal;\n            if (decimal === 1) {\n                this.cursorPrice = Math.round(this.cursorPrice / 50) * 50;\n            } else {\n                this.cursorPrice = Math.round(this.cursorPrice * (decimal / 10)) / (decimal / 10);\n            }\n            const cursorPriceY = Math.round((chart.highest - this.cursorPrice) * chart.ratio);\n\n            // price\n            this._drawPriceTag(\n                this.overlay.context,\n                0,\n                cursorPriceY,\n                chartW,\n                this.cursorPrice,\n                this.color.border,\n                this.color.textStrong,\n                []\n            );\n\n            // board\n            this.cursorBoard = 0;\n            this.cursorBoardPrice = 0;\n            if (chart.board) {\n                if (this.cursorPrice > chart.latest) {\n                    for (j = chart.board.asks.length - 1; j >= 0; j--) {\n                        if (chart.board.asks[j].price <= this.cursorPrice) {\n                            this.cursorBoard = chart.board.asks[j].size;\n                            this.cursorBoardPrice = chart.board.asks[j].price;\n                            break;\n                        }\n                    }\n                }\n                if (this.cursorPrice < chart.latest) {\n                    for (j = chart.board.bids.length - 1; j >= 0; j--) {\n                        if (chart.board.bids[j].price >= this.cursorPrice) {\n                            this.cursorBoard = chart.board.bids[j].size;\n                            this.cursorBoardPrice = chart.board.bids[j].price;\n                            break;\n                        }\n                    }\n                }\n            }\n            this.cursorBoard = Math.round(this.cursorBoard);\n            if (this.cursorBoard > 0) {\n                const cursorBoardPriceY = Math.round((chart.highest - this.cursorBoardPrice) * chart.ratio);\n                \n                this._drawBorder(\n                    this.overlay.context,\n                    chartW - 25,\n                    cursorBoardPriceY + (this.cursorPrice > chart.latest ? -0.5 : +0.5),\n                    10,\n                    this.cursorPrice > chart.latest ? this.color.askOrder : this.color.bidOrder,\n                    [1, 1]\n                );\n\n                this.overlay.context.save();\n\n                this.overlay.context.globalAlpha = 0.8;\n                this.overlay.context.fillStyle = this.color.bg;\n                this.overlay.context.fillRect(\n                    chartW - 29,\n                    cursorBoardPriceY - 7,\n                    -22,\n                    13\n                );\n\n                this.overlay.context.globalAlpha = 1;\n                this.overlay.context.textAlign = \"right\";\n                this.overlay.context.fillStyle = this.cursorPrice > chart.latest ? this.color.askOrder : this.color.bidOrder;\n                this.overlay.context.fillText(\n                    this.cursorBoard.toString(10),\n                    chartW - 29,\n                    cursorBoardPriceY + 3,\n                    20\n                );\n                \n                this.overlay.context.restore();\n            }\n\n            this.overlay.context.save();\n\n            if (i >= 0 && i < chart._bars.length) {\n                // Time Line\n                this.grid.context.fillStyle = this.color.grid;\n                this.grid.context.fillRect(\n                    pX - 13,\n                    chartH,\n                    31,\n                    20\n                );\n                // Time Text\n                barDate = new Date(chart._bars[i][BarColumn.Time]);\n                const barTime = barDate.getHours() === 0 && barDate.getMinutes() === 0 ?\n                    `${barDate.getMonth() + 1}/${barDate.getDate()}'` :\n                    `${barDate.getHours()}:${util.zeroPadding(barDate.getMinutes(), 2)}`;\n                this.grid.context.textAlign = \"center\";\n                this.grid.context.fillStyle = this.color.textStrong;\n                this.grid.context.font = \"10px sans-serif\";\n                this.grid.context.fillText(\n                    barTime,\n                    pX + this.options.barWidth / 2,\n                    canvasH - 4\n                );\n\n                // Bar Info\n                this.overlay.context.textAlign = \"left\";\n                this.overlay.context.fillStyle = this.color.textStrong;\n                this.overlay.context.font = \"12px monospace\";\n                const diff = Math.round((100 - (chart._bars[i][BarColumn.Open] / chart._bars[i][BarColumn.Close] * 100)) * 1000) / 1000;\n                this.overlay.context.fillText(\n                    (\n                        barDate.toLocaleString() +\n                        `  O ${new Decimal(chart._bars[i][BarColumn.Open]).toFixed(decimalPower)}` +\n                        `  H ${new Decimal(chart._bars[i][BarColumn.High]).toFixed(decimalPower)}` +\n                        `  L ${new Decimal(chart._bars[i][BarColumn.Low]).toFixed(decimalPower)}` +\n                        `  C ${new Decimal(chart._bars[i][BarColumn.Close]).toFixed(decimalPower)}` +\n                        `  ${util.toStringWithSign(diff)}%`\n                    ),\n                    10,\n                    20\n                );\n                this.overlay.context.fillText(\n                    \"[価格マーカー] 左クリックで追加・削除\",\n                    10,\n                    40\n                );\n\n                // Volume\n                if (chart._bars[i + 1]) {\n                    this.overlay.context.globalAlpha = 0.8;\n                    this.overlay.context.fillStyle = this.color.bg;\n                    this.overlay.context.fillRect(\n                        pX + (barW / 2) - 17,\n                        (chart.highest - chart.lowestPrice) * chart.ratio + 2,\n                        34,\n                        13\n                    );\n\n                    this.overlay.context.globalAlpha = 1;\n                    this.overlay.context.textAlign = \"center\";\n                    this.overlay.context.font = \"10px sans-serif\";\n                    this.overlay.context.fillStyle = this.color.volume;\n                    this.overlay.context.fillText(\n                        Math.round(chart._bars[i][BarColumn.Volume]).toString(10),\n                        pX + (barW / 2),\n                        (chart.highest - chart.lowestPrice) * chart.ratio + 12,\n                        30\n                    );\n                }\n            }\n\n            this.overlay.context.restore();\n\n            // Total Margin of Positions on Cursor (testing)\n            if (!this._positions.isEmpty() && this.cursorPrice) {\n                const margin = Math.floor(this._positions.marginAgainst(this.cursorPrice));\n                const marginText = util.toStringWithSign(margin);\n\n                this.overlay.context.save();\n\n                this.overlay.context.globalAlpha = 0.8;\n                this.overlay.context.fillStyle = this.color.bg;\n                this.overlay.context.fillRect(\n                    6,\n                    cursorPriceY - 5,\n                    60,\n                    13\n                );\n\n                this.overlay.context.globalAlpha = 1;\n                this.overlay.context.textAlign = \"left\";\n                this.overlay.context.fillStyle = margin < 0 ? this.color.short : this.color.long;\n                this.overlay.context.fillText(\n                    marginText,\n                    10,\n                    cursorPriceY + 5,\n                    56\n                );\n                \n                this.overlay.context.restore();\n            }\n        } else {\n            this.overlay.context.save();\n            this.overlay.context.textAlign = \"left\";\n            this.overlay.context.font = \"11px monospace\";\n            this.overlay.context.fillStyle = this.color.text;\n            this.overlay.context.fillText(\n                \"> \" + this.charts[0].title,\n                10,\n                20\n            );\n            if (this.charts[1]) {\n                this.overlay.context.fillStyle = this.color.textWeak;\n                this.overlay.context.fillText(\n                    \"  \" + this.charts[1].title,\n                    10,\n                    35\n                );\n            }\n            this.overlay.context.restore();\n        } // cursor\n\n        // Total Margin of Positions (testing)\n        if (!this._positions.isEmpty()) {\n            const chart = this.charts[0];\n            const margin = Math.floor(this._positions.marginAgainst(chart.latest));\n            const marginText = `建玉: ${this._positions.size}  評価損益: ${util.toStringWithSign(margin)}`;\n\n            this.overlay.context.save();\n            this.overlay.context.font = \"bold 11px sans-serif\";\n            this.overlay.context.textAlign = \"left\";\n            this.overlay.context.strokeStyle = this.color.bg;\n            this.overlay.context.fillStyle = margin < 0 ? this.color.short : this.color.long;\n            this.overlay.context.strokeText(marginText, 10, 80);\n            this.overlay.context.fillText(marginText, 10, 80);\n            this.overlay.context.restore();\n        }\n\n        if (this._afs !== 0) {\n            this._afs--;\n            this._hasUpdated = true;\n        }\n    }\n\n    private _drawPricePopEffect(chart: Chart, decimal: number, chartW: number, ltpp: number): void {\n\n        let i;\n        for (i = 0; i < this._pricePops.length; i++) {\n            this._pricePops[i][0] *= 0.95;\n            if (this._pricePops[i][0] < 0.08) {\n                this._pricePops.splice(i, 1);\n                i--;\n                continue;\n            }\n            if (this._pricePops[i][5]) {\n                this._pricePops[i][4] -= 0.15;\n            } else {\n                this._pricePops[i][4] += 0.15;\n            }\n        }\n        if (chart.tickDelta !== 0) {\n            this._pricePops.push([\n                1,\n                (Math.round(Math.abs(chart.tickDelta) * decimal) / decimal).toString(10),\n                chart.tickDelta > 0 ? this.color.long : this.color.short,\n                chartW - 12,\n                chart.tickDelta > 0 ? (ltpp - 8) : (ltpp + 16),\n                chart.tickDelta > 0,\n                Math.abs(chart.tickDelta) / chart.latest * 100 > 0.025 ? \"bold 11px sans-serif\" : \"10px sans-serif\"\n            ]);\n\n            this._afs = Math.max(50, this._afs);\n            chart.tickDelta = 0;\n        }\n        this.overlay.context.save();\n        this.overlay.context.textAlign = \"right\";\n        for (i = 0; i < this._pricePops.length; i++) {\n            const [alpha, delta, fillStyle, posX, posY, isBuy, font] = this._pricePops[i];\n\n            this.overlay.context.font = font;\n            this.overlay.context.globalAlpha = alpha;\n            this.overlay.context.fillStyle = fillStyle;\n            this.overlay.context.fillText(\n                delta,\n                posX,\n                posY\n            );\n        }\n        this.overlay.context.restore();\n    }\n\n    private _getBars(index: number, start: number, barCount: number): Bar[] {\n\n        const chart = this.charts[index];\n        const period = this.timePeriod;\n\n        if (chart.bars.length === 0) {\n            return [];\n        }\n        if (period === 1) {\n            return chart.bars.slice(start, start + barCount);\n        } else if (period === 0) {\n            return chart.ticks.slice(start, start + barCount).map(tick => {\n                return <Bar>[\n                    tick[TickColumn.Time],\n                    tick[TickColumn.Ltp],\n                    tick[TickColumn.Ltp],\n                    tick[TickColumn.Ltp],\n                    tick[TickColumn.Ltp],\n                    tick[TickColumn.Volume],\n                    tick[TickColumn.AskDepth],\n                    tick[TickColumn.BidDepth],\n                    tick[TickColumn.SellVolume],\n                    tick[TickColumn.BuyVolume]\n                ];\n            });\n        }\n\n        const bars: Bar[] = [];\n        let date;\n        let backCount = 0;\n\n        // use hBars (experimental)\n        if (period === 60) {\n            bars.push.apply(bars, util.deepCopy(chart.hBars.slice(start, start + barCount)));\n        } else if (period > 60) {\n            const hBars = chart.hBars;\n\n            if (start !== 0) {\n                date = new Date(hBars[0][BarColumn.Time]);\n                backCount = start * (period / 60) + (date.getHours() % (period / 60)) - (period / 60);\n            }\n\n            let i = Math.min(\n                (barCount * (period / 60)) + backCount - 1,\n                hBars.length - 1\n            );\n            for (; i >= backCount; i--) {\n                date = new Date(hBars[i][BarColumn.Time]);\n    \n                if (\n                    bars.length === 0 ||\n                    (\n                        date.getHours() % Math.ceil(period / 60) === 0 &&\n                        bars[0][BarColumn.Time] < hBars[i][BarColumn.Time]\n                    )\n                ) {\n                    bars.unshift([\n                        date.getTime(),\n                        hBars[i][BarColumn.Open],\n                        hBars[i][BarColumn.High],\n                        hBars[i][BarColumn.Low],\n                        hBars[i][BarColumn.Close],\n                        hBars[i][BarColumn.Volume],\n                        hBars[i][BarColumn.AskDepth] || 0,\n                        hBars[i][BarColumn.BidDepth] || 0,\n                        hBars[i][BarColumn.SellVolume] || 0,\n                        hBars[i][BarColumn.BuyVolume] || 0\n                    ]);\n                    continue;\n                }\n    \n                if (bars[0][BarColumn.High] < hBars[i][BarColumn.High]) {\n                    bars[0][BarColumn.High] = hBars[i][BarColumn.High];\n                }\n                if (bars[0][BarColumn.Low] > hBars[i][BarColumn.Low]) {\n                    bars[0][BarColumn.Low] = hBars[i][BarColumn.Low];\n                }\n                bars[0][BarColumn.Close] = hBars[i][BarColumn.Close];\n                bars[0][BarColumn.Volume] += hBars[i][BarColumn.Volume];\n                bars[0][BarColumn.AskDepth] = hBars[i][BarColumn.AskDepth] || 0;\n                bars[0][BarColumn.BidDepth] = hBars[i][BarColumn.BidDepth] || 0;\n                bars[0][BarColumn.SellVolume] += hBars[i][BarColumn.SellVolume] || 0;\n                bars[0][BarColumn.BuyVolume] += hBars[i][BarColumn.BuyVolume] || 0;\n            }\n        }\n\n        const mBars = chart.bars;\n\n        if (start !== 0) {\n            date = new Date(mBars[0][BarColumn.Time]);\n            backCount = start * period + (date.getMinutes() % period) - period;\n        }\n\n        let i = Math.min(\n            (barCount * period) + backCount - 1,\n            mBars.length - 1\n        ) - (bars.length * (period / 60));\n        for (; i >= backCount; i--) {\n            if (bars.length !== 0 && bars[0][BarColumn.Time] > mBars[i][BarColumn.Time]) {\n                continue;\n            }\n\n            date = new Date(mBars[i][BarColumn.Time]);\n\n            if (\n                bars.length === 0 ||\n                (\n                    date.getMinutes() % period === 0 &&\n                    date.getHours() % Math.ceil(period / 60) === 0 &&\n                    bars[0][BarColumn.Time] < mBars[i][BarColumn.Time]\n                )\n            ) {\n                bars.unshift([\n                    date.setSeconds(0, 0),\n                    mBars[i][BarColumn.Open],\n                    mBars[i][BarColumn.High],\n                    mBars[i][BarColumn.Low],\n                    mBars[i][BarColumn.Close],\n                    mBars[i][BarColumn.Volume],\n                    mBars[i][BarColumn.AskDepth] || 0,\n                    mBars[i][BarColumn.BidDepth] || 0,\n                    mBars[i][BarColumn.SellVolume] || 0,\n                    mBars[i][BarColumn.BuyVolume] || 0\n                ]);\n                continue;\n            }\n\n            if (bars[0][BarColumn.High] < mBars[i][BarColumn.High]) {\n                bars[0][BarColumn.High] = mBars[i][BarColumn.High];\n            }\n            if (bars[0][BarColumn.Low] > mBars[i][BarColumn.Low]) {\n                bars[0][BarColumn.Low] = mBars[i][BarColumn.Low];\n            }\n            bars[0][BarColumn.Close] = mBars[i][BarColumn.Close];\n            bars[0][BarColumn.Volume] += mBars[i][BarColumn.Volume];\n            bars[0][BarColumn.AskDepth] = mBars[i][BarColumn.AskDepth] || 0;\n            bars[0][BarColumn.BidDepth] = mBars[i][BarColumn.BidDepth] || 0;\n            bars[0][BarColumn.SellVolume] += mBars[i][BarColumn.SellVolume] || 0;\n            bars[0][BarColumn.BuyVolume] += mBars[i][BarColumn.BuyVolume] || 0;\n        }\n\n        return bars.slice(0, barCount);\n    }\n\n    private _keydownHandler(ev: KeyboardEvent) {\n\n        const active = document.activeElement && document.activeElement.tagName;\n\n        if (active !== \"BODY\" && active !== \"DIV\" && active !== \"BUTTON\") { return; }\n        if (window.getSelection().toString() !== \"\") { return; }\n\n        let activated = false;\n\n        switch (ev.keyCode) {\n            // Space\n            case 32:\n                activated = true;\n                this.barIndex = 0;\n                this._hasUpdated = true;\n                break;\n        }\n\n        if (activated) {\n            ev.stopPropagation();\n            ev.preventDefault();\n        }\n    }\n\n    private _contextmenuHandler(ev: MouseEvent) {\n\n        ev.stopPropagation();\n        ev.preventDefault();\n\n        const price = this.cursorPrice;\n        const limitSide = this.charts[0].latest > price ? \"buy\" : \"sell\";\n        const stopSide = limitSide === \"buy\" ? \"sell\" : \"buy\";\n        const limitSideLabel = limitSide === \"buy\" ? \"買い\" : \"売り\";\n        const stopSideLabel = stopSide === \"buy\" ? \"買い\" : \"売り\";\n\n        const quickOrderItems = [];\n\n        if (this.options.quickOrder) {\n            quickOrderItems.push(\n                {\n                    labelHTML: `<span class=\"kuromaty-label ${limitSide}\">${limitSideLabel}</span> 指値注文...`,\n                    onSelect: () => {\n                        this.options.quickOrderHandler({\n                            price: price,\n                            type: \"limit\"\n                        });\n                    }\n                },\n                {\n                    labelHTML: `<span class=\"kuromaty-label ${stopSide}\">${stopSideLabel}</span> STOP-LIMIT 注文...`,\n                    onSelect: () => {\n                        this.options.quickOrderHandler({\n                            price: price,\n                            type: \"stop-limit\"\n                        });\n                    }\n                }\n            );\n        }\n\n        if (this._contextMenu && this._contextMenu.visible() === true) {\n            this._contextMenu.close();\n        }\n\n        this._contextMenu = new flagrate.ContextMenu({\n            target: this._rootContainer,\n            items: [\n                {\n                    label: `${price}`,\n                    isDisabled: true\n                },\n                <any>\"--\",\n                {\n                    labelHTML: \"価格をコピー\",\n                    onSelect: () => {\n                        util.copyTextToClipboard(price.toString(10));\n                    }\n                },\n                ...quickOrderItems,\n                <any>\"--\",\n                {\n                    label: \"価格マーカー全消去\",\n                    onSelect: () => {\n                        this.pinnedPrices = [];\n                        this._hasUpdated = true;\n                    }\n                },\n                <any>\"--\",\n                {\n                    label: \"キャンセル\"\n                }\n            ]\n        }).open(ev);\n    }\n\n    private _pointerdownHandler(ev: PointerEvent) {\n\n        if (ev.target !== this.overlay.canvas) {\n            return;\n        }\n        ev.preventDefault();\n\n        if (this._contextMenu && this._contextMenu.visible() === true) {\n            this._contextMenu.close();\n            this._contextMenu = null;\n            return;\n        }\n\n        let offsetX = ev.offsetX;\n        let offsetY = ev.offsetY;\n        if (!offsetX && !offsetY && ev.target) {\n            const rect = (<Element>ev.target).getBoundingClientRect();\n            offsetX = ev.clientX - rect.left;\n            offsetY = ev.clientY - rect.top;\n        }\n\n        let buttons = ev.buttons;\n        if (buttons === undefined && ev.which) {\n            switch (ev.which) {\n                case 2:\n                    buttons = 4;\n                    break;\n                case 3:\n                    buttons = 2;\n                    break;\n                default:\n                    buttons = ev.which;\n            }\n        }\n\n        if (buttons === 2) {\n            return;\n        }\n\n        this._lastPointerdown = [offsetX, offsetY];\n        this._lastPointerButtons = buttons;\n        this._dragStartX = undefined;\n    }\n\n    private _pointerupHandler(ev: PointerEvent) {\n\n        if (ev.target !== this.overlay.canvas) {\n            return;\n        }\n\n        let offsetX = ev.offsetX;\n        let offsetY = ev.offsetY;\n        if (!offsetX && !offsetY) {\n            const rect = (<Element>ev.target).getBoundingClientRect();\n            offsetX = ev.clientX - rect.left;\n            offsetY = ev.clientY - rect.top;\n        }\n\n        if (\n            ev.pointerType !== \"touch\" &&\n            this._lastPointerdown[0] === offsetX &&\n            this._lastPointerdown[1] === offsetY\n        ) {\n            if (this._lastPointerButtons === 1) {\n                if (this.cursorPrice) {\n                    const pinnedPriceIndex = this.pinnedPrices.indexOf(this.cursorPrice);\n                    if (pinnedPriceIndex === -1) {\n                        this.pinnedPrices.push(this.cursorPrice);\n                    } else {\n                        this.pinnedPrices.splice(pinnedPriceIndex, 1);\n                    }\n                }\n            }\n        }\n\n        this._lastPointerdown = [0, 0];\n        this._lastPointerButtons = 0;\n\n        this._hasUpdated = true;\n\n        ev.preventDefault();\n    }\n\n    private _pointermoveHandler(ev: PointerEvent) {\n\n        if (ev.target !== this.overlay.canvas) {\n            return;\n        }\n\n        let offsetX = ev.offsetX;\n        let offsetY = ev.offsetY;\n        if (!offsetX && !offsetY) {\n            const rect = (<Element>ev.target).getBoundingClientRect();\n            offsetX = ev.clientX - rect.left;\n            offsetY = ev.clientY - rect.top;\n        }\n\n        let buttons = ev.buttons;\n        if (buttons === undefined && ev.which) {\n            switch (ev.which) {\n                case 2:\n                    buttons = 4;\n                    break;\n                case 3:\n                    buttons = 2;\n                    break;\n                default:\n                    buttons = ev.which;\n            }\n        }\n\n        if (buttons === 1) {\n            ev.preventDefault();\n\n            if (!this._dragStartX) {\n                this._dragStartX = offsetX;\n                this._dragStartI = this.barIndex;\n            }\n            const deltaX = this._dragStartX - offsetX;\n            this.barIndex = this._dragStartI - Math.round(deltaX / (this.options.barWidth + this.options.barMargin));\n            if (this.barIndex < 0) {\n                this.barIndex = 0;\n            } else if (this.barIndex >= this.charts[0].bars.length) {\n                this.barIndex = this.charts[0].bars.length - 1;\n            }\n        } else {\n            this._dragStartX = undefined;\n        }\n\n        this.cursorX = offsetX;\n        this.cursorY = offsetY;\n\n        this._hasUpdated = true;\n    }\n\n    private _pointeroutHandler(ev: PointerEvent) {\n        this.cursorX = this.cursorY = -1;\n    }\n\n    private _wheelHandler(ev: MouseWheelEvent) {\n\n        ev.preventDefault();\n\n        if (ev.ctrlKey) {\n            this.zoom(ev.deltaY < 0 ? 1 : ev.deltaY > 0 ? -1 : 0);\n            return;\n        }\n\n        this.barIndex -= Math.round(ev.deltaX ? ev.deltaX : -(ev.deltaY / 6));\n        if (this.barIndex < 0) {\n            this.barIndex = 0;\n        }\n\n        this._hasUpdated = true;\n    }\n\n    private _drawBorder(ctx: CanvasRenderingContext2D,\n        x: number, y: number, w: number, color: string, lineDash: number[]) {\n\n        ctx.save();\n\n        ctx.globalCompositeOperation = \"destination-over\";\n        ctx.beginPath();\n        ctx.lineWidth = 1;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(lineDash);\n        ctx.moveTo(x, y);\n        ctx.lineTo(x + w, y);\n        ctx.stroke();\n\n        ctx.restore();\n    }\n\n    private _drawVerticalRange(ctx: CanvasRenderingContext2D,\n        x: number, y: number, h: number,\n        color: string, lineDash: number[]) {\n        \n        x += 0.5;\n        y = Math.round(y);\n        h = Math.round(h);\n\n        ctx.save();\n\n        ctx.strokeStyle = color;\n        ctx.fillStyle = color;\n\n        ctx.beginPath();\n        ctx.lineWidth = 1;\n        ctx.setLineDash(lineDash);\n        ctx.moveTo(x, y + 1);\n        ctx.lineTo(x, y + h - 2);\n        ctx.stroke();\n\n        ctx.beginPath();\n        ctx.moveTo(x, y);\n        ctx.lineTo(x + 3, y + 4);\n        ctx.lineTo(x - 3, y + 4);\n        ctx.moveTo(x, y + h);\n        ctx.lineTo(x + 3, y + h - 4);\n        ctx.lineTo(x - 3, y + h - 4);\n        ctx.fill();\n\n        ctx.restore();\n    }\n\n    private _drawPriceTag(ctx: CanvasRenderingContext2D,\n        x: number, y: number, w: number, price: number,\n        color: string, textColor: string, lineDash: number[],\n        tagColor?: string, alpha?: number) {\n\n        this._drawBorder(ctx, x, y + 0.5, w - 5, color, lineDash);\n\n        w += x;\n\n        ctx.save();\n\n        ctx.globalAlpha = alpha || 1;\n        ctx.fillStyle = tagColor || color;\n        ctx.beginPath();\n        ctx.moveTo(w - 5, y);\n        ctx.lineTo(w + 1, y - 6);\n        ctx.lineTo(w + 42, y - 6);\n        ctx.lineTo(w + 43, y - 5);\n        ctx.lineTo(w + 43, y + 6);\n        ctx.lineTo(w + 42, y + 7);\n        ctx.lineTo(w + 1, y + 7);\n        ctx.lineTo(w - 5, y + 1);\n        ctx.fill();\n\n        ctx.textAlign = \"left\";\n        ctx.fillStyle = textColor;\n        ctx.font = \"11px sans-serif\";\n        ctx.fillText(\n            new Decimal(price).toFixed(this.options.decimalPower),\n            w + 2,\n            y + 5,\n            39\n        );\n\n        ctx.restore();\n    }\n\n    private _drawPriceTag2(ctx: CanvasRenderingContext2D,\n        x: number, y: number, w: number, price: number,\n        color: string, lineDash: number[]) {\n\n        this._drawBorder(ctx, x, y + 0.5, w - 5, color, lineDash);\n\n        w += x;\n\n        ctx.save();\n\n        ctx.fillStyle = this.color.bg;\n        ctx.fillRect(\n            w + 1,\n            y - 5,\n            40,\n            10\n        );\n\n        ctx.textAlign = \"left\";\n        ctx.fillStyle = color;\n        ctx.font = \"11px sans-serif\";\n        ctx.fillText(\n            new Decimal(price).toFixed(this.options.decimalPower),\n            w + 2,\n            y + 5,\n            39\n        );\n\n        ctx.restore();\n    }\n\n    private _drawDepthIndicator(ctx: CanvasRenderingContext2D,\n        x: number, y: number, value: string, color: string) {\n\n        this._drawBorder(ctx, x, y + 0.5, -10, color, [2, 2]);\n\n        ctx.save();\n\n        ctx.textAlign = \"right\";\n        ctx.fillStyle = this.color.textWeak;\n        ctx.strokeStyle = this.color.bg;\n        ctx.lineWidth = 2.5;\n        ctx.font = \"10px sans-serif\";\n        ctx.strokeText(\n            value,\n            x - 13,\n            y + 3.5\n        );\n        ctx.fillText(\n            value,\n            x - 13,\n            y + 3.5\n        );\n\n        ctx.restore();\n    }\n\n    private _drawPositionMarker(ctx: CanvasRenderingContext2D,\n        x: number, y: number, w: number, position: _Position, ltp: number) {\n\n        const color = position.side === \"L\" ? this.color.long : this.color.short;\n        const margin = Math.floor(position.marginAgainst(ltp));\n\n        this._drawPriceTag(\n            ctx,\n            x,\n            y,\n            w,\n            position.price.toNumber(),\n            color,\n            \"#ffffff\",\n            [1, 2]\n        );\n\n        ctx.save();\n\n        ctx.globalAlpha = 0.8;\n        ctx.fillStyle = this.color.bg;\n        ctx.fillRect(\n            x + 4,\n            y - 2,\n            80,\n            -13\n        );\n\n        ctx.globalAlpha = 1;\n        ctx.textAlign = \"left\";\n        ctx.fillStyle = color;\n        ctx.fillText(\n            `${position.size} ${position.side}, ${util.toStringWithSign(margin)}`,\n            x + 6,\n            y - 5,\n            76\n        );\n\n        ctx.restore();\n    }\n\n    private _drawOrderMarker(ctx: CanvasRenderingContext2D,\n        x: number, y: number, w: number, order: _Order, ltp: number) {\n\n        let color = this.color.text;\n        switch (order.side) {\n            case \"L\":\n                color = this.color.long;\n                break;\n            case \"S\":\n                color = this.color.short;\n                break;\n        }\n\n        this._drawPriceTag(\n            ctx,\n            x,\n            y,\n            w,\n            order.price.toNumber(),\n            color,\n            \"#ffffff\",\n            [1, 5],\n            null,\n            0.45\n        );\n\n        ctx.save();\n\n        ctx.globalAlpha = 0.8;\n        ctx.fillStyle = this.color.bg;\n        ctx.fillRect(\n            x + 4,\n            y - 2,\n            80,\n            -13\n        );\n\n        ctx.globalAlpha = 1;\n        ctx.textAlign = \"left\";\n        ctx.fillStyle = color;\n        ctx.fillText(\n            `${order.size} ${order.side} ${order.type}`,\n            x + 6,\n            y - 5,\n            76\n        );\n\n        ctx.restore();\n    }\n\n    private _drawSMA(ctx: CanvasRenderingContext2D,\n        x: number, chart: Chart, count: number, value: number, color: string) {\n\n        const barW = this.options.barMargin + this.options.barWidth;\n        x = x + barW;\n\n        ctx.save();\n\n        ctx.strokeStyle = color;\n        ctx.lineWidth = 1;\n        ctx.lineCap = \"round\";\n        ctx.lineJoin = \"round\";\n        ctx.setLineDash([]);\n        ctx.beginPath();\n\n        let i = 0,\n            j,\n            bar,\n            p = 0,\n            y = 0;\n        for (; i < count; i++) {\n            if (!chart._bars[i] || !chart._bars[i + value]) {\n                break;\n            }\n            x -= barW;\n\n            p = 0;\n            for (j = 0; j < value; j++) {\n                p += chart._bars[i + j][BarColumn.Close];\n            }\n            p /= value;\n            y = Math.round((chart.highest - p) * chart.ratio) + 0.5;\n\n            if (i === 0) {\n                ctx.moveTo(x, y);\n            }\n            ctx.lineTo(x, y);\n        }\n\n        ctx.stroke();\n\n        ctx.restore();\n    }\n}\n\nif (window.Kuromaty === undefined) {\n    (<any>window).Kuromaty = Kuromaty;\n}\n\ndeclare global {\n    interface Window {\n        // @ts-ignore\n        Kuromaty: typeof Kuromaty;\n    }\n}\n\nexport default Kuromaty;\n"]}
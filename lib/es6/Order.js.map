{"version":3,"sources":["Order.ts"],"names":[],"mappings":"AAAA;;EAEE;AACF,YAAY,CAAC;AAEb,OAAO,EAAE,OAAO,EAAE,MAAM,kBAAkB,CAAC;AAa3C,MAAM;IAQF,YAAY,KAAgB;QACxB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;QACvB,IAAI,CAAC,KAAK,GAAG,IAAI,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACtC,IAAI,CAAC,QAAQ,GAAG,IAAI,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;QAC5C,IAAI,CAAC,IAAI,GAAG,IAAI,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACpC,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;QACvB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;IAC3B,CAAC;IAED,KAAK,CAAC,KAAY;QAEd,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAClC,MAAM,IAAI,KAAK,CAAC,uCAAuC,CAAC,CAAC;QAC7D,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;YAC3B,MAAM;YACN,MAAM,IAAI,KAAK,CAAC,kCAAkC,CAAC,CAAC;QACxD,CAAC;QAEK,IAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;QACpD,IAAK,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IAClD,CAAC;CACJ","file":"Order.js","sourcesContent":["/*!\n    Copyright 2017 Kuromatch\n*/\n\"use strict\";\n\nimport { Decimal } from \"decimal.js-light\";\n\nexport type Side = \"L\" | \"S\" | \"L/S\";\n\nexport interface OrderLike {\n    time: number;\n    price: number | string;\n    origSize: number | string;\n    size: number | string;\n    side: Side;\n    type: string;\n}\n\nexport class Order {\n    readonly time: number;\n    readonly price: Decimal;\n    readonly origSize: Decimal;\n    readonly size: Decimal;\n    readonly side: Side;\n    readonly type: string;\n\n    constructor(order: OrderLike) {\n        this.time = order.time;\n        this.price = new Decimal(order.price);\n        this.origSize = new Decimal(order.origSize);\n        this.size = new Decimal(order.size);\n        this.side = order.side;\n        this.type = order.type;\n    }\n\n    merge(order: Order) {\n        \n        if (!this.price.equals(order.price)) {\n            throw new Error(\"Can not merge different price orders.\");\n        }\n\n        if (this.side !== order.side) {\n            // 両建て\n            throw new Error(\"Double options is not supported.\");\n        }\n\n        (<any>this).origSize = this.origSize.plus(order.origSize);\n        (<any>this).size = this.size.plus(order.size);\n    }\n}\n\n"]}